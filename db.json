{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/uploads/avatar.jpeg","path":"uploads/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561702946578},{"_id":"themes/hexo-theme-next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1543565350329},{"_id":"themes/hexo-theme-next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1543565897831},{"_id":"themes/hexo-theme-next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1543565350329},{"_id":"themes/hexo-theme-next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1543565350330},{"_id":"themes/hexo-theme-next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1543565350332},{"_id":"themes/hexo-theme-next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1543565350333},{"_id":"themes/hexo-theme-next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1543565897831},{"_id":"themes/hexo-theme-next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1543565897832},{"_id":"themes/hexo-theme-next/_config.yml","hash":"94a189b2fbbf42d31e2792c63fad1d558a63605f","modified":1561696736868},{"_id":"themes/hexo-theme-next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1543565350334},{"_id":"themes/hexo-theme-next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1543565350335},{"_id":"themes/hexo-theme-next/bower.json","hash":"0674f11d3d514e087a176da0e1d85c2286aa5fba","modified":1543565897833},{"_id":"themes/hexo-theme-next/README.cn.md","hash":"2c766b3369ed477bce134a5450dab45bef161504","modified":1543565897832},{"_id":"themes/hexo-theme-next/README.md","hash":"8ce60ce578963eb4e1eb5e33e1efc2fc4779af9c","modified":1543565897833},{"_id":"themes/hexo-theme-next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1543565350337},{"_id":"themes/hexo-theme-next/package.json","hash":"036d3a1346203d2f1a3958024df7f74e7ac07bfe","modified":1543565897851},{"_id":"source/_drafts/coco.md","hash":"2071ff137bb34fc173a3cb0b8fe9aae0c2fb81cd","modified":1561439054010},{"_id":"source/_drafts/stack.md","hash":"7f48938821df1d9441c911784f9c48fe4dedd379","modified":1543286708989},{"_id":"source/_drafts/你说的对.md","hash":"5940c06d385147d65fd93a3cfd89d0c98afda36b","modified":1561702510180},{"_id":"source/_drafts/hello-world-1.md","hash":"f1fb60ee501eb4f58490c296091cd646fcd52014","modified":1561702474037},{"_id":"source/_drafts/数据结构 － 数据结构与算法Javascript描述 - 笔记.md","hash":"a6bd36136f20afeb4cb24e38f81534407d04fc28","modified":1543286708990},{"_id":"source/_drafts/如果你要离去.md","hash":"36edb10e9c7a80bb58e32e8f3aed1f2575d9f455","modified":1561702519519},{"_id":"source/_drafts/我想尽力记住的那些开始和结束.md","hash":"1ce7f5331d8f43d3cc1c3fbb1038653e6e441764","modified":1561702482057},{"_id":"source/_drafts/关于我爱你和你爱我.md","hash":"7961fe54c03227ffa99729276490cc6fb13df6d0","modified":1561702514197},{"_id":"source/_drafts/算法-1.md","hash":"d4a2ba187adb86686aa7cbda1ecb5f30b63fbde0","modified":1543286708990},{"_id":"source/_drafts/七牛云助攻hexo.md","hash":"a6e62feca0ac0f5d50da5723eebbcb8494b48083","modified":1543286708989},{"_id":"source/_drafts/贪心.md","hash":"683f0c732b78b2e00da170584062819d142d6485","modified":1561702498499},{"_id":"source/_posts/性能调优实践.md","hash":"8971f86f39c1caea3347530c26c3824c784dea37","modified":1563180283552},{"_id":"source/categories/index.md","hash":"8f64509252299a3a394a760a567a1b5c2588d8ae","modified":1543286708996},{"_id":"themes/hexo-theme-next/.git/COMMIT_EDITMSG","hash":"ee9d48221dca67bfc7a3c42670061a34ff6a61da","modified":1543566031785},{"_id":"themes/hexo-theme-next/.git/HEAD","hash":"eb96ca3b429d2872ea0713ebdcfacd4c85cd78c6","modified":1543566130297},{"_id":"themes/hexo-theme-next/.git/FETCH_HEAD","hash":"dfab8a264f7c7009bcaadac3df78099da79d055b","modified":1543565851316},{"_id":"themes/hexo-theme-next/.git/ORIG_HEAD","hash":"546fa7c9a4631d8e956003e413293936009aa903","modified":1543565897821},{"_id":"themes/hexo-theme-next/.git/config","hash":"20274de5f12f9a50a8622a85bce361fc1ea550f0","modified":1543565805519},{"_id":"themes/hexo-theme-next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1543565319384},{"_id":"themes/hexo-theme-next/.git/packed-refs","hash":"73d98b65accb206600e9abf05f2d91ccbab62fa6","modified":1543565350320},{"_id":"themes/hexo-theme-next/.git/index","hash":"27bfbc98b100d49ce47b5592018ea417b25ddd05","modified":1543566130291},{"_id":"themes/hexo-theme-next/.github/ISSUE_TEMPLATE.md","hash":"50d48c47162817a3810a9d9ad51104e83947419a","modified":1543565897830},{"_id":"themes/hexo-theme-next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1543565897830},{"_id":"themes/hexo-theme-next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1543565897831},{"_id":"themes/hexo-theme-next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1543565897834},{"_id":"themes/hexo-theme-next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1543565897834},{"_id":"themes/hexo-theme-next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1543565897834},{"_id":"themes/hexo-theme-next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1543565897834},{"_id":"themes/hexo-theme-next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1543565897835},{"_id":"themes/hexo-theme-next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1543565897835},{"_id":"themes/hexo-theme-next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1543565897836},{"_id":"themes/hexo-theme-next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1543565897836},{"_id":"themes/hexo-theme-next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1543565897836},{"_id":"themes/hexo-theme-next/languages/vi.yml","hash":"fd08d3c8d2c62965a98ac420fdaf95e54c25d97c","modified":1543565897837},{"_id":"themes/hexo-theme-next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1543565897837},{"_id":"themes/hexo-theme-next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1543565897838},{"_id":"themes/hexo-theme-next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1543565897837},{"_id":"themes/hexo-theme-next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1543565897838},{"_id":"themes/hexo-theme-next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1543565897849},{"_id":"themes/hexo-theme-next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1543565897849},{"_id":"themes/hexo-theme-next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1543565897849},{"_id":"themes/hexo-theme-next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1543565897850},{"_id":"themes/hexo-theme-next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1543565897850},{"_id":"themes/hexo-theme-next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1543565897850},{"_id":"themes/hexo-theme-next/scripts/merge-configs.js","hash":"81e86717ecfb775986b945d17f0a4ba27532ef07","modified":1543565897851},{"_id":"themes/hexo-theme-next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1543565897851},{"_id":"themes/hexo-theme-next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1543565350372},{"_id":"themes/hexo-theme-next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1543565897835},{"_id":"themes/hexo-theme-next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1543565350445},{"_id":"themes/hexo-theme-next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1543565350446},{"_id":"themes/hexo-theme-next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1543565350445},{"_id":"themes/hexo-theme-next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1543565897835},{"_id":"themes/hexo-theme-next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1543565897836},{"_id":"themes/hexo-theme-next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1543565897830},{"_id":"themes/hexo-theme-next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350403},{"_id":"source/_posts/Bootstrap/Bootstrap - 基础 - 1.md","hash":"2eb39f94ec48d1dfda39334f7b8edac8f46f2b3f","modified":1543286708990},{"_id":"source/_posts/Bootstrap/Bootstrap - 基础 - 2.md","hash":"07bece289df1ac1e4e42fac4054730dae5db4389","modified":1543286708991},{"_id":"source/_posts/HTML5CSS/H5 - 基础 - 2.md","hash":"ede064fb957509de94784f9d95b4ef89671264d4","modified":1543286708991},{"_id":"source/_posts/HTML5CSS/HTML - 基础 - 1.md","hash":"a24a8a48794f62749f6b1c47468d459d97e67a72","modified":1543286708991},{"_id":"source/_posts/JS/JS - 基础 - 1.md","hash":"395c2ed0d4f1fdc8938412f06484eed7b1e6677f","modified":1543286708992},{"_id":"source/_posts/HTML5CSS/[CSS] - 基础 - 1.md","hash":"0450090e788cd5f615df3678f1c0e6642a5c71f3","modified":1543286708991},{"_id":"source/_posts/只言片语/可怜夜半虚前席.md","hash":"5d4af7c2adeb4fb862ae08fafa9ab3e5d36ee305","modified":1543286708993},{"_id":"source/_posts/JS/JS - 基础 - 2.md","hash":"4788843d1a61d2045359fa704e3b98180bb2da2f","modified":1543286708992},{"_id":"source/_posts/JS/JS - 基础 - 3.md","hash":"b051069d51545da68b0380e61cfd43cca458e903","modified":1543286708992},{"_id":"source/_posts/只言片语/关于他们所说的必然.md","hash":"693218e7429121bfbba3e3e0c3e0689ab4b0b310","modified":1543286708993},{"_id":"source/_posts/面试题笔记/css - 1.md","hash":"4bf2a6befa2c90e38baee266809456a43bfd6afb","modified":1543286708995},{"_id":"source/_posts/算法/kmp.md","hash":"a7962a26d0b33c14d9d847a7bc4846bc260e3f65","modified":1543286708994},{"_id":"source/_posts/算法/最长回文子串.md","hash":"d9f6807327e3d73856b4fc33415d208c1c2141dc","modified":1543286708995},{"_id":"source/_posts/面试题笔记/刷题后感 － JS － 3.md","hash":"32c9cc1473c5395fee2aa150c0964ceee5929b95","modified":1543286708995},{"_id":"source/_posts/面试题笔记/刷题后感 - JS - 2.md","hash":"1eab24356062d7298cf4b7880bdf0bf6d3e16b25","modified":1543286708995},{"_id":"source/_posts/面试题笔记/刷题后感——js - 1.md","hash":"a992f55eb63cbbe772d2a01491512be1ac13c614","modified":1543286708995},{"_id":"source/_posts/算法/排序.md","hash":"f45886fb1625d875c1cbdfe85b0a47c9b92b804d","modified":1543286708994},{"_id":"source/_posts/面试题笔记/刷题后感——递归.md","hash":"b22df8d571149548757ca30b82f9a7ea4fcb9b8c","modified":1543286708996},{"_id":"themes/hexo-theme-next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1543565319389},{"_id":"themes/hexo-theme-next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1543565319391},{"_id":"themes/hexo-theme-next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1543565319388},{"_id":"themes/hexo-theme-next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1543565319395},{"_id":"themes/hexo-theme-next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1543565319386},{"_id":"themes/hexo-theme-next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1543565319387},{"_id":"themes/hexo-theme-next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1543565319393},{"_id":"themes/hexo-theme-next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1543565319396},{"_id":"themes/hexo-theme-next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1543565319397},{"_id":"themes/hexo-theme-next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1543565319383},{"_id":"themes/hexo-theme-next/.git/logs/HEAD","hash":"96c9798cd33461621807de2a273c90e1f27c546f","modified":1543566130297},{"_id":"themes/hexo-theme-next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1543565319394},{"_id":"themes/hexo-theme-next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1543565319398},{"_id":"themes/hexo-theme-next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1543565350344},{"_id":"themes/hexo-theme-next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1543565350344},{"_id":"themes/hexo-theme-next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1543565897839},{"_id":"themes/hexo-theme-next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1543565897838},{"_id":"themes/hexo-theme-next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1543565897839},{"_id":"themes/hexo-theme-next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1543565897840},{"_id":"themes/hexo-theme-next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1543565897841},{"_id":"themes/hexo-theme-next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1543565897841},{"_id":"themes/hexo-theme-next/layout/_macro/sidebar.swig","hash":"6a54c3c85ff6b19d275827a327abbf4bd99b2ebf","modified":1543565897840},{"_id":"themes/hexo-theme-next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1543565897839},{"_id":"themes/hexo-theme-next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1543565897842},{"_id":"themes/hexo-theme-next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1543565897841},{"_id":"themes/hexo-theme-next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1543565350352},{"_id":"themes/hexo-theme-next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1543565350352},{"_id":"themes/hexo-theme-next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1543565350356},{"_id":"themes/hexo-theme-next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1543565350356},{"_id":"themes/hexo-theme-next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1543565897843},{"_id":"themes/hexo-theme-next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1543565350366},{"_id":"themes/hexo-theme-next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1543565350367},{"_id":"themes/hexo-theme-next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1543565350367},{"_id":"themes/hexo-theme-next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1543565897848},{"_id":"themes/hexo-theme-next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1543565350367},{"_id":"themes/hexo-theme-next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1543565897848},{"_id":"themes/hexo-theme-next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1543565897848},{"_id":"themes/hexo-theme-next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1543565897852},{"_id":"themes/hexo-theme-next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1543565350373},{"_id":"themes/hexo-theme-next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1543565350373},{"_id":"themes/hexo-theme-next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1543565350373},{"_id":"themes/hexo-theme-next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1543565350374},{"_id":"themes/hexo-theme-next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1543565897852},{"_id":"themes/hexo-theme-next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1543565897853},{"_id":"themes/hexo-theme-next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1543565897852},{"_id":"themes/hexo-theme-next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1543565897853},{"_id":"themes/hexo-theme-next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1543565350403},{"_id":"themes/hexo-theme-next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1543565897869},{"_id":"themes/hexo-theme-next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1543565350404},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1543565350404},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1543565350404},{"_id":"themes/hexo-theme-next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1543565350404},{"_id":"themes/hexo-theme-next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1543565350405},{"_id":"themes/hexo-theme-next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1543565350405},{"_id":"themes/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1543565897870},{"_id":"themes/hexo-theme-next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1543565350405},{"_id":"themes/hexo-theme-next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1543565350405},{"_id":"themes/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1543565897870},{"_id":"themes/hexo-theme-next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543565350406},{"_id":"themes/hexo-theme-next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1543565897870},{"_id":"themes/hexo-theme-next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1543565350406},{"_id":"themes/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1543565897869},{"_id":"themes/hexo-theme-next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1543565350406},{"_id":"themes/hexo-theme-next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1543565350406},{"_id":"themes/hexo-theme-next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1543565350406},{"_id":"themes/hexo-theme-next/source/uploads/avatar.jpeg","hash":"3b5e92296dcac618711d3866f929456b81b7c507","modified":1543565350445},{"_id":"themes/hexo-theme-next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1543565350351},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350358},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350358},{"_id":"themes/hexo-theme-next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350394},{"_id":"themes/hexo-theme-next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350394},{"_id":"themes/hexo-theme-next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350395},{"_id":"themes/hexo-theme-next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350402},{"_id":"themes/hexo-theme-next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1543565350403},{"_id":"themes/hexo-theme-next/.git/objects/0c/dc2681013a21e209172d9bf175f1abf586924a","hash":"76dd5785750d76e737a7e725cf3d6a9f961e376b","modified":1543566031794},{"_id":"themes/hexo-theme-next/.git/objects/3d/9db0756a6f6be440afab68a8d03cd04a2dda2c","hash":"d0d817421855db7c70f7a905091d0d846b9713e3","modified":1543566031781},{"_id":"themes/hexo-theme-next/.git/objects/99/d524db8be9c9a2e865ce9062d7af370bfae7e8","hash":"92e4b97c022868069cb7804cbe1e8d4e86e46dd0","modified":1543566031780},{"_id":"themes/hexo-theme-next/.git/objects/84/25ec7f8832086ea2e536715d728e393050ebb7","hash":"032a9bc71029cb07ab092e7a62447472df5daa45","modified":1543566019046},{"_id":"themes/hexo-theme-next/.git/objects/86/8750f9429dc319a25381bc297f9d87e02d6b48","hash":"2e481789b07a61f3f13ae489582c894bf1c4f378","modified":1543565897898},{"_id":"themes/hexo-theme-next/.git/refs/heads/dev","hash":"451200fa88b16ad6edbe4e0451ee6ba74c40dd6b","modified":1543566130295},{"_id":"themes/hexo-theme-next/.git/refs/heads/master","hash":"451200fa88b16ad6edbe4e0451ee6ba74c40dd6b","modified":1543566031794},{"_id":"themes/hexo-theme-next/.git/refs/tags/v5.1.1","hash":"3caf2cc30e2bc17ce7c8decb48064104d4845453","modified":1543565851313},{"_id":"themes/hexo-theme-next/.git/refs/tags/v5.1.2","hash":"75173e2dd18a6221ff84742ff53d01ac5c6e04b0","modified":1543565851315},{"_id":"themes/hexo-theme-next/.git/refs/tags/v5.1.3","hash":"5eec1427a836e6e34c81dc784bafb33c2ccf48f9","modified":1543565851315},{"_id":"themes/hexo-theme-next/.git/refs/tags/v5.1.4","hash":"66e8b5048a20ce41a8a240072e535d725d62aef4","modified":1543565851316},{"_id":"themes/hexo-theme-next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1543565350350},{"_id":"themes/hexo-theme-next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1543565350351},{"_id":"themes/hexo-theme-next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1543565897842},{"_id":"themes/hexo-theme-next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1543565350353},{"_id":"themes/hexo-theme-next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1543565350353},{"_id":"themes/hexo-theme-next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1543565350354},{"_id":"themes/hexo-theme-next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1543565350354},{"_id":"themes/hexo-theme-next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1543565350355},{"_id":"themes/hexo-theme-next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1543565897843},{"_id":"themes/hexo-theme-next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1543565350357},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1543565897843},{"_id":"themes/hexo-theme-next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1543565350358},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1543565897844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1543565350359},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1543565350360},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1543565350360},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1543565350361},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1543565897844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1543565897844},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1543565350361},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1543565897845},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1543565897845},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1543565350363},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1543565897845},{"_id":"themes/hexo-theme-next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1543565350363},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1543565350364},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1543565897846},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1543565350364},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1543565897846},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1543565350365},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1543565897846},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1543565897847},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1543565897847},{"_id":"themes/hexo-theme-next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1543565897847},{"_id":"themes/hexo-theme-next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1543565350369},{"_id":"themes/hexo-theme-next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1543565350368},{"_id":"themes/hexo-theme-next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1543565897848},{"_id":"themes/hexo-theme-next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1543565350369},{"_id":"themes/hexo-theme-next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1543565350393},{"_id":"themes/hexo-theme-next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1543565897865},{"_id":"themes/hexo-theme-next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1543565897865},{"_id":"themes/hexo-theme-next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1543565897864},{"_id":"themes/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1543565897867},{"_id":"themes/hexo-theme-next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1543565897868},{"_id":"themes/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1543565897868},{"_id":"themes/hexo-theme-next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1543565897869},{"_id":"themes/hexo-theme-next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1543565350407},{"_id":"themes/hexo-theme-next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1543565350407},{"_id":"themes/hexo-theme-next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1543565897870},{"_id":"themes/hexo-theme-next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1543565350408},{"_id":"themes/hexo-theme-next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1543565897871},{"_id":"themes/hexo-theme-next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1543565350408},{"_id":"themes/hexo-theme-next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1543565897871},{"_id":"themes/hexo-theme-next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1543565897872},{"_id":"themes/hexo-theme-next/source/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1543565897872},{"_id":"themes/hexo-theme-next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1543565897871},{"_id":"themes/hexo-theme-next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1543565350409},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1543565350410},{"_id":"themes/hexo-theme-next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1543565350414},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1543565350415},{"_id":"themes/hexo-theme-next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1543565350421},{"_id":"themes/hexo-theme-next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1543565350421},{"_id":"themes/hexo-theme-next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1543565350415},{"_id":"themes/hexo-theme-next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1543565897877},{"_id":"themes/hexo-theme-next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1543565350422},{"_id":"themes/hexo-theme-next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1543565350421},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1543565350424},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1543565350424},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1543565350424},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1543565350425},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1543565350424},{"_id":"themes/hexo-theme-next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1543565350438},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1543565350440},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1543565350439},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1543565350440},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1543565350440},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1543565350440},{"_id":"themes/hexo-theme-next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1543565350440},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1543565897878},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1543565897878},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1543565897879},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1543565897880},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1543565897880},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1543565897880},{"_id":"themes/hexo-theme-next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1543565897879},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1543565897881},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1543565897881},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1543565897881},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1543565897881},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1543565897882},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1543565897883},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1543565897883},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1543565897883},{"_id":"themes/hexo-theme-next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1543565897884},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1543565897885},{"_id":"themes/hexo-theme-next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1543565897884},{"_id":"themes/hexo-theme-next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1543565897885},{"_id":"themes/hexo-theme-next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1543565897885},{"_id":"themes/hexo-theme-next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1543565350441},{"_id":"themes/hexo-theme-next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1543565350442},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1543565350444},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1543565350444},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1543565350444},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-d6a663467207c3cb1ec1506a7e21c4731bb0ed33.idx","hash":"fbaf49a8e54f4aea22e1468248d811cf83be16e1","modified":1543565851254},{"_id":"themes/hexo-theme-next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1543565350439},{"_id":"themes/hexo-theme-next/.git/logs/refs/heads/dev","hash":"b0df4947d4fcb30f6822fe1a616c10b3a54dd829","modified":1543566130296},{"_id":"themes/hexo-theme-next/.git/logs/refs/heads/master","hash":"816687bd5781704dd27395488eeece4485086c40","modified":1543566031795},{"_id":"themes/hexo-theme-next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1543565350322},{"_id":"themes/hexo-theme-next/.git/refs/remotes/origin/dev","hash":"451200fa88b16ad6edbe4e0451ee6ba74c40dd6b","modified":1543566137400},{"_id":"themes/hexo-theme-next/.git/refs/remotes/origin/master","hash":"451200fa88b16ad6edbe4e0451ee6ba74c40dd6b","modified":1543566049662},{"_id":"themes/hexo-theme-next/.git/refs/remotes/upstream/testing","hash":"15660a56eaab85fc3fd3324de8d61dbc2b09b42a","modified":1543565851286},{"_id":"themes/hexo-theme-next/.git/refs/remotes/upstream/dev","hash":"c9abcffd1f03a6a76afa09334100c5003cf895a0","modified":1543565851283},{"_id":"themes/hexo-theme-next/.git/refs/remotes/upstream/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1543565851284},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1543565350368},{"_id":"themes/hexo-theme-next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1543565350368},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1543565897853},{"_id":"themes/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1543565897853},{"_id":"themes/hexo-theme-next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1543565897854},{"_id":"themes/hexo-theme-next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1543565350376},{"_id":"themes/hexo-theme-next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1543565350376},{"_id":"themes/hexo-theme-next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1543565897855},{"_id":"themes/hexo-theme-next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1543565350387},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1543565897863},{"_id":"themes/hexo-theme-next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1543565350391},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1543565897863},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1543565897864},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1543565350392},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1543565350392},{"_id":"themes/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1543565350393},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1543565350396},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1543565350397},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1543565350396},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1543565350397},{"_id":"themes/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1543565897865},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1543565897866},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1543565350397},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1543565350397},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1543565350398},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1543565350399},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"4aac01962520d60b03b23022ab601ad4bd19c08c","modified":1543565897866},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1543565350399},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1543565350400},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1543565350400},{"_id":"themes/hexo-theme-next/.git/refs/remotes/upstream/servant","hash":"ee903ee2112907f4498fdb13674a640c685e95fb","modified":1543565851284},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1543565350401},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1543565897867},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9d16fa3c14ed76b71229f022b63a02fd0f580958","modified":1543565897867},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1543565350401},{"_id":"themes/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1543565350401},{"_id":"themes/hexo-theme-next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1543565897872},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1543565350415},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1543565350417},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1543565350416},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1543565350416},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1543565350417},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1543565350420},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1543565350420},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1543565350422},{"_id":"themes/hexo-theme-next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1543565350423},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1543565897874},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1543565897876},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1543565897876},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1543565350426},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1543565350426},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1543565350427},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1543565350441},{"_id":"themes/hexo-theme-next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1543565350441},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1543565350417},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1543565350421},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-5f752bf19812a50b8b3ab0a8b687debdc9ee4021.idx","hash":"7c4d680707d200e32625d6f5e39e37dd4bc7e3b4","modified":1543565350303},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1543565897875},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1543565350438},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1543565350438},{"_id":"themes/hexo-theme-next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1543565350443},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/origin/HEAD","hash":"cc3916af2120dc1a6ccb6c968e21dd86a2b1c010","modified":1543565350322},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/origin/master","hash":"fe6add9f5aedb46b16f8db3c225a1ebefecd638b","modified":1543566049663},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/origin/dev","hash":"edbdc3288d322688023f1c2afd2bea7576036fb4","modified":1543566137402},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/upstream/servant","hash":"d3eba7ff7646d70bec63215f0305eb0354672584","modified":1543565851285},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/upstream/testing","hash":"7a253355b13c5dfcd00de48f5cbe56ddc12406ae","modified":1543565851286},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/upstream/master","hash":"1b95a2ba140721260a9ee0648881954a07af2d2d","modified":1543565851284},{"_id":"themes/hexo-theme-next/.git/logs/refs/remotes/upstream/dev","hash":"9766bb0ce3a51779ed8497536906749dbd549a0e","modified":1543565851283},{"_id":"themes/hexo-theme-next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1543565897854},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1543565350377},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1543565350378},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1543565350378},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1543565350378},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1543565897855},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1543565350379},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1543565897855},{"_id":"themes/hexo-theme-next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1543565350379},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1543565350380},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1543565350380},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1543565350381},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1543565897856},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1543565897856},{"_id":"themes/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1543565350381},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1543565897856},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1543565350382},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1543565350382},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1543565350383},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1543565897857},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1543565897857},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1543565350383},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1543565350384},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1543565897858},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1543565897858},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1543565350384},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1543565897857},{"_id":"themes/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1543565897858},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1543565897858},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1543565350385},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1543565897859},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1543565897859},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"12937cae17c96c74d5c58db6cb29de3b2dfa14a2","modified":1543565897859},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1543565350386},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1543565350386},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1543565897860},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1543565897860},{"_id":"themes/hexo-theme-next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1543565350387},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1543565350388},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1543565350388},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/full-image.styl","hash":"37e951e734a252fe8a81f452b963df2ba90bfe90","modified":1543565897860},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1543565350388},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1543565897860},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1543565897861},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1543565897861},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1543565897861},{"_id":"themes/hexo-theme-next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1543565897861},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1543565350389},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1543565350389},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1543565350389},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1543565897862},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1543565897862},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1543565350390},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1543565350390},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1543565897862},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1543565897863},{"_id":"themes/hexo-theme-next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1543565897863},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1543565350398},{"_id":"themes/hexo-theme-next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1543565350398},{"_id":"themes/hexo-theme-next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1543565350400},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1543565350418},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1543565350419},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1543565350419},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1543565350418},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1543565350419},{"_id":"themes/hexo-theme-next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1543565350420},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1543565897873},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1543565897873},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1543565897873},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1543565897874},{"_id":"themes/hexo-theme-next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1543565897874},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1543565350431},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1543565350437},{"_id":"themes/hexo-theme-next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1543565350377},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1543565350429},{"_id":"themes/hexo-theme-next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1543565350413},{"_id":"themes/hexo-theme-next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1543565897888},{"_id":"themes/hexo-theme-next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1543565350435},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-5f752bf19812a50b8b3ab0a8b687debdc9ee4021.pack","hash":"c148550761db9eb5c90357ffa939a13aaad19b70","modified":1543566031000},{"_id":"themes/hexo-theme-next/.git/objects/pack/pack-d6a663467207c3cb1ec1506a7e21c4731bb0ed33.pack","hash":"a67ec7c002bd8572abf9f30daff97a0bb11ed556","modified":1543566031000},{"_id":"public/atom.xml","hash":"ea5aa9ddec1df42f2067686ac56c47c2be09fa7f","modified":1561702702169},{"_id":"public/search.xml","hash":"f68dd214664f153a0f5f3e08f9676fd97ec5c2e2","modified":1561702702169},{"_id":"public/sitemap.xml","hash":"2c5621d806b05ac96fc6906d965ac3848e3f9116","modified":1561702702179},{"_id":"public/categories/index.html","hash":"e031f6bc68a9381d97b808ac15db709d7b36a230","modified":1561702702309},{"_id":"public/2018/11/27/算法/最长回文子串/index.html","hash":"6ab28621ec90710b6bc69535416f22b91cdab7e3","modified":1561702702309},{"_id":"public/2018/11/27/JS/JS - 基础 - 3/index.html","hash":"6d48ac3b7e64821e87cb4d04002bb843b5e5a606","modified":1561702702311},{"_id":"public/2017/02/20/Bootstrap/Bootstrap - 基础 - 2/index.html","hash":"fd129166fe6888182abede15246cfbb966c45f0f","modified":1561702702311},{"_id":"public/2017/02/17/Bootstrap/Bootstrap - 基础 - 1/index.html","hash":"bcd1729ab31d10d7ed60697f00ab01be687765b8","modified":1561702702311},{"_id":"public/2017/02/16/面试题笔记/刷题后感 － JS － 3/index.html","hash":"34bc4727f192ad9f42403865fc80718631df83ce","modified":1561702702311},{"_id":"public/2017/02/14/JS/JS - 基础 - 1/index.html","hash":"e9a428d9e34ed7c12c7747706ad5154c3f2f735d","modified":1561702702311},{"_id":"public/2017/02/14/面试题笔记/刷题后感 - JS - 2/index.html","hash":"553239e1b87235f644f5448f8436dbaf4a7eb3d0","modified":1561702702311},{"_id":"public/2017/02/13/面试题笔记/css - 1/index.html","hash":"369bdf652bb412911e5867ba44f5c4d97d6fb48e","modified":1561702702311},{"_id":"public/2017/02/11/只言片语/关于他们所说的必然/index.html","hash":"5812ffda6e980bff74021d151b60048a0f432658","modified":1561702702311},{"_id":"public/archives/2017/page/2/index.html","hash":"a642d4593d504c8ecda289eedfd4a2a7ff0799fc","modified":1561702702311},{"_id":"public/archives/2017/02/page/2/index.html","hash":"1294300c1e1278769db6aa76cabfbd3b40b0906d","modified":1561702702311},{"_id":"public/archives/2017/03/index.html","hash":"223ca68a77ece42579955c4984aa70ea95e15885","modified":1561702702311},{"_id":"public/archives/2018/index.html","hash":"0462cba44d373ea240f0e062eccdd091b8ffdbe1","modified":1561702702312},{"_id":"public/archives/2018/11/index.html","hash":"afc6ae10a1ae73e9253796a0677e2689842f6d30","modified":1561702702312},{"_id":"public/categories/tech/index.html","hash":"b5a4e82e773daa4f2ed04e19443573a7b9a91b52","modified":1561702702312},{"_id":"public/categories/tech/page/2/index.html","hash":"b30df659ba6e8d62c07bc798ddcd55ef7cbb2d70","modified":1561702702312},{"_id":"public/categories/tech/algorithm/index.html","hash":"8f5344a0b94a55302923fc33dde8deeca3fbc861","modified":1561702702312},{"_id":"public/categories/tech/htmlcss/index.html","hash":"d4943318dfe52ab59f528878a358294145e9cefa","modified":1561702702312},{"_id":"public/categories/tech/js/index.html","hash":"917d380b5a628140593724b91bc8f93fd02b6a3a","modified":1561702702312},{"_id":"public/categories/lt/index.html","hash":"ccc056aa9ddf187c5445b8760c03678067f8b25e","modified":1561702702312},{"_id":"public/categories/st/index.html","hash":"a0df3ebe4ec96d7bafe3dda0f60f6a95996f2d81","modified":1561702702312},{"_id":"public/categories/tech/interview/index.html","hash":"a9266c74313d2aef287f76e1f1acc8b8911c210b","modified":1561702702312},{"_id":"public/2017/03/02/只言片语/可怜夜半虚前席/index.html","hash":"8b0c8154e15a5030ed9f21f74a4d9555e3a05452","modified":1561702702312},{"_id":"public/2017/02/25/算法/排序/index.html","hash":"70da2798a7413dd6584310502dc2d763c3690981","modified":1561702702312},{"_id":"public/2017/02/25/算法/kmp/index.html","hash":"48ddded177a1d6eb02481dbf7815170194949d71","modified":1561702702312},{"_id":"public/2017/02/16/HTML5CSS/H5 - 基础 - 2/index.html","hash":"159faa06a8f1b1db2d2b891e97ef87ca3cbe649d","modified":1561702702312},{"_id":"public/2017/02/15/JS/JS - 基础 - 2/index.html","hash":"1215e8b31348e3b6bd6085eca1bd06323f24d01d","modified":1561702702312},{"_id":"public/2017/02/13/面试题笔记/刷题后感——js - 1/index.html","hash":"a5a58db33cd37610d96ea681ef010dc54f0ea32c","modified":1561702702313},{"_id":"public/2017/02/12/HTML5CSS/[CSS] - 基础 - 1/index.html","hash":"e5a1582fdece2f60ab0a88b67e4cca184aa9fade","modified":1561702702313},{"_id":"public/2017/02/12/面试题笔记/刷题后感——递归/index.html","hash":"2f42ef175d4c22cb40e6c892002679ad96e81c76","modified":1561702702313},{"_id":"public/2017/02/11/HTML5CSS/HTML - 基础 - 1/index.html","hash":"a84909c3b0f59b517490d75ea1a60b6167d33d10","modified":1561702702313},{"_id":"public/archives/index.html","hash":"1ffa8ac2fa128803ac5750a39d00074e8ec949d8","modified":1561702702313},{"_id":"public/archives/page/2/index.html","hash":"249d86da11d160a95d184f23677339f431bc2628","modified":1561702702313},{"_id":"public/archives/2017/index.html","hash":"8f7843fcd016ebabb31d81c836961b891f0a6e63","modified":1561702702313},{"_id":"public/archives/2017/02/index.html","hash":"3d94ea89676c0c7f706f1de80890cd84450829cb","modified":1561702702313},{"_id":"public/index.html","hash":"4974c46cb6e8ad458f119ceac61ea21f813d976a","modified":1561702702313},{"_id":"public/page/2/index.html","hash":"fad6b8e1c2e8ea40ea46c29ff486fb85e1c098ff","modified":1561702702313},{"_id":"public/archives/2019/index.html","hash":"c9a53e2e189144f5c375cb467a13a77ea6813127","modified":1561702702319},{"_id":"public/archives/2019/06/index.html","hash":"0f4ef0af753d203cb229494aac58e5a7d60e6959","modified":1561702702319},{"_id":"public/2019/06/28/性能调优实践/index.html","hash":"37c47023feb887f1ba6d9db94c9b031191f59a06","modified":1561702702319},{"_id":"public/CNAME","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1561702974209},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1561702702325},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1561702702325},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1561702702326},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1561702702326},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1561702702326},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1561702702326},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1561702702326},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1561702702326},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1561702702326},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1561702702326},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1561702702326},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561702702326},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1561702702327},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1561702702327},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1561702702327},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1561702702327},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1561702702327},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1561702702327},{"_id":"public/uploads/avatar.jpeg","hash":"3b5e92296dcac618711d3866f929456b81b7c507","modified":1561702702327},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1561702702327},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1561702702327},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1561702702327},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1561702702327},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1561702702327},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1561702702327},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1561702702327},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1561702702327},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1561702702327},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1561702702327},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1561702702327},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1561702702327},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1561702702327},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1561702702327},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1561702702328},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1561702702707},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1561702702720},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1561702702735},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1561702702735},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1561702702735},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1561702702735},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1561702702736},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1561702702736},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1561702702736},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1561702702736},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1561702702736},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1561702702736},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1561702702736},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1561702702736},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1561702702736},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1561702702736},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1561702702736},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1561702702736},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1561702702736},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1561702702736},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1561702702736},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1561702702736},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1561702702736},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1561702702736},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1561702702736},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1561702702736},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1561702702737},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1561702702737},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1561702702737},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1561702702737},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1561702702737},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1561702702737},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1561702702737},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1561702702737},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1561702702737},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1561702702738},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1561702702738},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1561702702738},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1561702702738},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1561702702738},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1561702702738},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1561702702738},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1561702702738},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1561702702738},{"_id":"public/css/main.css","hash":"3aae6e043173d4573ffb7158f1cb2691c3b7cde9","modified":1561702702738},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1561702702738},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1561702702738},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1561702702738},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1561702702738},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1561702702738},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1561702702739},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1561702702739},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1561702702739},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1561702702739},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1561702702739},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1561702702739},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1561702702739},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1561702702739},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1561702702739},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1561702702739},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1561702702739},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1561702702739},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1561702702739},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1561702702739},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1561702702740},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1561702702740},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1561702702740},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1561702702740},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1561702702769},{"_id":"source/_drafts/关于他们所说的必然.md","hash":"693218e7429121bfbba3e3e0c3e0689ab4b0b310","modified":1563180033922},{"_id":"source/_drafts/Bootstrap/Bootstrap - 基础 - 1.md","hash":"2eb39f94ec48d1dfda39334f7b8edac8f46f2b3f","modified":1543286708990},{"_id":"source/_drafts/Bootstrap/Bootstrap - 基础 - 2.md","hash":"07bece289df1ac1e4e42fac4054730dae5db4389","modified":1543286708991}],"Category":[{"name":"学海无涯我游啊游","_id":"cjxfpgr6p0004n9v27d0r6avc"},{"name":"数据结构算法","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgr6t0009n9v2x5yjum6a"},{"name":"HTML/css（HTML5/css3)","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrc7000pn9v2vebztxov"},{"name":"Javascript","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcd0011n9v2j4mb6zwr"},{"name":"长叨叨","_id":"cjxfpgrce0016n9v2ny4z0o9t"},{"name":"短逼逼","_id":"cjxfpgrck001ln9v2ors24ewq"},{"name":"去特么的面试题","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm001pn9v2p0ygp8lx"},{"name":"-tech","_id":"cjy46t17i000bgxv2n8lhx42p"},{"name":"other","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjy46uzft000egxv20gsj38cp"},{"name":"其他","parent":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjy46v25k000ggxv2gl3tlcms"}],"Data":[],"Page":[{"title":"分类","date":"2017-03-09T08:46:04.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-03-09 16:46:04\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-11-27T02:45:08.996Z","path":"categories/index.html","layout":"page","_id":"cjxfpgr6l0001n9v20lqc2g5j","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"stack","_content":"包含最小值的栈\n1.0 锉逼写法 －> pop完遍历找最小 TT\n# -*- coding:utf-8 -*-\nclass Solution:\n    def __init__(self):\n        self.data = []\n        self.minEle = []\n    def push(self, node):\n        # write code here\n        self.data.append(node)\n        if len(self.minEle) == 0:\n            self.minEle.append(node)\n        if self.minEle[0] > node:\n            self.minEle[0] = node\n        return\n    def pop(self):\n        # write code here\n        cur = self.data.pop()\n        if cur == self.minEle[0] and len(self.data) > 0:\n            self.minEle[0] = self.data[0]\n            for i in range(len(self.data)):\n                if self.data[i] < self.minEle[0]:\n                    self.minEle[0] = data[i]\n        return cur\n    def top(self):\n        # write code here\n        return self.data[0]\n    def min(self):\n        # write code here\n        return self.minEle[0]\n\n----\n\n2.0 空间换时间（废话），minEle也维护一个栈\n# -*- coding:utf-8 -*-\nclass Solution:\n    def __init__(self):\n        self.data = []\n        self.minEle = []\n    def push(self, node):\n        # write code hedre\n        self.data.append(node)\n        if len(self.minEle) == 0:\n            self.minEle.append(node)\n        if self.minEle[0] > node:\n            self.minEle.append(node)\n        else:\n            self.minEle.append(self.minEle[-1])\n        return\n    def pop(self):\n        # write code here\n        cur = self.data.pop()\n        self.minEle.pop()\n        return cur\n    def top(self):\n        # write code here\n        return self.data[0]\n    def min(self):\n        # write code here\n        return self.minEle[-1]\n","source":"_drafts/stack.md","raw":"---\ntitle: stack\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ntags:\n---\n包含最小值的栈\n1.0 锉逼写法 －> pop完遍历找最小 TT\n# -*- coding:utf-8 -*-\nclass Solution:\n    def __init__(self):\n        self.data = []\n        self.minEle = []\n    def push(self, node):\n        # write code here\n        self.data.append(node)\n        if len(self.minEle) == 0:\n            self.minEle.append(node)\n        if self.minEle[0] > node:\n            self.minEle[0] = node\n        return\n    def pop(self):\n        # write code here\n        cur = self.data.pop()\n        if cur == self.minEle[0] and len(self.data) > 0:\n            self.minEle[0] = self.data[0]\n            for i in range(len(self.data)):\n                if self.data[i] < self.minEle[0]:\n                    self.minEle[0] = data[i]\n        return cur\n    def top(self):\n        # write code here\n        return self.data[0]\n    def min(self):\n        # write code here\n        return self.minEle[0]\n\n----\n\n2.0 空间换时间（废话），minEle也维护一个栈\n# -*- coding:utf-8 -*-\nclass Solution:\n    def __init__(self):\n        self.data = []\n        self.minEle = []\n    def push(self, node):\n        # write code hedre\n        self.data.append(node)\n        if len(self.minEle) == 0:\n            self.minEle.append(node)\n        if self.minEle[0] > node:\n            self.minEle.append(node)\n        else:\n            self.minEle.append(self.minEle[-1])\n        return\n    def pop(self):\n        # write code here\n        cur = self.data.pop()\n        self.minEle.pop()\n        return cur\n    def top(self):\n        # write code here\n        return self.data[0]\n    def min(self):\n        # write code here\n        return self.minEle[-1]\n","slug":"stack","published":0,"date":"2018-11-27T02:45:08.989Z","updated":"2018-11-27T02:45:08.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6m0002n9v205s05obf","content":"<p>包含最小值的栈<br>1.0 锉逼写法 －&gt; pop完遍历找最小 TT</p>\n<h1 id=\"coding-utf-8\"><a href=\"#coding-utf-8\" class=\"headerlink\" title=\"-- coding:utf-8 --\"></a>-<em>- coding:utf-8 -</em>-</h1><p>class Solution:<br>    def <strong>init</strong>(self):<br>        self.data = []<br>        self.minEle = []<br>    def push(self, node):</p>\n<pre><code>    # write code here\n    self.data.append(node)\n    if len(self.minEle) == 0:\n        self.minEle.append(node)\n    if self.minEle[0] &gt; node:\n        self.minEle[0] = node\n    return\ndef pop(self):\n    # write code here\n    cur = self.data.pop()\n    if cur == self.minEle[0] and len(self.data) &gt; 0:\n        self.minEle[0] = self.data[0]\n        for i in range(len(self.data)):\n            if self.data[i] &lt; self.minEle[0]:\n                self.minEle[0] = data[i]\n    return cur\ndef top(self):\n    # write code here\n    return self.data[0]\ndef min(self):\n    # write code here\n    return self.minEle[0]\n</code></pre><hr>\n<p>2.0 空间换时间（废话），minEle也维护一个栈</p>\n<h1 id=\"coding-utf-8-1\"><a href=\"#coding-utf-8-1\" class=\"headerlink\" title=\"-- coding:utf-8 --\"></a>-<em>- coding:utf-8 -</em>-</h1><p>class Solution:<br>    def <strong>init</strong>(self):<br>        self.data = []<br>        self.minEle = []<br>    def push(self, node):</p>\n<pre><code>    # write code hedre\n    self.data.append(node)\n    if len(self.minEle) == 0:\n        self.minEle.append(node)\n    if self.minEle[0] &gt; node:\n        self.minEle.append(node)\n    else:\n        self.minEle.append(self.minEle[-1])\n    return\ndef pop(self):\n    # write code here\n    cur = self.data.pop()\n    self.minEle.pop()\n    return cur\ndef top(self):\n    # write code here\n    return self.data[0]\ndef min(self):\n    # write code here\n    return self.minEle[-1]\n</code></pre>","site":{"data":{}},"excerpt":"","more":"<p>包含最小值的栈<br>1.0 锉逼写法 －&gt; pop完遍历找最小 TT</p>\n<h1 id=\"coding-utf-8\"><a href=\"#coding-utf-8\" class=\"headerlink\" title=\"-- coding:utf-8 --\"></a>-<em>- coding:utf-8 -</em>-</h1><p>class Solution:<br>    def <strong>init</strong>(self):<br>        self.data = []<br>        self.minEle = []<br>    def push(self, node):</p>\n<pre><code>    # write code here\n    self.data.append(node)\n    if len(self.minEle) == 0:\n        self.minEle.append(node)\n    if self.minEle[0] &gt; node:\n        self.minEle[0] = node\n    return\ndef pop(self):\n    # write code here\n    cur = self.data.pop()\n    if cur == self.minEle[0] and len(self.data) &gt; 0:\n        self.minEle[0] = self.data[0]\n        for i in range(len(self.data)):\n            if self.data[i] &lt; self.minEle[0]:\n                self.minEle[0] = data[i]\n    return cur\ndef top(self):\n    # write code here\n    return self.data[0]\ndef min(self):\n    # write code here\n    return self.minEle[0]\n</code></pre><hr>\n<p>2.0 空间换时间（废话），minEle也维护一个栈</p>\n<h1 id=\"coding-utf-8-1\"><a href=\"#coding-utf-8-1\" class=\"headerlink\" title=\"-- coding:utf-8 --\"></a>-<em>- coding:utf-8 -</em>-</h1><p>class Solution:<br>    def <strong>init</strong>(self):<br>        self.data = []<br>        self.minEle = []<br>    def push(self, node):</p>\n<pre><code>    # write code hedre\n    self.data.append(node)\n    if len(self.minEle) == 0:\n        self.minEle.append(node)\n    if self.minEle[0] &gt; node:\n        self.minEle.append(node)\n    else:\n        self.minEle.append(self.minEle[-1])\n    return\ndef pop(self):\n    # write code here\n    cur = self.data.pop()\n    self.minEle.pop()\n    return cur\ndef top(self):\n    # write code here\n    return self.data[0]\ndef min(self):\n    # write code here\n    return self.minEle[-1]\n</code></pre>"},{"_content":"\n---\n一些话听起来就像是一个拿捏不好分寸的医生在给你动手术，麻醉的劲儿过了他还在切割缝补。<br>\n你知道他的一举一动都是为了你好，但看着自己淌血，感受着皮肉被针线拉扯都太难熬了。<br>\n对了，还有那些一点一点慢慢苏醒的活生生的痛。<br>\n——你说的都对，但你能不能别说了。\n","source":"_drafts/你说的对.md","raw":"\n---\n一些话听起来就像是一个拿捏不好分寸的医生在给你动手术，麻醉的劲儿过了他还在切割缝补。<br>\n你知道他的一举一动都是为了你好，但看着自己淌血，感受着皮肉被针线拉扯都太难熬了。<br>\n对了，还有那些一点一点慢慢苏醒的活生生的痛。<br>\n——你说的都对，但你能不能别说了。\n","slug":"你说的对","published":0,"date":"2018-11-27T02:45:08.992Z","updated":"2019-06-28T06:15:10.180Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6n0003n9v2nwp1k2xu","content":"<hr>\n<p>一些话听起来就像是一个拿捏不好分寸的医生在给你动手术，麻醉的劲儿过了他还在切割缝补。<br><br>你知道他的一举一动都是为了你好，但看着自己淌血，感受着皮肉被针线拉扯都太难熬了。<br><br>对了，还有那些一点一点慢慢苏醒的活生生的痛。<br><br>——你说的都对，但你能不能别说了。</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>一些话听起来就像是一个拿捏不好分寸的医生在给你动手术，麻醉的劲儿过了他还在切割缝补。<br><br>你知道他的一举一动都是为了你好，但看着自己淌血，感受着皮肉被针线拉扯都太难熬了。<br><br>对了，还有那些一点一点慢慢苏醒的活生生的痛。<br><br>——你说的都对，但你能不能别说了。</p>\n"},{"_content":"---\n\n就好像所有别的什么地方一样，咄咄逼人，予取予求。磨灭了你所有期待和耐心后，反而带着暖心的微笑把宽恕的目光投向你。温柔地开导你：年轻人，你看，这是我们的情怀。\n","source":"_drafts/hello-world-1.md","raw":"---\n\n就好像所有别的什么地方一样，咄咄逼人，予取予求。磨灭了你所有期待和耐心后，反而带着暖心的微笑把宽恕的目光投向你。温柔地开导你：年轻人，你看，这是我们的情怀。\n","slug":"hello-world-1","published":0,"date":"2018-11-27T02:45:08.992Z","updated":"2019-06-28T06:14:34.037Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6p0005n9v2pw2go32w","content":"<hr>\n<p>就好像所有别的什么地方一样，咄咄逼人，予取予求。磨灭了你所有期待和耐心后，反而带着暖心的微笑把宽恕的目光投向你。温柔地开导你：年轻人，你看，这是我们的情怀。</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>就好像所有别的什么地方一样，咄咄逼人，予取予求。磨灭了你所有期待和耐心后，反而带着暖心的微笑把宽恕的目光投向你。温柔地开导你：年轻人，你看，这是我们的情怀。</p>\n"},{"title":"[数据结构] － 数据结构与算法Javascript描述 - 笔记","id":"220","_content":"\n题外话：这几天看算法和数据结构有种吃自助吃撑了还要接着塞的满足感。由于入了前端的坑，其他语言语法已经基本忘记（&lt;-有脸说），正在发愁要不要先看个c++语法的时候，看到了这么一本书\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/Screen-Shot-2017-02-24-at-3.38.20-PM-230x300.png)\n\n感觉可以不拯救语法先拯救一下数据结构，就开始看了。讲解得不错，推荐一下（这个封面让我想起了某让人死去活来的课）。\n\n1\\. JS内建对象 数组： 深复制，浅复制\n\nindexOf(), lastIndexOf(), join(), toString(), concat(), splice(), slice()\n\npush(), pop(), unshift(), shift(), reverse(), sort()\n\nforEach(), map(), every(), filter(), some()\n\n[codesyntax lang=\"javascript\" lines=\"fancy\"]\n<pre>var arr = [11,2,333,4,9,9];\nconsole.log(arr.sort()); //dictionary order\nconsole.log(arr.sort(function(a,b){ return a-b; })); //numerical order</pre>\n[/codesyntax]\n\n2.","source":"_drafts/数据结构 － 数据结构与算法Javascript描述 - 笔记.md","raw":"---\ntitle: '[数据结构] － 数据结构与算法Javascript描述 - 笔记'\nid: 220\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ntags:\n---\n\n题外话：这几天看算法和数据结构有种吃自助吃撑了还要接着塞的满足感。由于入了前端的坑，其他语言语法已经基本忘记（&lt;-有脸说），正在发愁要不要先看个c++语法的时候，看到了这么一本书\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/Screen-Shot-2017-02-24-at-3.38.20-PM-230x300.png)\n\n感觉可以不拯救语法先拯救一下数据结构，就开始看了。讲解得不错，推荐一下（这个封面让我想起了某让人死去活来的课）。\n\n1\\. JS内建对象 数组： 深复制，浅复制\n\nindexOf(), lastIndexOf(), join(), toString(), concat(), splice(), slice()\n\npush(), pop(), unshift(), shift(), reverse(), sort()\n\nforEach(), map(), every(), filter(), some()\n\n[codesyntax lang=\"javascript\" lines=\"fancy\"]\n<pre>var arr = [11,2,333,4,9,9];\nconsole.log(arr.sort()); //dictionary order\nconsole.log(arr.sort(function(a,b){ return a-b; })); //numerical order</pre>\n[/codesyntax]\n\n2.","slug":"数据结构 － 数据结构与算法Javascript描述 - 笔记","published":0,"date":"2018-11-27T02:45:08.990Z","updated":"2018-11-27T02:45:08.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6q0006n9v2bs8mj6sd","content":"<p>题外话：这几天看算法和数据结构有种吃自助吃撑了还要接着塞的满足感。由于入了前端的坑，其他语言语法已经基本忘记（&lt;-有脸说），正在发愁要不要先看个c++语法的时候，看到了这么一本书</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/Screen-Shot-2017-02-24-at-3.38.20-PM-230x300.png\" alt=\"\"></p>\n<p>感觉可以不拯救语法先拯救一下数据结构，就开始看了。讲解得不错，推荐一下（这个封面让我想起了某让人死去活来的课）。</p>\n<p>1. JS内建对象 数组： 深复制，浅复制</p>\n<p>indexOf(), lastIndexOf(), join(), toString(), concat(), splice(), slice()</p>\n<p>push(), pop(), unshift(), shift(), reverse(), sort()</p>\n<p>forEach(), map(), every(), filter(), some()</p>\n<p>[codesyntax lang=”javascript” lines=”fancy”]</p>\n<p><pre>var arr = [11,2,333,4,9,9];<br>console.log(arr.sort()); //dictionary order<br>console.log(arr.sort(function(a,b){ return a-b; })); //numerical order</pre><br>[/codesyntax]</p>\n<p>2.</p>\n","site":{"data":{}},"excerpt":"","more":"<p>题外话：这几天看算法和数据结构有种吃自助吃撑了还要接着塞的满足感。由于入了前端的坑，其他语言语法已经基本忘记（&lt;-有脸说），正在发愁要不要先看个c++语法的时候，看到了这么一本书</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/Screen-Shot-2017-02-24-at-3.38.20-PM-230x300.png\" alt=\"\"></p>\n<p>感觉可以不拯救语法先拯救一下数据结构，就开始看了。讲解得不错，推荐一下（这个封面让我想起了某让人死去活来的课）。</p>\n<p>1. JS内建对象 数组： 深复制，浅复制</p>\n<p>indexOf(), lastIndexOf(), join(), toString(), concat(), splice(), slice()</p>\n<p>push(), pop(), unshift(), shift(), reverse(), sort()</p>\n<p>forEach(), map(), every(), filter(), some()</p>\n<p>[codesyntax lang=”javascript” lines=”fancy”]</p>\n<p><pre>var arr = [11,2,333,4,9,9];<br>console.log(arr.sort()); //dictionary order<br>console.log(arr.sort(function(a,b){ return a-b; })); //numerical order</pre><br>[/codesyntax]</p>\n<p>2.</p>\n"},{"_content":"---\n\n如果你要离去，就抽身而退，或者落荒而逃。\n\n就不必准备一场盛大的告别。\n\n反正想念你的人也会想念你，\n\n反正后会有期。","source":"_drafts/如果你要离去.md","raw":"---\n\n如果你要离去，就抽身而退，或者落荒而逃。\n\n就不必准备一场盛大的告别。\n\n反正想念你的人也会想念你，\n\n反正后会有期。","slug":"如果你要离去","published":0,"date":"2018-11-27T02:45:08.993Z","updated":"2019-06-28T06:15:19.519Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6r0007n9v2y1gatrg8","content":"<hr>\n<p>如果你要离去，就抽身而退，或者落荒而逃。</p>\n<p>就不必准备一场盛大的告别。</p>\n<p>反正想念你的人也会想念你，</p>\n<p>反正后会有期。</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>如果你要离去，就抽身而退，或者落荒而逃。</p>\n<p>就不必准备一场盛大的告别。</p>\n<p>反正想念你的人也会想念你，</p>\n<p>反正后会有期。</p>\n"},{"_content":"\n---\n\n站地铁上发呆的时候思考了一下，其实很多特别琐碎平常的事情，一旦有了次数就会变得意义非凡。比如第一次走路，第十次结婚纪念日。\n\n当然，第几次这种东西，慢慢我们就忘记了。于是，我们也学会了记下最后那几次。比如和某人的最后一面，程序里的最后一个bug（好吧，这种情况可能并不会发生），谁谁的最后几场演唱会。所以，刚刚脑子里蹦哒的念头是：这说不定是我最后一次来这个球场打球了。\n\n哦对，刚刚是在打球，以及，打的是羽毛球。篮球，我够不到。和几个马来的、中国的小伙伴（其实我是最年轻的）一起。说起来，这个群算是我刚到这里就开始陪我的了。转念一想，今天可能也是倒数几次见这些人了，居然有些舍不得。用居然这个词是我觉得，我其实心里应该不会有什么波动，我其实应该理解了公司里听的那句'people come, people leave.'，可不就是这个样子吗。但是吧，有些个小情绪又不配合。\n\n既然说的不舍，那不舍的是人还是这个城市啊。说不清楚。对这里似乎是有一些好感的，比如还真是挺干净的，比如一些水果真的好吃到爆，很多人都还非常温柔友好呀。\n\n然后，关于那些舍不得的人，会是谁呢？\n\n会不会是现在和我住一个屋子的那对情侣。我先认识的是那个女生，同个学院，不同专业，读书时候合租的。典型双子座，逼逼叨叨，一天可以聊炸三个人。所以我是怎么认识的这货，那天好像天气不错，我们合租的人要一起见第一面，提心掉胆的就去了。然后我是在下车时候看见这货，戴了个墨镜——诶，装什么x。后来啊，后来就去吃饭啦，她吃了两份。接下来，转了转学校，然后这姑娘语出惊人地问了些问题，我被抓去帮她提了行李。第一次见面大概就是这样。你好，室友x。后来见到她男朋友m，第一次见面似乎是他跑来我家送什么东西给他娘子。挎着一个白色的布包进来说了一句‘hello’。第一印象：嗯！确实是新疆人。在聊了几句之后发现：没错！就是新疆人。现在，被迫和这俩人合租着，每天要听到一些奇怪的get不到的点和莫名的一些绰号。不过还好同屋有时差基本不会被虐狗——心满意足。\n\n那么，又会不会是另外两只名字很有趣室友，一男一女，不是情侣。讲真，知道他俩名字分别是哪几个字的时候我还是吃了一惊的。第一次见面是在一个天大地大的狼人杀局上，那一天，我们两个专业的好看的人们聚在了一起。至于这个局有多大？这么说吧，发言一圈四十多分钟，人齐了之后我们一个晚上就打了一局。我记得那一局，这只女生当的上帝。天啦，落落大方！那个男生是守卫——他！不！会！玩！哦对，我是女巫，然后好人血崩了。后来啊，我们五个凑在一起合租了，吃了几顿饭（我不要脸地缺了几次）。以及他们做吃的超级好吃啊！先说女生啊，很自律，果断，效率超高，且分析事情很冷静，被我们叫哥。家居用品基本是她买的，还搭了一个放在厕所用的塑料白色架子。一言蔽之，特！别！优！秀！然后她率先找到了工作，因为远搬了出去，家庭饭局上我们还会聚到一起。男生，重庆孩子，处女座，是个吃货，喜欢做饭，勤劳勇敢（这句只是为了押韵），房间很整洁。他爱打麻将，家里刚装wifi就每天上网打麻将，赌钱，啧啧啧。这人口头禅是“哎呀，累死了。”，一边手还摸着自己的肚子——亲测手感不错，软乎乎的。\n\n还有，那个名字里藏着一个angel的女孩子。她是个瘦瘦小小，白白净净的女生，湖北人，能吃辣但是有节制地不乱吃。关系是室友和同学，所以经常一起去上课，一起回家，期末时候一起焦头烂额抓耳挠腮地通宵，去图书馆也有占座情谊。她学习很认真，一个常见的画面是我睡醒开始问她刚才在干嘛。生活也很认真——每天坚持跑步，有空就会自己做饭，家常菜都不在话下。有一次吃过她做的咖喱面，简直好吃炸了！还有一次是，她用湿毛巾捂着口鼻在厨房炒辣椒，客厅弥漫了两个小时的干辣椒味道，我们的鼻子都红红的，每个人脸上都洋溢着吃了辣椒后的喜悦。现在，她在一个蛮好的g姓公司工作，和我们另一个同学，一个名字红彤彤的小胖子在一个部门，啊不！他减肥成功了，一个名字红彤彤的小瘦子。\n\n我想认认真真和你们告别，但是见面可能还是逗逼地笑笑煽不出什么情来，不如，写点什么吧。\n\n那我长话短说，你们要好好的。","source":"_drafts/我想尽力记住的那些开始和结束.md","raw":"\n---\n\n站地铁上发呆的时候思考了一下，其实很多特别琐碎平常的事情，一旦有了次数就会变得意义非凡。比如第一次走路，第十次结婚纪念日。\n\n当然，第几次这种东西，慢慢我们就忘记了。于是，我们也学会了记下最后那几次。比如和某人的最后一面，程序里的最后一个bug（好吧，这种情况可能并不会发生），谁谁的最后几场演唱会。所以，刚刚脑子里蹦哒的念头是：这说不定是我最后一次来这个球场打球了。\n\n哦对，刚刚是在打球，以及，打的是羽毛球。篮球，我够不到。和几个马来的、中国的小伙伴（其实我是最年轻的）一起。说起来，这个群算是我刚到这里就开始陪我的了。转念一想，今天可能也是倒数几次见这些人了，居然有些舍不得。用居然这个词是我觉得，我其实心里应该不会有什么波动，我其实应该理解了公司里听的那句'people come, people leave.'，可不就是这个样子吗。但是吧，有些个小情绪又不配合。\n\n既然说的不舍，那不舍的是人还是这个城市啊。说不清楚。对这里似乎是有一些好感的，比如还真是挺干净的，比如一些水果真的好吃到爆，很多人都还非常温柔友好呀。\n\n然后，关于那些舍不得的人，会是谁呢？\n\n会不会是现在和我住一个屋子的那对情侣。我先认识的是那个女生，同个学院，不同专业，读书时候合租的。典型双子座，逼逼叨叨，一天可以聊炸三个人。所以我是怎么认识的这货，那天好像天气不错，我们合租的人要一起见第一面，提心掉胆的就去了。然后我是在下车时候看见这货，戴了个墨镜——诶，装什么x。后来啊，后来就去吃饭啦，她吃了两份。接下来，转了转学校，然后这姑娘语出惊人地问了些问题，我被抓去帮她提了行李。第一次见面大概就是这样。你好，室友x。后来见到她男朋友m，第一次见面似乎是他跑来我家送什么东西给他娘子。挎着一个白色的布包进来说了一句‘hello’。第一印象：嗯！确实是新疆人。在聊了几句之后发现：没错！就是新疆人。现在，被迫和这俩人合租着，每天要听到一些奇怪的get不到的点和莫名的一些绰号。不过还好同屋有时差基本不会被虐狗——心满意足。\n\n那么，又会不会是另外两只名字很有趣室友，一男一女，不是情侣。讲真，知道他俩名字分别是哪几个字的时候我还是吃了一惊的。第一次见面是在一个天大地大的狼人杀局上，那一天，我们两个专业的好看的人们聚在了一起。至于这个局有多大？这么说吧，发言一圈四十多分钟，人齐了之后我们一个晚上就打了一局。我记得那一局，这只女生当的上帝。天啦，落落大方！那个男生是守卫——他！不！会！玩！哦对，我是女巫，然后好人血崩了。后来啊，我们五个凑在一起合租了，吃了几顿饭（我不要脸地缺了几次）。以及他们做吃的超级好吃啊！先说女生啊，很自律，果断，效率超高，且分析事情很冷静，被我们叫哥。家居用品基本是她买的，还搭了一个放在厕所用的塑料白色架子。一言蔽之，特！别！优！秀！然后她率先找到了工作，因为远搬了出去，家庭饭局上我们还会聚到一起。男生，重庆孩子，处女座，是个吃货，喜欢做饭，勤劳勇敢（这句只是为了押韵），房间很整洁。他爱打麻将，家里刚装wifi就每天上网打麻将，赌钱，啧啧啧。这人口头禅是“哎呀，累死了。”，一边手还摸着自己的肚子——亲测手感不错，软乎乎的。\n\n还有，那个名字里藏着一个angel的女孩子。她是个瘦瘦小小，白白净净的女生，湖北人，能吃辣但是有节制地不乱吃。关系是室友和同学，所以经常一起去上课，一起回家，期末时候一起焦头烂额抓耳挠腮地通宵，去图书馆也有占座情谊。她学习很认真，一个常见的画面是我睡醒开始问她刚才在干嘛。生活也很认真——每天坚持跑步，有空就会自己做饭，家常菜都不在话下。有一次吃过她做的咖喱面，简直好吃炸了！还有一次是，她用湿毛巾捂着口鼻在厨房炒辣椒，客厅弥漫了两个小时的干辣椒味道，我们的鼻子都红红的，每个人脸上都洋溢着吃了辣椒后的喜悦。现在，她在一个蛮好的g姓公司工作，和我们另一个同学，一个名字红彤彤的小胖子在一个部门，啊不！他减肥成功了，一个名字红彤彤的小瘦子。\n\n我想认认真真和你们告别，但是见面可能还是逗逼地笑笑煽不出什么情来，不如，写点什么吧。\n\n那我长话短说，你们要好好的。","slug":"我想尽力记住的那些开始和结束","published":0,"date":"2018-11-27T02:45:08.993Z","updated":"2019-06-28T06:14:42.057Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6s0008n9v2xfzpefr6","content":"<hr>\n<p>站地铁上发呆的时候思考了一下，其实很多特别琐碎平常的事情，一旦有了次数就会变得意义非凡。比如第一次走路，第十次结婚纪念日。</p>\n<p>当然，第几次这种东西，慢慢我们就忘记了。于是，我们也学会了记下最后那几次。比如和某人的最后一面，程序里的最后一个bug（好吧，这种情况可能并不会发生），谁谁的最后几场演唱会。所以，刚刚脑子里蹦哒的念头是：这说不定是我最后一次来这个球场打球了。</p>\n<p>哦对，刚刚是在打球，以及，打的是羽毛球。篮球，我够不到。和几个马来的、中国的小伙伴（其实我是最年轻的）一起。说起来，这个群算是我刚到这里就开始陪我的了。转念一想，今天可能也是倒数几次见这些人了，居然有些舍不得。用居然这个词是我觉得，我其实心里应该不会有什么波动，我其实应该理解了公司里听的那句’people come, people leave.’，可不就是这个样子吗。但是吧，有些个小情绪又不配合。</p>\n<p>既然说的不舍，那不舍的是人还是这个城市啊。说不清楚。对这里似乎是有一些好感的，比如还真是挺干净的，比如一些水果真的好吃到爆，很多人都还非常温柔友好呀。</p>\n<p>然后，关于那些舍不得的人，会是谁呢？</p>\n<p>会不会是现在和我住一个屋子的那对情侣。我先认识的是那个女生，同个学院，不同专业，读书时候合租的。典型双子座，逼逼叨叨，一天可以聊炸三个人。所以我是怎么认识的这货，那天好像天气不错，我们合租的人要一起见第一面，提心掉胆的就去了。然后我是在下车时候看见这货，戴了个墨镜——诶，装什么x。后来啊，后来就去吃饭啦，她吃了两份。接下来，转了转学校，然后这姑娘语出惊人地问了些问题，我被抓去帮她提了行李。第一次见面大概就是这样。你好，室友x。后来见到她男朋友m，第一次见面似乎是他跑来我家送什么东西给他娘子。挎着一个白色的布包进来说了一句‘hello’。第一印象：嗯！确实是新疆人。在聊了几句之后发现：没错！就是新疆人。现在，被迫和这俩人合租着，每天要听到一些奇怪的get不到的点和莫名的一些绰号。不过还好同屋有时差基本不会被虐狗——心满意足。</p>\n<p>那么，又会不会是另外两只名字很有趣室友，一男一女，不是情侣。讲真，知道他俩名字分别是哪几个字的时候我还是吃了一惊的。第一次见面是在一个天大地大的狼人杀局上，那一天，我们两个专业的好看的人们聚在了一起。至于这个局有多大？这么说吧，发言一圈四十多分钟，人齐了之后我们一个晚上就打了一局。我记得那一局，这只女生当的上帝。天啦，落落大方！那个男生是守卫——他！不！会！玩！哦对，我是女巫，然后好人血崩了。后来啊，我们五个凑在一起合租了，吃了几顿饭（我不要脸地缺了几次）。以及他们做吃的超级好吃啊！先说女生啊，很自律，果断，效率超高，且分析事情很冷静，被我们叫哥。家居用品基本是她买的，还搭了一个放在厕所用的塑料白色架子。一言蔽之，特！别！优！秀！然后她率先找到了工作，因为远搬了出去，家庭饭局上我们还会聚到一起。男生，重庆孩子，处女座，是个吃货，喜欢做饭，勤劳勇敢（这句只是为了押韵），房间很整洁。他爱打麻将，家里刚装wifi就每天上网打麻将，赌钱，啧啧啧。这人口头禅是“哎呀，累死了。”，一边手还摸着自己的肚子——亲测手感不错，软乎乎的。</p>\n<p>还有，那个名字里藏着一个angel的女孩子。她是个瘦瘦小小，白白净净的女生，湖北人，能吃辣但是有节制地不乱吃。关系是室友和同学，所以经常一起去上课，一起回家，期末时候一起焦头烂额抓耳挠腮地通宵，去图书馆也有占座情谊。她学习很认真，一个常见的画面是我睡醒开始问她刚才在干嘛。生活也很认真——每天坚持跑步，有空就会自己做饭，家常菜都不在话下。有一次吃过她做的咖喱面，简直好吃炸了！还有一次是，她用湿毛巾捂着口鼻在厨房炒辣椒，客厅弥漫了两个小时的干辣椒味道，我们的鼻子都红红的，每个人脸上都洋溢着吃了辣椒后的喜悦。现在，她在一个蛮好的g姓公司工作，和我们另一个同学，一个名字红彤彤的小胖子在一个部门，啊不！他减肥成功了，一个名字红彤彤的小瘦子。</p>\n<p>我想认认真真和你们告别，但是见面可能还是逗逼地笑笑煽不出什么情来，不如，写点什么吧。</p>\n<p>那我长话短说，你们要好好的。</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>站地铁上发呆的时候思考了一下，其实很多特别琐碎平常的事情，一旦有了次数就会变得意义非凡。比如第一次走路，第十次结婚纪念日。</p>\n<p>当然，第几次这种东西，慢慢我们就忘记了。于是，我们也学会了记下最后那几次。比如和某人的最后一面，程序里的最后一个bug（好吧，这种情况可能并不会发生），谁谁的最后几场演唱会。所以，刚刚脑子里蹦哒的念头是：这说不定是我最后一次来这个球场打球了。</p>\n<p>哦对，刚刚是在打球，以及，打的是羽毛球。篮球，我够不到。和几个马来的、中国的小伙伴（其实我是最年轻的）一起。说起来，这个群算是我刚到这里就开始陪我的了。转念一想，今天可能也是倒数几次见这些人了，居然有些舍不得。用居然这个词是我觉得，我其实心里应该不会有什么波动，我其实应该理解了公司里听的那句’people come, people leave.’，可不就是这个样子吗。但是吧，有些个小情绪又不配合。</p>\n<p>既然说的不舍，那不舍的是人还是这个城市啊。说不清楚。对这里似乎是有一些好感的，比如还真是挺干净的，比如一些水果真的好吃到爆，很多人都还非常温柔友好呀。</p>\n<p>然后，关于那些舍不得的人，会是谁呢？</p>\n<p>会不会是现在和我住一个屋子的那对情侣。我先认识的是那个女生，同个学院，不同专业，读书时候合租的。典型双子座，逼逼叨叨，一天可以聊炸三个人。所以我是怎么认识的这货，那天好像天气不错，我们合租的人要一起见第一面，提心掉胆的就去了。然后我是在下车时候看见这货，戴了个墨镜——诶，装什么x。后来啊，后来就去吃饭啦，她吃了两份。接下来，转了转学校，然后这姑娘语出惊人地问了些问题，我被抓去帮她提了行李。第一次见面大概就是这样。你好，室友x。后来见到她男朋友m，第一次见面似乎是他跑来我家送什么东西给他娘子。挎着一个白色的布包进来说了一句‘hello’。第一印象：嗯！确实是新疆人。在聊了几句之后发现：没错！就是新疆人。现在，被迫和这俩人合租着，每天要听到一些奇怪的get不到的点和莫名的一些绰号。不过还好同屋有时差基本不会被虐狗——心满意足。</p>\n<p>那么，又会不会是另外两只名字很有趣室友，一男一女，不是情侣。讲真，知道他俩名字分别是哪几个字的时候我还是吃了一惊的。第一次见面是在一个天大地大的狼人杀局上，那一天，我们两个专业的好看的人们聚在了一起。至于这个局有多大？这么说吧，发言一圈四十多分钟，人齐了之后我们一个晚上就打了一局。我记得那一局，这只女生当的上帝。天啦，落落大方！那个男生是守卫——他！不！会！玩！哦对，我是女巫，然后好人血崩了。后来啊，我们五个凑在一起合租了，吃了几顿饭（我不要脸地缺了几次）。以及他们做吃的超级好吃啊！先说女生啊，很自律，果断，效率超高，且分析事情很冷静，被我们叫哥。家居用品基本是她买的，还搭了一个放在厕所用的塑料白色架子。一言蔽之，特！别！优！秀！然后她率先找到了工作，因为远搬了出去，家庭饭局上我们还会聚到一起。男生，重庆孩子，处女座，是个吃货，喜欢做饭，勤劳勇敢（这句只是为了押韵），房间很整洁。他爱打麻将，家里刚装wifi就每天上网打麻将，赌钱，啧啧啧。这人口头禅是“哎呀，累死了。”，一边手还摸着自己的肚子——亲测手感不错，软乎乎的。</p>\n<p>还有，那个名字里藏着一个angel的女孩子。她是个瘦瘦小小，白白净净的女生，湖北人，能吃辣但是有节制地不乱吃。关系是室友和同学，所以经常一起去上课，一起回家，期末时候一起焦头烂额抓耳挠腮地通宵，去图书馆也有占座情谊。她学习很认真，一个常见的画面是我睡醒开始问她刚才在干嘛。生活也很认真——每天坚持跑步，有空就会自己做饭，家常菜都不在话下。有一次吃过她做的咖喱面，简直好吃炸了！还有一次是，她用湿毛巾捂着口鼻在厨房炒辣椒，客厅弥漫了两个小时的干辣椒味道，我们的鼻子都红红的，每个人脸上都洋溢着吃了辣椒后的喜悦。现在，她在一个蛮好的g姓公司工作，和我们另一个同学，一个名字红彤彤的小胖子在一个部门，啊不！他减肥成功了，一个名字红彤彤的小瘦子。</p>\n<p>我想认认真真和你们告别，但是见面可能还是逗逼地笑笑煽不出什么情来，不如，写点什么吧。</p>\n<p>那我长话短说，你们要好好的。</p>\n"},{"_content":"\n---\n\n有一个问题是，\n\n一个所有人都自私的世界和所有人都无私的世界是不是相同的。\n\n因为其实每个人都有人爱，每个人都被人爱。","source":"_drafts/关于我爱你和你爱我.md","raw":"\n---\n\n有一个问题是，\n\n一个所有人都自私的世界和所有人都无私的世界是不是相同的。\n\n因为其实每个人都有人爱，每个人都被人爱。","slug":"关于我爱你和你爱我","published":0,"date":"2018-11-27T02:45:08.993Z","updated":"2019-06-28T06:15:14.197Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6t000an9v29nomkwdf","content":"<hr>\n<p>有一个问题是，</p>\n<p>一个所有人都自私的世界和所有人都无私的世界是不是相同的。</p>\n<p>因为其实每个人都有人爱，每个人都被人爱。</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>有一个问题是，</p>\n<p>一个所有人都自私的世界和所有人都无私的世界是不是相同的。</p>\n<p>因为其实每个人都有人爱，每个人都被人爱。</p>\n"},{"title":"[算法] - 1","id":"235","_content":"\n二叉树按行打印（广度优先遍历应用）&lt;- 纪念第一个python程序，语法奥妙得不行啊，网上提交代码还没发调试TT\n\n<pre># -*- coding:utf-8 -*-\n\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nclass TreePrinter:\n    def printTree(self, root):\n        # write code here\n        q = []\n        li = []\n        temp = []\n        last = root\n        nlast = root\n        q.append(root)\n        while(len(q)&gt;0):\n            n = q.pop(0)\n            temp.append(n.val)\n            if(n.left):\n                q.append(n.left)\n                nlast = n.left\n            if(n.right):\n                q.append(n.right)\n                nlast = n.right\n            if(last==n):\n                li.append(temp)\n                temp = []\n                last = nlast\n        return li\n</pre>\n","source":"_drafts/算法-1.md","raw":"---\ntitle: '[算法] - 1'\nid: 235\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ntags:\n---\n\n二叉树按行打印（广度优先遍历应用）&lt;- 纪念第一个python程序，语法奥妙得不行啊，网上提交代码还没发调试TT\n\n<pre># -*- coding:utf-8 -*-\n\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nclass TreePrinter:\n    def printTree(self, root):\n        # write code here\n        q = []\n        li = []\n        temp = []\n        last = root\n        nlast = root\n        q.append(root)\n        while(len(q)&gt;0):\n            n = q.pop(0)\n            temp.append(n.val)\n            if(n.left):\n                q.append(n.left)\n                nlast = n.left\n            if(n.right):\n                q.append(n.right)\n                nlast = n.right\n            if(last==n):\n                li.append(temp)\n                temp = []\n                last = nlast\n        return li\n</pre>\n","slug":"算法-1","published":0,"date":"2018-11-27T02:45:08.990Z","updated":"2018-11-27T02:45:08.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6u000bn9v21mvrwhyg","content":"<p>二叉树按行打印（广度优先遍历应用）&lt;- 纪念第一个python程序，语法奥妙得不行啊，网上提交代码还没发调试TT</p>\n<pre># -*- coding:utf-8 -*-\n\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nclass TreePrinter:\n    def printTree(self, root):\n        # write code here\n        q = []\n        li = []\n        temp = []\n        last = root\n        nlast = root\n        q.append(root)\n        while(len(q)&gt;0):\n            n = q.pop(0)\n            temp.append(n.val)\n            if(n.left):\n                q.append(n.left)\n                nlast = n.left\n            if(n.right):\n                q.append(n.right)\n                nlast = n.right\n            if(last==n):\n                li.append(temp)\n                temp = []\n                last = nlast\n        return li\n</pre>\n","site":{"data":{}},"excerpt":"","more":"<p>二叉树按行打印（广度优先遍历应用）&lt;- 纪念第一个python程序，语法奥妙得不行啊，网上提交代码还没发调试TT</p>\n<pre># -*- coding:utf-8 -*-\n\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\nclass TreePrinter:\n    def printTree(self, root):\n        # write code here\n        q = []\n        li = []\n        temp = []\n        last = root\n        nlast = root\n        q.append(root)\n        while(len(q)&gt;0):\n            n = q.pop(0)\n            temp.append(n.val)\n            if(n.left):\n                q.append(n.left)\n                nlast = n.left\n            if(n.right):\n                q.append(n.right)\n                nlast = n.right\n            if(last==n):\n                li.append(temp)\n                temp = []\n                last = nlast\n        return li\n</pre>\n"},{"title":"七牛云助攻hexo","_content":"\n在终于开始搞自己的博客之后，第一次面试就被面试官说wordpress不好用，可以改成hexo。可爱的我还一脸萌地问起了hexo是个什么，然后现在慢慢把博客迁到了github pages + hexo的网站。发现这个东西还是蛮灵巧的，没有database的操作按文件系统来存取文章，结构比较清晰，而且可以用mark down写文章是个不错的体验啊。接下来就要开始解决一些hexo的问题，其中一个是图片的管理。\n\n不同于wp，hexo没有一个专门的cms系统，也可以说cms就在我们的代码处。所以图片的存储有两条路子可以走：和code放一起传上github；或者找个云存储服务存。\n\n第一条路子github pages的存储空间可能不支持太多的图片，网上看到很多人的说法是300MB限制，但是官方文档里面没有找到。也有一说是没有具体限制，但是官方推荐1GB以下。这两个数字对于一些喜欢图（乱）文（放）并（图）茂（片）的胖友来说都不太够，尤其是某人可能不久要掉入单反这个大坑（科科 -v-）。\n\n所以走了第二条路子，网上推荐的服务器很多，自己最后选的是七牛云（开始对这个名字莫名抗拒），给的免费存储是10GB，每个月的流量也是10GB。这里还是要注意一下图片大小，看到过一篇文章讲的是刚开始用存储空间还好，但是把每月流量用超了，一是因为访客较多（羡慕脸），二是因为传的很多图片都是直接高清原图丢上去。反正，开始用起了七牛云。\n\n1. 注册-设置key\n  * 首先注册七牛云账号，用这个链接吧，可以送我5GB流量（感恩）-> [我是传送门](https://portal.qiniu.com/signup?code=3lbflltsvglzm)\n  * 然后在创建自己的key，一个Acess key，一个是Secret key，上传密钥。\n2. 新建bucket\n  * 新增一个对象存储，给bucket取个好听的名字\n3. 插件hexo-qiniu-sync\n  * 在你的hexo文件夹下安装七牛云的插件。-> [我也是传送门](https://github.com/gyk001/hexo-qiniu-sync)\n  **具体的设置按README**，之前因为跟着别人的教程就没看插件的README文档（<-有脸说），然后遇到了一些坑。比如在_config.yml里不要加这两句：\n  ```\n  plugins:\n       - hexo-qiniu-sync\n  ```\n","source":"_drafts/七牛云助攻hexo.md","raw":"---\ntitle: 七牛云助攻hexo\ntags:\n---\n\n在终于开始搞自己的博客之后，第一次面试就被面试官说wordpress不好用，可以改成hexo。可爱的我还一脸萌地问起了hexo是个什么，然后现在慢慢把博客迁到了github pages + hexo的网站。发现这个东西还是蛮灵巧的，没有database的操作按文件系统来存取文章，结构比较清晰，而且可以用mark down写文章是个不错的体验啊。接下来就要开始解决一些hexo的问题，其中一个是图片的管理。\n\n不同于wp，hexo没有一个专门的cms系统，也可以说cms就在我们的代码处。所以图片的存储有两条路子可以走：和code放一起传上github；或者找个云存储服务存。\n\n第一条路子github pages的存储空间可能不支持太多的图片，网上看到很多人的说法是300MB限制，但是官方文档里面没有找到。也有一说是没有具体限制，但是官方推荐1GB以下。这两个数字对于一些喜欢图（乱）文（放）并（图）茂（片）的胖友来说都不太够，尤其是某人可能不久要掉入单反这个大坑（科科 -v-）。\n\n所以走了第二条路子，网上推荐的服务器很多，自己最后选的是七牛云（开始对这个名字莫名抗拒），给的免费存储是10GB，每个月的流量也是10GB。这里还是要注意一下图片大小，看到过一篇文章讲的是刚开始用存储空间还好，但是把每月流量用超了，一是因为访客较多（羡慕脸），二是因为传的很多图片都是直接高清原图丢上去。反正，开始用起了七牛云。\n\n1. 注册-设置key\n  * 首先注册七牛云账号，用这个链接吧，可以送我5GB流量（感恩）-> [我是传送门](https://portal.qiniu.com/signup?code=3lbflltsvglzm)\n  * 然后在创建自己的key，一个Acess key，一个是Secret key，上传密钥。\n2. 新建bucket\n  * 新增一个对象存储，给bucket取个好听的名字\n3. 插件hexo-qiniu-sync\n  * 在你的hexo文件夹下安装七牛云的插件。-> [我也是传送门](https://github.com/gyk001/hexo-qiniu-sync)\n  **具体的设置按README**，之前因为跟着别人的教程就没看插件的README文档（<-有脸说），然后遇到了一些坑。比如在_config.yml里不要加这两句：\n  ```\n  plugins:\n       - hexo-qiniu-sync\n  ```\n","slug":"七牛云助攻hexo","published":0,"date":"2018-11-27T02:45:08.989Z","updated":"2018-11-27T02:45:08.989Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6w000dn9v2nlzcza37","content":"<p>在终于开始搞自己的博客之后，第一次面试就被面试官说wordpress不好用，可以改成hexo。可爱的我还一脸萌地问起了hexo是个什么，然后现在慢慢把博客迁到了github pages + hexo的网站。发现这个东西还是蛮灵巧的，没有database的操作按文件系统来存取文章，结构比较清晰，而且可以用mark down写文章是个不错的体验啊。接下来就要开始解决一些hexo的问题，其中一个是图片的管理。</p>\n<p>不同于wp，hexo没有一个专门的cms系统，也可以说cms就在我们的代码处。所以图片的存储有两条路子可以走：和code放一起传上github；或者找个云存储服务存。</p>\n<p>第一条路子github pages的存储空间可能不支持太多的图片，网上看到很多人的说法是300MB限制，但是官方文档里面没有找到。也有一说是没有具体限制，但是官方推荐1GB以下。这两个数字对于一些喜欢图（乱）文（放）并（图）茂（片）的胖友来说都不太够，尤其是某人可能不久要掉入单反这个大坑（科科 -v-）。</p>\n<p>所以走了第二条路子，网上推荐的服务器很多，自己最后选的是七牛云（开始对这个名字莫名抗拒），给的免费存储是10GB，每个月的流量也是10GB。这里还是要注意一下图片大小，看到过一篇文章讲的是刚开始用存储空间还好，但是把每月流量用超了，一是因为访客较多（羡慕脸），二是因为传的很多图片都是直接高清原图丢上去。反正，开始用起了七牛云。</p>\n<ol>\n<li>注册-设置key<ul>\n<li>首先注册七牛云账号，用这个链接吧，可以送我5GB流量（感恩）-&gt; <a href=\"https://portal.qiniu.com/signup?code=3lbflltsvglzm\" target=\"_blank\" rel=\"noopener\">我是传送门</a></li>\n<li>然后在创建自己的key，一个Acess key，一个是Secret key，上传密钥。</li>\n</ul>\n</li>\n<li>新建bucket<ul>\n<li>新增一个对象存储，给bucket取个好听的名字</li>\n</ul>\n</li>\n<li>插件hexo-qiniu-sync<ul>\n<li>在你的hexo文件夹下安装七牛云的插件。-&gt; <a href=\"https://github.com/gyk001/hexo-qiniu-sync\" target=\"_blank\" rel=\"noopener\">我也是传送门</a><br><strong>具体的设置按README</strong>，之前因为跟着别人的教程就没看插件的README文档（&lt;-有脸说），然后遇到了一些坑。比如在_config.yml里不要加这两句：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">     - hexo-qiniu-sync</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>在终于开始搞自己的博客之后，第一次面试就被面试官说wordpress不好用，可以改成hexo。可爱的我还一脸萌地问起了hexo是个什么，然后现在慢慢把博客迁到了github pages + hexo的网站。发现这个东西还是蛮灵巧的，没有database的操作按文件系统来存取文章，结构比较清晰，而且可以用mark down写文章是个不错的体验啊。接下来就要开始解决一些hexo的问题，其中一个是图片的管理。</p>\n<p>不同于wp，hexo没有一个专门的cms系统，也可以说cms就在我们的代码处。所以图片的存储有两条路子可以走：和code放一起传上github；或者找个云存储服务存。</p>\n<p>第一条路子github pages的存储空间可能不支持太多的图片，网上看到很多人的说法是300MB限制，但是官方文档里面没有找到。也有一说是没有具体限制，但是官方推荐1GB以下。这两个数字对于一些喜欢图（乱）文（放）并（图）茂（片）的胖友来说都不太够，尤其是某人可能不久要掉入单反这个大坑（科科 -v-）。</p>\n<p>所以走了第二条路子，网上推荐的服务器很多，自己最后选的是七牛云（开始对这个名字莫名抗拒），给的免费存储是10GB，每个月的流量也是10GB。这里还是要注意一下图片大小，看到过一篇文章讲的是刚开始用存储空间还好，但是把每月流量用超了，一是因为访客较多（羡慕脸），二是因为传的很多图片都是直接高清原图丢上去。反正，开始用起了七牛云。</p>\n<ol>\n<li>注册-设置key<ul>\n<li>首先注册七牛云账号，用这个链接吧，可以送我5GB流量（感恩）-&gt; <a href=\"https://portal.qiniu.com/signup?code=3lbflltsvglzm\" target=\"_blank\" rel=\"noopener\">我是传送门</a></li>\n<li>然后在创建自己的key，一个Acess key，一个是Secret key，上传密钥。</li>\n</ul>\n</li>\n<li>新建bucket<ul>\n<li>新增一个对象存储，给bucket取个好听的名字</li>\n</ul>\n</li>\n<li>插件hexo-qiniu-sync<ul>\n<li>在你的hexo文件夹下安装七牛云的插件。-&gt; <a href=\"https://github.com/gyk001/hexo-qiniu-sync\" target=\"_blank\" rel=\"noopener\">我也是传送门</a><br><strong>具体的设置按README</strong>，之前因为跟着别人的教程就没看插件的README文档（&lt;-有脸说），然后遇到了一些坑。比如在_config.yml里不要加这两句：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">plugins:</span><br><span class=\"line\">     - hexo-qiniu-sync</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ol>\n"},{"_content":"\n---\n\n发现了两个人小小的贪心，\n\n说想要某人出人头地，又希望他不必奔波劳碌。\n\n大概的愿望是某人能不费太大力气实现他那些要费很多力气的事情，\n\n差不多是希望他以后可以不劳而获且健康快乐。\n\n啧，真的是很贪心呀。\n\n&nbsp;\n\n——父母心","source":"_drafts/贪心.md","raw":"\n---\n\n发现了两个人小小的贪心，\n\n说想要某人出人头地，又希望他不必奔波劳碌。\n\n大概的愿望是某人能不费太大力气实现他那些要费很多力气的事情，\n\n差不多是希望他以后可以不劳而获且健康快乐。\n\n啧，真的是很贪心呀。\n\n&nbsp;\n\n——父母心","slug":"贪心","published":0,"date":"2018-11-27T02:45:08.994Z","updated":"2019-06-28T06:14:58.499Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgr6x000en9v23eoluaan","content":"<hr>\n<p>发现了两个人小小的贪心，</p>\n<p>说想要某人出人头地，又希望他不必奔波劳碌。</p>\n<p>大概的愿望是某人能不费太大力气实现他那些要费很多力气的事情，</p>\n<p>差不多是希望他以后可以不劳而获且健康快乐。</p>\n<p>啧，真的是很贪心呀。</p>\n<p>&nbsp;</p>\n<p>——父母心</p>\n","site":{"data":{}},"excerpt":"","more":"<hr>\n<p>发现了两个人小小的贪心，</p>\n<p>说想要某人出人头地，又希望他不必奔波劳碌。</p>\n<p>大概的愿望是某人能不费太大力气实现他那些要费很多力气的事情，</p>\n<p>差不多是希望他以后可以不劳而获且健康快乐。</p>\n<p>啧，真的是很贪心呀。</p>\n<p>&nbsp;</p>\n<p>——父母心</p>\n"},{"title":"（回顾）性能调优实践 gzip, brotli, https, angular","date":"2019-06-28T06:17:53.000Z","_content":"\n前端性能优化\n\n标题可能起的有点大，这次是实践是对目前在做的项目的一次性能调优，但是也没有尝试所有方式。\n\n起因是我们的网站被客户吐槽慢。。。\n\n然后开始了性能调优。\n\n# gzip实践\n服务器端的优化是首先想到的方法，因为这个优化的力度是前端code层面优化比不了的。项目是Angular6的，打包之后用--stats-json和webpack-bundle-analyzer可以看到目前打包之后各个js的大小以及gzip压缩之后的大小，gzip压一压，最少能小一半，有些能压到十分之一。\ngzip的原理是在服务器进行配置，对制定类型的文件采用gzip压缩，客户端在获得传输的数据之后再进行解压。通过这个方式可以减少文件传输的时间，但是会增加压缩和解压的时间，所以对于一些很小的文件是不建议启用gzip的（服务器配置的时候也可以设置文件大小）。\n配置大概是\n\n``\nLoadModule deflate_module modules/mod_deflate.so\nAddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript\n``\n\n在httpd.conf开启mod_deflate，然后选一下文件类型。\n\n本地build了一个docker测试 => 快得一批！\n\n部署到服务器打开网站 => **没得卵用**！又改了几次配置，部署到服务器上都是一样。\n\n开始怀疑gzip，开始怀疑服务器，开始怀疑自己。\n\n - 问题：本地测试gzip生效，但服务器上相同配置gzip后不生效。\n - 思路：服务器的机器和本地机器肯定有不同，但是两边最终都是build出来docker image，image内的环境配置和安装的软件都是一样的，搜了“gzip不生效”找到的基本是怎么配置gzip -> 两边不同的还有协议，服务器端proxy设置了强制ssl，所有访问都是https本地是http://localhost，搜“gzip https 不生效”找到答案：因为有BREACH（大致是ssl会对文件加密，以保护文件内容不被他人获取和篡改）但是如果引入gzip，hackers可以通过victim的机器发送大量明文请求和压缩算法(gzip 压缩在 HTTP 中的工作方式是这样：如果在响应中有同一个字符串的多个实例，第一个实例将被保留，而其余实例将被替换成指向第一个实例位置的短引用，以减少响应消息的体积)来破解文件内容。=> SSL和gzip不能同时使用（搜索时候找到了一个关于apache的SSLCompression的配置，进行了尝试，无果）\n\n# Brotli实践\n - 问题：SSL和gzip不能同时使用，对于我们现有site SSL不能disable => 无法实现服务器端优化？\n - 思路：(看看别人是怎么做的）-> bootstrap，load很快，它也是https，接着看了network，![Performance bootstrap](https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-bootstrap-brotli.png?Expires=1563183577&OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&Signature=L8XbNXEuEhgT1CjZ8B0XsSWqqSE%3D)文件被压缩过->继续看response头-> 发现：content-encoding: br->搜索“content-encoding br”->找到Brotli是一种类似gzip的压缩算法，接下来就是在server上进行Brotli的配置。\n\n1. 首先要在httpd.conf配置当中打开mod_brotli，这一步有点类似于gzip打开mod_deflate，然后配置需要压缩的文件类型，配置大概长这样：\n```\n# Load brotli module\nLoadModule brotli_module modules/mod_brotli.so\n\n<IfModule brotli_module>\n  # Output filter\n  AddOutputFilterByType BROTLI text/plain text/css text/xml text/javascript application/javascript\n\n  # SetOutputFilter BROTLI\n  # SetEnvIfNoCase Request_URI \\.txt$ no-br\n\n  # Compression\n  ## BrotliCompressionLevel: 0-11 (default: 11)\n  BrotliCompressionLevel 10\n\n  ## BrotliWindowSize: 10-24 (default: 22)\n  BrotliWindowSize 22\n\n  # Specifies how to change the ETag header when the response is compressed\n  ## BrotliAlterEtag: AddSuffix, NoChange, Remove (default: AddSuffix)\n  BrotliAlterEtag AddSuffix\n\n  # Filter note\n  BrotliFilterNote Input  brotli_in\n  BrotliFilterNote Output brotli_out\n  BrotliFilterNote Ratio  brotli_ratio\n\n  LogFormat '\"%r\" %{brotli_out}n/%{brotli_in}n (%{brotli_ratio}n)' brotli\n  CustomLog logs/access_log brotli\n</IfModule>\n```\ntry -> not work -> docker exec -it container /bin/bash 检查了一下/usr/local/apache2/module里面没有这个mod -> 所以首先要先build出来这个mod\n\n1. 修改Dockerfile内的build脚本\n```\nRUN git clone --depth=1 --recursive https://github.com/kjdev/apache-mod-brotli.git\nRUN cd ./apache-mod-brotli && sh ./autogen.sh && ./configure && make && install -p -m 755 -D .libs/mod_brotli.so /usr/local/apache2/modules/mod_brotli.so\n```\n主要是这两句命令，大概就是clone了brotli的代码然后build出来需要的mod。\n中间碰到一个坑，apt-get install的时候需要修改source.list，否则jessie-backports会出错。因为不太懂这个配置文件，中间查了很多关于\"Failed to fetch jessie backports repository\"这个错的文章，照着改了n多次。最后试下来加了这几句：\n```\nRUN sed -i '/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d' /etc/apt/sources.list\nRUN echo 'deb http://archive.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list\nRUN echo 'deb-src http://archive.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list\nRUN apt-get -o Acquire::Check-Valid-Until=false update\n```\n3. 安装必须软件\n这步就比较简单，build时候如果报错了把需要的软件装一下。\n```\nRUN [\"apt-get\", \"install\", \"-y\", \"git\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"make\"]\n\nRUN [\"apt-get\", \"install\", \"-y\", \"autotools-dev\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"automake\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"libtool\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"apache2-dev\"]\n```\n到这里Brotli这个module就配置好了。实测网站首页load时间缩短了一半以上。\n![performance result](https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-mine.png?Expires=1563186493&OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&Signature=ekTokdD6FZRBjqG%2BjBz%2BARWjLiw%3D\n)\n","source":"_posts/性能调优实践.md","raw":"---\ntitle: '（回顾）性能调优实践 gzip, brotli, https, angular'\ndate: 2019-06-28 14:17:53\ntags:\ncategories:\n    - 学海无涯我游啊游\n    - 其他\n---\n\n前端性能优化\n\n标题可能起的有点大，这次是实践是对目前在做的项目的一次性能调优，但是也没有尝试所有方式。\n\n起因是我们的网站被客户吐槽慢。。。\n\n然后开始了性能调优。\n\n# gzip实践\n服务器端的优化是首先想到的方法，因为这个优化的力度是前端code层面优化比不了的。项目是Angular6的，打包之后用--stats-json和webpack-bundle-analyzer可以看到目前打包之后各个js的大小以及gzip压缩之后的大小，gzip压一压，最少能小一半，有些能压到十分之一。\ngzip的原理是在服务器进行配置，对制定类型的文件采用gzip压缩，客户端在获得传输的数据之后再进行解压。通过这个方式可以减少文件传输的时间，但是会增加压缩和解压的时间，所以对于一些很小的文件是不建议启用gzip的（服务器配置的时候也可以设置文件大小）。\n配置大概是\n\n``\nLoadModule deflate_module modules/mod_deflate.so\nAddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript\n``\n\n在httpd.conf开启mod_deflate，然后选一下文件类型。\n\n本地build了一个docker测试 => 快得一批！\n\n部署到服务器打开网站 => **没得卵用**！又改了几次配置，部署到服务器上都是一样。\n\n开始怀疑gzip，开始怀疑服务器，开始怀疑自己。\n\n - 问题：本地测试gzip生效，但服务器上相同配置gzip后不生效。\n - 思路：服务器的机器和本地机器肯定有不同，但是两边最终都是build出来docker image，image内的环境配置和安装的软件都是一样的，搜了“gzip不生效”找到的基本是怎么配置gzip -> 两边不同的还有协议，服务器端proxy设置了强制ssl，所有访问都是https本地是http://localhost，搜“gzip https 不生效”找到答案：因为有BREACH（大致是ssl会对文件加密，以保护文件内容不被他人获取和篡改）但是如果引入gzip，hackers可以通过victim的机器发送大量明文请求和压缩算法(gzip 压缩在 HTTP 中的工作方式是这样：如果在响应中有同一个字符串的多个实例，第一个实例将被保留，而其余实例将被替换成指向第一个实例位置的短引用，以减少响应消息的体积)来破解文件内容。=> SSL和gzip不能同时使用（搜索时候找到了一个关于apache的SSLCompression的配置，进行了尝试，无果）\n\n# Brotli实践\n - 问题：SSL和gzip不能同时使用，对于我们现有site SSL不能disable => 无法实现服务器端优化？\n - 思路：(看看别人是怎么做的）-> bootstrap，load很快，它也是https，接着看了network，![Performance bootstrap](https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-bootstrap-brotli.png?Expires=1563183577&OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&Signature=L8XbNXEuEhgT1CjZ8B0XsSWqqSE%3D)文件被压缩过->继续看response头-> 发现：content-encoding: br->搜索“content-encoding br”->找到Brotli是一种类似gzip的压缩算法，接下来就是在server上进行Brotli的配置。\n\n1. 首先要在httpd.conf配置当中打开mod_brotli，这一步有点类似于gzip打开mod_deflate，然后配置需要压缩的文件类型，配置大概长这样：\n```\n# Load brotli module\nLoadModule brotli_module modules/mod_brotli.so\n\n<IfModule brotli_module>\n  # Output filter\n  AddOutputFilterByType BROTLI text/plain text/css text/xml text/javascript application/javascript\n\n  # SetOutputFilter BROTLI\n  # SetEnvIfNoCase Request_URI \\.txt$ no-br\n\n  # Compression\n  ## BrotliCompressionLevel: 0-11 (default: 11)\n  BrotliCompressionLevel 10\n\n  ## BrotliWindowSize: 10-24 (default: 22)\n  BrotliWindowSize 22\n\n  # Specifies how to change the ETag header when the response is compressed\n  ## BrotliAlterEtag: AddSuffix, NoChange, Remove (default: AddSuffix)\n  BrotliAlterEtag AddSuffix\n\n  # Filter note\n  BrotliFilterNote Input  brotli_in\n  BrotliFilterNote Output brotli_out\n  BrotliFilterNote Ratio  brotli_ratio\n\n  LogFormat '\"%r\" %{brotli_out}n/%{brotli_in}n (%{brotli_ratio}n)' brotli\n  CustomLog logs/access_log brotli\n</IfModule>\n```\ntry -> not work -> docker exec -it container /bin/bash 检查了一下/usr/local/apache2/module里面没有这个mod -> 所以首先要先build出来这个mod\n\n1. 修改Dockerfile内的build脚本\n```\nRUN git clone --depth=1 --recursive https://github.com/kjdev/apache-mod-brotli.git\nRUN cd ./apache-mod-brotli && sh ./autogen.sh && ./configure && make && install -p -m 755 -D .libs/mod_brotli.so /usr/local/apache2/modules/mod_brotli.so\n```\n主要是这两句命令，大概就是clone了brotli的代码然后build出来需要的mod。\n中间碰到一个坑，apt-get install的时候需要修改source.list，否则jessie-backports会出错。因为不太懂这个配置文件，中间查了很多关于\"Failed to fetch jessie backports repository\"这个错的文章，照着改了n多次。最后试下来加了这几句：\n```\nRUN sed -i '/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d' /etc/apt/sources.list\nRUN echo 'deb http://archive.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list\nRUN echo 'deb-src http://archive.debian.org/debian jessie-backports main' > /etc/apt/sources.list.d/backports.list\nRUN apt-get -o Acquire::Check-Valid-Until=false update\n```\n3. 安装必须软件\n这步就比较简单，build时候如果报错了把需要的软件装一下。\n```\nRUN [\"apt-get\", \"install\", \"-y\", \"git\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"make\"]\n\nRUN [\"apt-get\", \"install\", \"-y\", \"autotools-dev\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"automake\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"libtool\"]\nRUN [\"apt-get\", \"install\", \"-y\", \"apache2-dev\"]\n```\n到这里Brotli这个module就配置好了。实测网站首页load时间缩短了一半以上。\n![performance result](https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-mine.png?Expires=1563186493&OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&Signature=ekTokdD6FZRBjqG%2BjBz%2BARWjLiw%3D\n)\n","slug":"性能调优实践","published":1,"updated":"2019-07-15T09:31:48.762Z","_id":"cjxfpgr6z000gn9v2mr00se23","comments":1,"layout":"post","photos":[],"link":"","content":"<p>前端性能优化</p>\n<p>标题可能起的有点大，这次是实践是对目前在做的项目的一次性能调优，但是也没有尝试所有方式。</p>\n<p>起因是我们的网站被客户吐槽慢。。。</p>\n<p>然后开始了性能调优。</p>\n<h1 id=\"gzip实践\"><a href=\"#gzip实践\" class=\"headerlink\" title=\"gzip实践\"></a>gzip实践</h1><p>服务器端的优化是首先想到的方法，因为这个优化的力度是前端code层面优化比不了的。项目是Angular6的，打包之后用–stats-json和webpack-bundle-analyzer可以看到目前打包之后各个js的大小以及gzip压缩之后的大小，gzip压一压，最少能小一半，有些能压到十分之一。<br>gzip的原理是在服务器进行配置，对制定类型的文件采用gzip压缩，客户端在获得传输的数据之后再进行解压。通过这个方式可以减少文件传输的时间，但是会增加压缩和解压的时间，所以对于一些很小的文件是不建议启用gzip的（服务器配置的时候也可以设置文件大小）。<br>配置大概是</p>\n<p><code>LoadModule deflate_module modules/mod_deflate.so\nAddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript</code></p>\n<p>在httpd.conf开启mod_deflate，然后选一下文件类型。</p>\n<p>本地build了一个docker测试 =&gt; 快得一批！</p>\n<p>部署到服务器打开网站 =&gt; <strong>没得卵用</strong>！又改了几次配置，部署到服务器上都是一样。</p>\n<p>开始怀疑gzip，开始怀疑服务器，开始怀疑自己。</p>\n<ul>\n<li>问题：本地测试gzip生效，但服务器上相同配置gzip后不生效。</li>\n<li>思路：服务器的机器和本地机器肯定有不同，但是两边最终都是build出来docker image，image内的环境配置和安装的软件都是一样的，搜了“gzip不生效”找到的基本是怎么配置gzip -&gt; 两边不同的还有协议，服务器端proxy设置了强制ssl，所有访问都是https本地是<a href=\"http://localhost，搜“gzip\" target=\"_blank\" rel=\"noopener\">http://localhost，搜“gzip</a> https 不生效”找到答案：因为有BREACH（大致是ssl会对文件加密，以保护文件内容不被他人获取和篡改）但是如果引入gzip，hackers可以通过victim的机器发送大量明文请求和压缩算法(gzip 压缩在 HTTP 中的工作方式是这样：如果在响应中有同一个字符串的多个实例，第一个实例将被保留，而其余实例将被替换成指向第一个实例位置的短引用，以减少响应消息的体积)来破解文件内容。=&gt; SSL和gzip不能同时使用（搜索时候找到了一个关于apache的SSLCompression的配置，进行了尝试，无果）</li>\n</ul>\n<h1 id=\"Brotli实践\"><a href=\"#Brotli实践\" class=\"headerlink\" title=\"Brotli实践\"></a>Brotli实践</h1><ul>\n<li>问题：SSL和gzip不能同时使用，对于我们现有site SSL不能disable =&gt; 无法实现服务器端优化？</li>\n<li>思路：(看看别人是怎么做的）-&gt; bootstrap，load很快，它也是https，接着看了network，<img src=\"https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-bootstrap-brotli.png?Expires=1563183577&amp;OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&amp;Signature=L8XbNXEuEhgT1CjZ8B0XsSWqqSE%3D\" alt=\"Performance bootstrap\">文件被压缩过-&gt;继续看response头-&gt; 发现：content-encoding: br-&gt;搜索“content-encoding br”-&gt;找到Brotli是一种类似gzip的压缩算法，接下来就是在server上进行Brotli的配置。</li>\n</ul>\n<ol>\n<li>首先要在httpd.conf配置当中打开mod_brotli，这一步有点类似于gzip打开mod_deflate，然后配置需要压缩的文件类型，配置大概长这样：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Load brotli module</span><br><span class=\"line\">LoadModule brotli_module modules/mod_brotli.so</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;IfModule brotli_module&gt;</span><br><span class=\"line\">  # Output filter</span><br><span class=\"line\">  AddOutputFilterByType BROTLI text/plain text/css text/xml text/javascript application/javascript</span><br><span class=\"line\"></span><br><span class=\"line\">  # SetOutputFilter BROTLI</span><br><span class=\"line\">  # SetEnvIfNoCase Request_URI \\.txt$ no-br</span><br><span class=\"line\"></span><br><span class=\"line\">  # Compression</span><br><span class=\"line\">  ## BrotliCompressionLevel: 0-11 (default: 11)</span><br><span class=\"line\">  BrotliCompressionLevel 10</span><br><span class=\"line\"></span><br><span class=\"line\">  ## BrotliWindowSize: 10-24 (default: 22)</span><br><span class=\"line\">  BrotliWindowSize 22</span><br><span class=\"line\"></span><br><span class=\"line\">  # Specifies how to change the ETag header when the response is compressed</span><br><span class=\"line\">  ## BrotliAlterEtag: AddSuffix, NoChange, Remove (default: AddSuffix)</span><br><span class=\"line\">  BrotliAlterEtag AddSuffix</span><br><span class=\"line\"></span><br><span class=\"line\">  # Filter note</span><br><span class=\"line\">  BrotliFilterNote Input  brotli_in</span><br><span class=\"line\">  BrotliFilterNote Output brotli_out</span><br><span class=\"line\">  BrotliFilterNote Ratio  brotli_ratio</span><br><span class=\"line\"></span><br><span class=\"line\">  LogFormat &apos;&quot;%r&quot; %&#123;brotli_out&#125;n/%&#123;brotli_in&#125;n (%&#123;brotli_ratio&#125;n)&apos; brotli</span><br><span class=\"line\">  CustomLog logs/access_log brotli</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>try -&gt; not work -&gt; docker exec -it container /bin/bash 检查了一下/usr/local/apache2/module里面没有这个mod -&gt; 所以首先要先build出来这个mod</p>\n<ol>\n<li>修改Dockerfile内的build脚本<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN git clone --depth=1 --recursive https://github.com/kjdev/apache-mod-brotli.git</span><br><span class=\"line\">RUN cd ./apache-mod-brotli &amp;&amp; sh ./autogen.sh &amp;&amp; ./configure &amp;&amp; make &amp;&amp; install -p -m 755 -D .libs/mod_brotli.so /usr/local/apache2/modules/mod_brotli.so</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>主要是这两句命令，大概就是clone了brotli的代码然后build出来需要的mod。<br>中间碰到一个坑，apt-get install的时候需要修改source.list，否则jessie-backports会出错。因为不太懂这个配置文件，中间查了很多关于”Failed to fetch jessie backports repository”这个错的文章，照着改了n多次。最后试下来加了这几句：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN sed -i &apos;/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d&apos; /etc/apt/sources.list</span><br><span class=\"line\">RUN echo &apos;deb http://archive.debian.org/debian jessie-backports main&apos; &gt; /etc/apt/sources.list.d/backports.list</span><br><span class=\"line\">RUN echo &apos;deb-src http://archive.debian.org/debian jessie-backports main&apos; &gt; /etc/apt/sources.list.d/backports.list</span><br><span class=\"line\">RUN apt-get -o Acquire::Check-Valid-Until=false update</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>安装必须软件<br>这步就比较简单，build时候如果报错了把需要的软件装一下。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;git&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;make&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;autotools-dev&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;automake&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;libtool&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;apache2-dev&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>到这里Brotli这个module就配置好了。实测网站首页load时间缩短了一半以上。<br><img src=\"https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-mine.png?Expires=1563186493&amp;OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&amp;Signature=ekTokdD6FZRBjqG%2BjBz%2BARWjLiw%3D\" alt=\"performance result\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>前端性能优化</p>\n<p>标题可能起的有点大，这次是实践是对目前在做的项目的一次性能调优，但是也没有尝试所有方式。</p>\n<p>起因是我们的网站被客户吐槽慢。。。</p>\n<p>然后开始了性能调优。</p>\n<h1 id=\"gzip实践\"><a href=\"#gzip实践\" class=\"headerlink\" title=\"gzip实践\"></a>gzip实践</h1><p>服务器端的优化是首先想到的方法，因为这个优化的力度是前端code层面优化比不了的。项目是Angular6的，打包之后用–stats-json和webpack-bundle-analyzer可以看到目前打包之后各个js的大小以及gzip压缩之后的大小，gzip压一压，最少能小一半，有些能压到十分之一。<br>gzip的原理是在服务器进行配置，对制定类型的文件采用gzip压缩，客户端在获得传输的数据之后再进行解压。通过这个方式可以减少文件传输的时间，但是会增加压缩和解压的时间，所以对于一些很小的文件是不建议启用gzip的（服务器配置的时候也可以设置文件大小）。<br>配置大概是</p>\n<p><code>LoadModule deflate_module modules/mod_deflate.so\nAddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript</code></p>\n<p>在httpd.conf开启mod_deflate，然后选一下文件类型。</p>\n<p>本地build了一个docker测试 =&gt; 快得一批！</p>\n<p>部署到服务器打开网站 =&gt; <strong>没得卵用</strong>！又改了几次配置，部署到服务器上都是一样。</p>\n<p>开始怀疑gzip，开始怀疑服务器，开始怀疑自己。</p>\n<ul>\n<li>问题：本地测试gzip生效，但服务器上相同配置gzip后不生效。</li>\n<li>思路：服务器的机器和本地机器肯定有不同，但是两边最终都是build出来docker image，image内的环境配置和安装的软件都是一样的，搜了“gzip不生效”找到的基本是怎么配置gzip -&gt; 两边不同的还有协议，服务器端proxy设置了强制ssl，所有访问都是https本地是<a href=\"http://localhost，搜“gzip\" target=\"_blank\" rel=\"noopener\">http://localhost，搜“gzip</a> https 不生效”找到答案：因为有BREACH（大致是ssl会对文件加密，以保护文件内容不被他人获取和篡改）但是如果引入gzip，hackers可以通过victim的机器发送大量明文请求和压缩算法(gzip 压缩在 HTTP 中的工作方式是这样：如果在响应中有同一个字符串的多个实例，第一个实例将被保留，而其余实例将被替换成指向第一个实例位置的短引用，以减少响应消息的体积)来破解文件内容。=&gt; SSL和gzip不能同时使用（搜索时候找到了一个关于apache的SSLCompression的配置，进行了尝试，无果）</li>\n</ul>\n<h1 id=\"Brotli实践\"><a href=\"#Brotli实践\" class=\"headerlink\" title=\"Brotli实践\"></a>Brotli实践</h1><ul>\n<li>问题：SSL和gzip不能同时使用，对于我们现有site SSL不能disable =&gt; 无法实现服务器端优化？</li>\n<li>思路：(看看别人是怎么做的）-&gt; bootstrap，load很快，它也是https，接着看了network，<img src=\"https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-bootstrap-brotli.png?Expires=1563183577&amp;OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&amp;Signature=L8XbNXEuEhgT1CjZ8B0XsSWqqSE%3D\" alt=\"Performance bootstrap\">文件被压缩过-&gt;继续看response头-&gt; 发现：content-encoding: br-&gt;搜索“content-encoding br”-&gt;找到Brotli是一种类似gzip的压缩算法，接下来就是在server上进行Brotli的配置。</li>\n</ul>\n<ol>\n<li>首先要在httpd.conf配置当中打开mod_brotli，这一步有点类似于gzip打开mod_deflate，然后配置需要压缩的文件类型，配置大概长这样：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Load brotli module</span><br><span class=\"line\">LoadModule brotli_module modules/mod_brotli.so</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;IfModule brotli_module&gt;</span><br><span class=\"line\">  # Output filter</span><br><span class=\"line\">  AddOutputFilterByType BROTLI text/plain text/css text/xml text/javascript application/javascript</span><br><span class=\"line\"></span><br><span class=\"line\">  # SetOutputFilter BROTLI</span><br><span class=\"line\">  # SetEnvIfNoCase Request_URI \\.txt$ no-br</span><br><span class=\"line\"></span><br><span class=\"line\">  # Compression</span><br><span class=\"line\">  ## BrotliCompressionLevel: 0-11 (default: 11)</span><br><span class=\"line\">  BrotliCompressionLevel 10</span><br><span class=\"line\"></span><br><span class=\"line\">  ## BrotliWindowSize: 10-24 (default: 22)</span><br><span class=\"line\">  BrotliWindowSize 22</span><br><span class=\"line\"></span><br><span class=\"line\">  # Specifies how to change the ETag header when the response is compressed</span><br><span class=\"line\">  ## BrotliAlterEtag: AddSuffix, NoChange, Remove (default: AddSuffix)</span><br><span class=\"line\">  BrotliAlterEtag AddSuffix</span><br><span class=\"line\"></span><br><span class=\"line\">  # Filter note</span><br><span class=\"line\">  BrotliFilterNote Input  brotli_in</span><br><span class=\"line\">  BrotliFilterNote Output brotli_out</span><br><span class=\"line\">  BrotliFilterNote Ratio  brotli_ratio</span><br><span class=\"line\"></span><br><span class=\"line\">  LogFormat &apos;&quot;%r&quot; %&#123;brotli_out&#125;n/%&#123;brotli_in&#125;n (%&#123;brotli_ratio&#125;n)&apos; brotli</span><br><span class=\"line\">  CustomLog logs/access_log brotli</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>try -&gt; not work -&gt; docker exec -it container /bin/bash 检查了一下/usr/local/apache2/module里面没有这个mod -&gt; 所以首先要先build出来这个mod</p>\n<ol>\n<li>修改Dockerfile内的build脚本<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN git clone --depth=1 --recursive https://github.com/kjdev/apache-mod-brotli.git</span><br><span class=\"line\">RUN cd ./apache-mod-brotli &amp;&amp; sh ./autogen.sh &amp;&amp; ./configure &amp;&amp; make &amp;&amp; install -p -m 755 -D .libs/mod_brotli.so /usr/local/apache2/modules/mod_brotli.so</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>主要是这两句命令，大概就是clone了brotli的代码然后build出来需要的mod。<br>中间碰到一个坑，apt-get install的时候需要修改source.list，否则jessie-backports会出错。因为不太懂这个配置文件，中间查了很多关于”Failed to fetch jessie backports repository”这个错的文章，照着改了n多次。最后试下来加了这几句：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN sed -i &apos;/deb http:\\/\\/deb.debian.org\\/debian jessie-updates main/d&apos; /etc/apt/sources.list</span><br><span class=\"line\">RUN echo &apos;deb http://archive.debian.org/debian jessie-backports main&apos; &gt; /etc/apt/sources.list.d/backports.list</span><br><span class=\"line\">RUN echo &apos;deb-src http://archive.debian.org/debian jessie-backports main&apos; &gt; /etc/apt/sources.list.d/backports.list</span><br><span class=\"line\">RUN apt-get -o Acquire::Check-Valid-Until=false update</span><br></pre></td></tr></table></figure></p>\n<ol start=\"3\">\n<li>安装必须软件<br>这步就比较简单，build时候如果报错了把需要的软件装一下。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;git&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;make&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;autotools-dev&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;automake&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;libtool&quot;]</span><br><span class=\"line\">RUN [&quot;apt-get&quot;, &quot;install&quot;, &quot;-y&quot;, &quot;apache2-dev&quot;]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>到这里Brotli这个module就配置好了。实测网站首页load时间缩短了一半以上。<br><img src=\"https://hexo-photos.oss-cn-shanghai.aliyuncs.com/performance-mine.png?Expires=1563186493&amp;OSSAccessKeyId=TMP.hVC5Sr5RYQU2KYEvHgB5CwmJzF2Lo8ZpYKmoA9wTfpnJo2iNaMzsEWyfTNRaYxMA7bSRENR1mYdjEhBo6YVrRSyfkLheN9acLDBcqFnbGxFZGVBJTyY3nZfRZWy2Fw.tmp&amp;Signature=ekTokdD6FZRBjqG%2BjBz%2BARWjLiw%3D\" alt=\"performance result\"></p>\n"},{"title":"[HTML5/css3] - 基础 - 2","id":"191","date":"2017-02-15T23:54:35.000Z","_content":"\n1\\. native app -&gt; webApp -&gt; hybrid app\n\n2\\. 标签变化\n1). &lt;!DOCTYPE HTML&gt; - 说明html版本\nhtml4 -&gt; loose/transitional/strict dtd\nhtml5 -&gt; 不需要引入dtd 和原来doctype相同，why？\n2） dtd -&gt; doc type definition(xml) 定义一系列合法元素的结构（W3C） 但html5 不是基于此定义。\n\n3\\. 新增标签\n-结构 ——相当于div 但是增加了语义\n1）article 定义了一篇文章\n2）header 一个页面或一个区域的头部\n3）nav 导航链接\n4）section 定义一个区域（类似div）\n5）aside 定义页面部分的侧栏\n6）hgroup 标题组 h1，h2\n7）figure 一组多媒体内容及其标题\n8）figcaption figure元素标题\n9）footer 一个页面或一个区域底部\n10）dialog 定义一个对话框\n补充：header/section/aside/article/footer 一般不要嵌套使用 header/section/footer &gt; aside/article/figure/hgroup/nav &gt; div\n\n-多媒体标签：\n1) video\n2) audio\n3) source\n---example: &lt;audio src=\"sample.mp3\" autoplay=\"autoplay\" loop=\"-1\" controls=\"controls\"&gt;browser not support meida&lt;/audio&gt;\n&lt;video src=\"sample.mp4\" autoplay=\"autoplay\" loop=\"-1\" controls=\"controls\"&gt;&lt;/video&gt;\n----source -&gt; 文件格式兼容性问题\n&lt;audio autoplay=\"autoplay\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;source src=\"sample.mp3\" type=\"audio/mpeg\"&gt;\n&lt;/audio&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type-&gt;转码器\n&lt;video controls=\"controls\" width=\"\" height\"\"&gt;\n&nbsp;&nbsp;&nbsp; &lt;source src=\"sample.mp4\" type=\"video/mp4\"&gt;\n&lt;/video&gt;\n4) canvas\n5) embed -flash &lt;embed src=\"sample.swf\"&gt;&lt;/embed&gt;\n&nbsp;\n-状态标签\n1) meter 气压/温度/电压等 (chrome, opera)\n&lt;meter value=\"\" min=\"\" max=\"\" low=\"\" high=\"\" optimum=\"\"&gt;&lt;/meter&gt; 会根据各值的区间显示当前状态，若只有value将按百分比计算\n2) progress (chrome ff opera)\n&lt;progress value=\"\" max=\"\"&gt; 根据value和max的值计算其加载进度\n&lt;progress max=\"\"&gt; 加载中动画\n-列表标签\n1) datalist\n&lt;input placeholder=\"\" list=\"\"&gt;\n&lt;datalist id=\"plist\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=\"\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=\"\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;\n&lt;/datalist&gt;&lt;/input&gt;\n2) details\n&lt;details open=\"open\"&gt;&lt;summary&gt;&lt;/summary&gt;&lt;p&gt;&lt;/p&gt;&lt;/details&gt;\n-menu标签 主流浏览器支持不好\n\n-其他标签\n1) ruby，rt，rp -注释（音标）rp针对不兼容rt的浏览器的fallback\n&lt;ruby&gt;&lt;rp&gt;&lt;/rp&gt;&lt;rt&gt;content&lt;/rt&gt;&lt;rp&gt;&lt;/rp&gt;&lt;/ruby&gt;\n2) mark\n3) output 对应表单input用于打印结果，配合form oninput事件\n\n4.删除的标签\n1) basefont, big, center, font, s, strike, tt, u (偏向styling的标签）\n2）frame, frameset, noframes（对可用性造成负面影响）\n3) acronym, applet isindex, dir（混淆元素）\n\n5\\. 重定义标签\n1) b, i -没有重要的意义\n2) dd, dt -原本是dl下的标签，现在可以和details, figure一起使用\n3) hr -水平线<span style=\"text-decoration: underline;\">并表示主题结束</span>\n4) small 小字体并表示批注\n5) strong 重要性\n","source":"_posts/HTML5CSS/H5 - 基础 - 2.md","raw":"---\ntitle: '[HTML5/css3] - 基础 - 2'\nid: 191\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-16 07:54:35\ntags:\n---\n\n1\\. native app -&gt; webApp -&gt; hybrid app\n\n2\\. 标签变化\n1). &lt;!DOCTYPE HTML&gt; - 说明html版本\nhtml4 -&gt; loose/transitional/strict dtd\nhtml5 -&gt; 不需要引入dtd 和原来doctype相同，why？\n2） dtd -&gt; doc type definition(xml) 定义一系列合法元素的结构（W3C） 但html5 不是基于此定义。\n\n3\\. 新增标签\n-结构 ——相当于div 但是增加了语义\n1）article 定义了一篇文章\n2）header 一个页面或一个区域的头部\n3）nav 导航链接\n4）section 定义一个区域（类似div）\n5）aside 定义页面部分的侧栏\n6）hgroup 标题组 h1，h2\n7）figure 一组多媒体内容及其标题\n8）figcaption figure元素标题\n9）footer 一个页面或一个区域底部\n10）dialog 定义一个对话框\n补充：header/section/aside/article/footer 一般不要嵌套使用 header/section/footer &gt; aside/article/figure/hgroup/nav &gt; div\n\n-多媒体标签：\n1) video\n2) audio\n3) source\n---example: &lt;audio src=\"sample.mp3\" autoplay=\"autoplay\" loop=\"-1\" controls=\"controls\"&gt;browser not support meida&lt;/audio&gt;\n&lt;video src=\"sample.mp4\" autoplay=\"autoplay\" loop=\"-1\" controls=\"controls\"&gt;&lt;/video&gt;\n----source -&gt; 文件格式兼容性问题\n&lt;audio autoplay=\"autoplay\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;source src=\"sample.mp3\" type=\"audio/mpeg\"&gt;\n&lt;/audio&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type-&gt;转码器\n&lt;video controls=\"controls\" width=\"\" height\"\"&gt;\n&nbsp;&nbsp;&nbsp; &lt;source src=\"sample.mp4\" type=\"video/mp4\"&gt;\n&lt;/video&gt;\n4) canvas\n5) embed -flash &lt;embed src=\"sample.swf\"&gt;&lt;/embed&gt;\n&nbsp;\n-状态标签\n1) meter 气压/温度/电压等 (chrome, opera)\n&lt;meter value=\"\" min=\"\" max=\"\" low=\"\" high=\"\" optimum=\"\"&gt;&lt;/meter&gt; 会根据各值的区间显示当前状态，若只有value将按百分比计算\n2) progress (chrome ff opera)\n&lt;progress value=\"\" max=\"\"&gt; 根据value和max的值计算其加载进度\n&lt;progress max=\"\"&gt; 加载中动画\n-列表标签\n1) datalist\n&lt;input placeholder=\"\" list=\"\"&gt;\n&lt;datalist id=\"plist\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=\"\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=\"\"&gt;\n&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;\n&lt;/datalist&gt;&lt;/input&gt;\n2) details\n&lt;details open=\"open\"&gt;&lt;summary&gt;&lt;/summary&gt;&lt;p&gt;&lt;/p&gt;&lt;/details&gt;\n-menu标签 主流浏览器支持不好\n\n-其他标签\n1) ruby，rt，rp -注释（音标）rp针对不兼容rt的浏览器的fallback\n&lt;ruby&gt;&lt;rp&gt;&lt;/rp&gt;&lt;rt&gt;content&lt;/rt&gt;&lt;rp&gt;&lt;/rp&gt;&lt;/ruby&gt;\n2) mark\n3) output 对应表单input用于打印结果，配合form oninput事件\n\n4.删除的标签\n1) basefont, big, center, font, s, strike, tt, u (偏向styling的标签）\n2）frame, frameset, noframes（对可用性造成负面影响）\n3) acronym, applet isindex, dir（混淆元素）\n\n5\\. 重定义标签\n1) b, i -没有重要的意义\n2) dd, dt -原本是dl下的标签，现在可以和details, figure一起使用\n3) hr -水平线<span style=\"text-decoration: underline;\">并表示主题结束</span>\n4) small 小字体并表示批注\n5) strong 重要性\n","slug":"HTML5CSS/H5 - 基础 - 2","published":1,"updated":"2018-11-27T02:45:08.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrc6000on9v2zu83z3b0","content":"<p>1. native app -&gt; webApp -&gt; hybrid app</p>\n<p>2. 标签变化<br>1). &lt;!DOCTYPE HTML&gt; - 说明html版本<br>html4 -&gt; loose/transitional/strict dtd<br>html5 -&gt; 不需要引入dtd 和原来doctype相同，why？<br>2） dtd -&gt; doc type definition(xml) 定义一系列合法元素的结构（W3C） 但html5 不是基于此定义。</p>\n<p>3. 新增标签<br>-结构 ——相当于div 但是增加了语义<br>1）article 定义了一篇文章<br>2）header 一个页面或一个区域的头部<br>3）nav 导航链接<br>4）section 定义一个区域（类似div）<br>5）aside 定义页面部分的侧栏<br>6）hgroup 标题组 h1，h2<br>7）figure 一组多媒体内容及其标题<br>8）figcaption figure元素标题<br>9）footer 一个页面或一个区域底部<br>10）dialog 定义一个对话框<br>补充：header/section/aside/article/footer 一般不要嵌套使用 header/section/footer &gt; aside/article/figure/hgroup/nav &gt; div</p>\n<p>-多媒体标签：<br>1) video<br>2) audio<br>3) source<br>—example: &lt;audio src=”sample.mp3” autoplay=”autoplay” loop=”-1” controls=”controls”&gt;browser not support meida&lt;/audio&gt;<br>&lt;video src=”sample.mp4” autoplay=”autoplay” loop=”-1” controls=”controls”&gt;&lt;/video&gt;<br>—-source -&gt; 文件格式兼容性问题<br>&lt;audio autoplay=”autoplay”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;source src=”sample.mp3” type=”audio/mpeg”&gt;<br>&lt;/audio&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type-&gt;转码器<br>&lt;video controls=”controls” width=”” height””&gt;<br>&nbsp;&nbsp;&nbsp; &lt;source src=”sample.mp4” type=”video/mp4”&gt;<br>&lt;/video&gt;<br>4) canvas<br>5) embed -flash &lt;embed src=”sample.swf”&gt;&lt;/embed&gt;<br>&nbsp;<br>-状态标签<br>1) meter 气压/温度/电压等 (chrome, opera)<br>&lt;meter value=”” min=”” max=”” low=”” high=”” optimum=””&gt;&lt;/meter&gt; 会根据各值的区间显示当前状态，若只有value将按百分比计算<br>2) progress (chrome ff opera)<br>&lt;progress value=”” max=””&gt; 根据value和max的值计算其加载进度<br>&lt;progress max=””&gt; 加载中动画<br>-列表标签<br>1) datalist<br>&lt;input placeholder=”” list=””&gt;<br>&lt;datalist id=”plist”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=””&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=””&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;<br>&lt;/datalist&gt;&lt;/input&gt;<br>2) details<br>&lt;details open=”open”&gt;&lt;summary&gt;&lt;/summary&gt;&lt;p&gt;&lt;/p&gt;&lt;/details&gt;<br>-menu标签 主流浏览器支持不好</p>\n<p>-其他标签<br>1) ruby，rt，rp -注释（音标）rp针对不兼容rt的浏览器的fallback<br>&lt;ruby&gt;&lt;rp&gt;&lt;/rp&gt;&lt;rt&gt;content&lt;/rt&gt;&lt;rp&gt;&lt;/rp&gt;&lt;/ruby&gt;<br>2) mark<br>3) output 对应表单input用于打印结果，配合form oninput事件</p>\n<p>4.删除的标签<br>1) basefont, big, center, font, s, strike, tt, u (偏向styling的标签）<br>2）frame, frameset, noframes（对可用性造成负面影响）<br>3) acronym, applet isindex, dir（混淆元素）</p>\n<p>5. 重定义标签<br>1) b, i -没有重要的意义<br>2) dd, dt -原本是dl下的标签，现在可以和details, figure一起使用<br>3) hr -水平线<span style=\"text-decoration: underline;\">并表示主题结束</span><br>4) small 小字体并表示批注<br>5) strong 重要性</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. native app -&gt; webApp -&gt; hybrid app</p>\n<p>2. 标签变化<br>1). &lt;!DOCTYPE HTML&gt; - 说明html版本<br>html4 -&gt; loose/transitional/strict dtd<br>html5 -&gt; 不需要引入dtd 和原来doctype相同，why？<br>2） dtd -&gt; doc type definition(xml) 定义一系列合法元素的结构（W3C） 但html5 不是基于此定义。</p>\n<p>3. 新增标签<br>-结构 ——相当于div 但是增加了语义<br>1）article 定义了一篇文章<br>2）header 一个页面或一个区域的头部<br>3）nav 导航链接<br>4）section 定义一个区域（类似div）<br>5）aside 定义页面部分的侧栏<br>6）hgroup 标题组 h1，h2<br>7）figure 一组多媒体内容及其标题<br>8）figcaption figure元素标题<br>9）footer 一个页面或一个区域底部<br>10）dialog 定义一个对话框<br>补充：header/section/aside/article/footer 一般不要嵌套使用 header/section/footer &gt; aside/article/figure/hgroup/nav &gt; div</p>\n<p>-多媒体标签：<br>1) video<br>2) audio<br>3) source<br>—example: &lt;audio src=”sample.mp3” autoplay=”autoplay” loop=”-1” controls=”controls”&gt;browser not support meida&lt;/audio&gt;<br>&lt;video src=”sample.mp4” autoplay=”autoplay” loop=”-1” controls=”controls”&gt;&lt;/video&gt;<br>—-source -&gt; 文件格式兼容性问题<br>&lt;audio autoplay=”autoplay”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;source src=”sample.mp3” type=”audio/mpeg”&gt;<br>&lt;/audio&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; type-&gt;转码器<br>&lt;video controls=”controls” width=”” height””&gt;<br>&nbsp;&nbsp;&nbsp; &lt;source src=”sample.mp4” type=”video/mp4”&gt;<br>&lt;/video&gt;<br>4) canvas<br>5) embed -flash &lt;embed src=”sample.swf”&gt;&lt;/embed&gt;<br>&nbsp;<br>-状态标签<br>1) meter 气压/温度/电压等 (chrome, opera)<br>&lt;meter value=”” min=”” max=”” low=”” high=”” optimum=””&gt;&lt;/meter&gt; 会根据各值的区间显示当前状态，若只有value将按百分比计算<br>2) progress (chrome ff opera)<br>&lt;progress value=”” max=””&gt; 根据value和max的值计算其加载进度<br>&lt;progress max=””&gt; 加载中动画<br>-列表标签<br>1) datalist<br>&lt;input placeholder=”” list=””&gt;<br>&lt;datalist id=”plist”&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=””&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;option value=””&gt;<br>&nbsp;&nbsp;&nbsp;&nbsp; &lt;/option&gt;<br>&lt;/datalist&gt;&lt;/input&gt;<br>2) details<br>&lt;details open=”open”&gt;&lt;summary&gt;&lt;/summary&gt;&lt;p&gt;&lt;/p&gt;&lt;/details&gt;<br>-menu标签 主流浏览器支持不好</p>\n<p>-其他标签<br>1) ruby，rt，rp -注释（音标）rp针对不兼容rt的浏览器的fallback<br>&lt;ruby&gt;&lt;rp&gt;&lt;/rp&gt;&lt;rt&gt;content&lt;/rt&gt;&lt;rp&gt;&lt;/rp&gt;&lt;/ruby&gt;<br>2) mark<br>3) output 对应表单input用于打印结果，配合form oninput事件</p>\n<p>4.删除的标签<br>1) basefont, big, center, font, s, strike, tt, u (偏向styling的标签）<br>2）frame, frameset, noframes（对可用性造成负面影响）<br>3) acronym, applet isindex, dir（混淆元素）</p>\n<p>5. 重定义标签<br>1) b, i -没有重要的意义<br>2) dd, dt -原本是dl下的标签，现在可以和details, figure一起使用<br>3) hr -水平线<span style=\"text-decoration: underline;\">并表示主题结束</span><br>4) small 小字体并表示批注<br>5) strong 重要性</p>\n"},{"title":"[HTML] - 基础 - 1","id":"31","date":"2017-02-11T15:01:16.000Z","_content":"\n1 基本结构：\n\n&lt;!DOCTYPE HTML&gt;\n\n&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;&lt;/body&gt;\n\n&lt;/html&gt;\n\n2 head:\n\n&lt;head&gt;\n\n&lt;title&gt;&lt;/title&gt;\n\n&lt;meta&gt;\n\n&lt;link&gt;\n\n&lt;style&gt;&lt;/style&gt;\n\n&lt;script&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n\n3 语义化\n\n1）容易被搜索引擎理解、收录（SEO）\n\n2）屏幕阅读器读出内容\n\n4 标签\n\n1）&lt;p&gt;&lt;/p&gt;\n\n2) &lt;hx&gt;&lt;/hx&gt;\n\n3) _&lt;em&gt;&lt;/em&gt;_ **&lt;strong&gt;&lt;/strong&gt;**\n\n4) &lt;span&gt;&lt;/span&gt; (没有语义，只是作为单独的样式）\n\n5) &lt;q&gt;&lt;/q&gt; &lt;blockquote&gt;&lt;/blockquote&gt;\n\n6) &lt;br /&gt; (写法：xhtml1.0，空标签：&lt;hr /&gt;, &lt;img /&gt;,&lt;input /&gt;）\n\n7) &amp;nbsp;\n\n8) &lt;hr /&gt;\n\n9) &lt;address&gt;&lt;/address&gt;\n\n10) &lt;code&gt;&lt;/code&gt; &lt;pre&gt;&lt;/pre&gt;\n\n11) &lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;     &lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;\n\n12) &lt;div&gt;&lt;/div&gt; 作为一个容器，区分一个逻辑部分\n\n13) &lt;table summary=\"\"&gt;\n\n&lt;caption&gt;&lt;/caption&gt;\n\n&lt;tbody&gt;\n\n&lt;tr&gt;\n\n&lt;th&gt;&lt;/th&gt;\n\n&lt;/tr&gt;\n\n&lt;tr&gt;\n\n&lt;td&gt;\n\n&lt;/td&gt;\n\n&lt;/tr&gt;\n\n&lt;/tbody&gt;\n\n&lt;/table&gt;\n\n（tbody 加载完毕显示全部，summary-语义）\n\n14) &lt;a href=\"\" title=\"\" target=\"_blank\"&gt;&lt;/a&gt;\n\n15) href=\"mailto:yy@gmail.com?cc=&amp;bcc=&amp;subject=&amp;body=\"\n\n16) &lt;img src=\"\" title=\"\" alt=\"\" /&gt;\n\n17) &lt;form method=\"\" action=\"\"&gt;&lt;/form&gt;\n\n19) &lt;input type=\"\" name=\"\" /&gt;\n\n20) &lt;textarea cols=\"\" rows=\"\"&gt;&lt;/textarea&gt;\n\n21) &lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;\n\n22) type=\"submit\" type=\"reset\"\n\n23) &lt;label for=\"\"&gt;&lt;/label&gt; （和对应input的id值相同）\n","source":"_posts/HTML5CSS/HTML - 基础 - 1.md","raw":"---\ntitle: '[HTML] - 基础 - 1'\nid: 31\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-11 23:01:16\ntags:\n---\n\n1 基本结构：\n\n&lt;!DOCTYPE HTML&gt;\n\n&lt;html&gt;\n\n&lt;head&gt;&lt;/head&gt;\n\n&lt;body&gt;&lt;/body&gt;\n\n&lt;/html&gt;\n\n2 head:\n\n&lt;head&gt;\n\n&lt;title&gt;&lt;/title&gt;\n\n&lt;meta&gt;\n\n&lt;link&gt;\n\n&lt;style&gt;&lt;/style&gt;\n\n&lt;script&gt;&lt;/script&gt;\n\n&lt;/head&gt;\n\n3 语义化\n\n1）容易被搜索引擎理解、收录（SEO）\n\n2）屏幕阅读器读出内容\n\n4 标签\n\n1）&lt;p&gt;&lt;/p&gt;\n\n2) &lt;hx&gt;&lt;/hx&gt;\n\n3) _&lt;em&gt;&lt;/em&gt;_ **&lt;strong&gt;&lt;/strong&gt;**\n\n4) &lt;span&gt;&lt;/span&gt; (没有语义，只是作为单独的样式）\n\n5) &lt;q&gt;&lt;/q&gt; &lt;blockquote&gt;&lt;/blockquote&gt;\n\n6) &lt;br /&gt; (写法：xhtml1.0，空标签：&lt;hr /&gt;, &lt;img /&gt;,&lt;input /&gt;）\n\n7) &amp;nbsp;\n\n8) &lt;hr /&gt;\n\n9) &lt;address&gt;&lt;/address&gt;\n\n10) &lt;code&gt;&lt;/code&gt; &lt;pre&gt;&lt;/pre&gt;\n\n11) &lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;     &lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;\n\n12) &lt;div&gt;&lt;/div&gt; 作为一个容器，区分一个逻辑部分\n\n13) &lt;table summary=\"\"&gt;\n\n&lt;caption&gt;&lt;/caption&gt;\n\n&lt;tbody&gt;\n\n&lt;tr&gt;\n\n&lt;th&gt;&lt;/th&gt;\n\n&lt;/tr&gt;\n\n&lt;tr&gt;\n\n&lt;td&gt;\n\n&lt;/td&gt;\n\n&lt;/tr&gt;\n\n&lt;/tbody&gt;\n\n&lt;/table&gt;\n\n（tbody 加载完毕显示全部，summary-语义）\n\n14) &lt;a href=\"\" title=\"\" target=\"_blank\"&gt;&lt;/a&gt;\n\n15) href=\"mailto:yy@gmail.com?cc=&amp;bcc=&amp;subject=&amp;body=\"\n\n16) &lt;img src=\"\" title=\"\" alt=\"\" /&gt;\n\n17) &lt;form method=\"\" action=\"\"&gt;&lt;/form&gt;\n\n19) &lt;input type=\"\" name=\"\" /&gt;\n\n20) &lt;textarea cols=\"\" rows=\"\"&gt;&lt;/textarea&gt;\n\n21) &lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;\n\n22) type=\"submit\" type=\"reset\"\n\n23) &lt;label for=\"\"&gt;&lt;/label&gt; （和对应input的id值相同）\n","slug":"HTML5CSS/HTML - 基础 - 1","published":1,"updated":"2018-11-27T02:45:08.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrc7000qn9v27bm5lh1g","content":"<p>1 基本结构：</p>\n<p>&lt;!DOCTYPE HTML&gt;</p>\n<p>&lt;html&gt;</p>\n<p>&lt;head&gt;&lt;/head&gt;</p>\n<p>&lt;body&gt;&lt;/body&gt;</p>\n<p>&lt;/html&gt;</p>\n<p>2 head:</p>\n<p>&lt;head&gt;</p>\n<p>&lt;title&gt;&lt;/title&gt;</p>\n<p>&lt;meta&gt;</p>\n<p>&lt;link&gt;</p>\n<p>&lt;style&gt;&lt;/style&gt;</p>\n<p>&lt;script&gt;&lt;/script&gt;</p>\n<p>&lt;/head&gt;</p>\n<p>3 语义化</p>\n<p>1）容易被搜索引擎理解、收录（SEO）</p>\n<p>2）屏幕阅读器读出内容</p>\n<p>4 标签</p>\n<p>1）&lt;p&gt;&lt;/p&gt;</p>\n<p>2) &lt;hx&gt;&lt;/hx&gt;</p>\n<p>3) <em>&lt;em&gt;&lt;/em&gt;</em> <strong>&lt;strong&gt;&lt;/strong&gt;</strong></p>\n<p>4) &lt;span&gt;&lt;/span&gt; (没有语义，只是作为单独的样式）</p>\n<p>5) &lt;q&gt;&lt;/q&gt; &lt;blockquote&gt;&lt;/blockquote&gt;</p>\n<p>6) &lt;br /&gt; (写法：xhtml1.0，空标签：&lt;hr /&gt;, &lt;img /&gt;,&lt;input /&gt;）</p>\n<p>7) &amp;nbsp;</p>\n<p>8) &lt;hr /&gt;</p>\n<p>9) &lt;address&gt;&lt;/address&gt;</p>\n<p>10) &lt;code&gt;&lt;/code&gt; &lt;pre&gt;&lt;/pre&gt;</p>\n<p>11) &lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;     &lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;</p>\n<p>12) &lt;div&gt;&lt;/div&gt; 作为一个容器，区分一个逻辑部分</p>\n<p>13) &lt;table summary=””&gt;</p>\n<p>&lt;caption&gt;&lt;/caption&gt;</p>\n<p>&lt;tbody&gt;</p>\n<p>&lt;tr&gt;</p>\n<p>&lt;th&gt;&lt;/th&gt;</p>\n<p>&lt;/tr&gt;</p>\n<p>&lt;tr&gt;</p>\n<p>&lt;td&gt;</p>\n<p>&lt;/td&gt;</p>\n<p>&lt;/tr&gt;</p>\n<p>&lt;/tbody&gt;</p>\n<p>&lt;/table&gt;</p>\n<p>（tbody 加载完毕显示全部，summary-语义）</p>\n<p>14) &lt;a href=”” title=”” target=”_blank”&gt;&lt;/a&gt;</p>\n<p>15) href=”mailto:<a href=\"mailto:yy@gmail.com\" target=\"_blank\" rel=\"noopener\">yy@gmail.com</a>?cc=&amp;bcc=&amp;subject=&amp;body=”</p>\n<p>16) &lt;img src=”” title=”” alt=”” /&gt;</p>\n<p>17) &lt;form method=”” action=””&gt;&lt;/form&gt;</p>\n<p>19) &lt;input type=”” name=”” /&gt;</p>\n<p>20) &lt;textarea cols=”” rows=””&gt;&lt;/textarea&gt;</p>\n<p>21) &lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;</p>\n<p>22) type=”submit” type=”reset”</p>\n<p>23) &lt;label for=””&gt;&lt;/label&gt; （和对应input的id值相同）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1 基本结构：</p>\n<p>&lt;!DOCTYPE HTML&gt;</p>\n<p>&lt;html&gt;</p>\n<p>&lt;head&gt;&lt;/head&gt;</p>\n<p>&lt;body&gt;&lt;/body&gt;</p>\n<p>&lt;/html&gt;</p>\n<p>2 head:</p>\n<p>&lt;head&gt;</p>\n<p>&lt;title&gt;&lt;/title&gt;</p>\n<p>&lt;meta&gt;</p>\n<p>&lt;link&gt;</p>\n<p>&lt;style&gt;&lt;/style&gt;</p>\n<p>&lt;script&gt;&lt;/script&gt;</p>\n<p>&lt;/head&gt;</p>\n<p>3 语义化</p>\n<p>1）容易被搜索引擎理解、收录（SEO）</p>\n<p>2）屏幕阅读器读出内容</p>\n<p>4 标签</p>\n<p>1）&lt;p&gt;&lt;/p&gt;</p>\n<p>2) &lt;hx&gt;&lt;/hx&gt;</p>\n<p>3) <em>&lt;em&gt;&lt;/em&gt;</em> <strong>&lt;strong&gt;&lt;/strong&gt;</strong></p>\n<p>4) &lt;span&gt;&lt;/span&gt; (没有语义，只是作为单独的样式）</p>\n<p>5) &lt;q&gt;&lt;/q&gt; &lt;blockquote&gt;&lt;/blockquote&gt;</p>\n<p>6) &lt;br /&gt; (写法：xhtml1.0，空标签：&lt;hr /&gt;, &lt;img /&gt;,&lt;input /&gt;）</p>\n<p>7) &amp;nbsp;</p>\n<p>8) &lt;hr /&gt;</p>\n<p>9) &lt;address&gt;&lt;/address&gt;</p>\n<p>10) &lt;code&gt;&lt;/code&gt; &lt;pre&gt;&lt;/pre&gt;</p>\n<p>11) &lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;     &lt;ol&gt;&lt;li&gt;&lt;/li&gt;&lt;/ol&gt;</p>\n<p>12) &lt;div&gt;&lt;/div&gt; 作为一个容器，区分一个逻辑部分</p>\n<p>13) &lt;table summary=””&gt;</p>\n<p>&lt;caption&gt;&lt;/caption&gt;</p>\n<p>&lt;tbody&gt;</p>\n<p>&lt;tr&gt;</p>\n<p>&lt;th&gt;&lt;/th&gt;</p>\n<p>&lt;/tr&gt;</p>\n<p>&lt;tr&gt;</p>\n<p>&lt;td&gt;</p>\n<p>&lt;/td&gt;</p>\n<p>&lt;/tr&gt;</p>\n<p>&lt;/tbody&gt;</p>\n<p>&lt;/table&gt;</p>\n<p>（tbody 加载完毕显示全部，summary-语义）</p>\n<p>14) &lt;a href=”” title=”” target=”_blank”&gt;&lt;/a&gt;</p>\n<p>15) href=”mailto:<a href=\"mailto:yy@gmail.com\" target=\"_blank\" rel=\"noopener\">yy@gmail.com</a>?cc=&amp;bcc=&amp;subject=&amp;body=”</p>\n<p>16) &lt;img src=”” title=”” alt=”” /&gt;</p>\n<p>17) &lt;form method=”” action=””&gt;&lt;/form&gt;</p>\n<p>19) &lt;input type=”” name=”” /&gt;</p>\n<p>20) &lt;textarea cols=”” rows=””&gt;&lt;/textarea&gt;</p>\n<p>21) &lt;select&gt;&lt;option&gt;&lt;/option&gt;&lt;/select&gt;</p>\n<p>22) type=”submit” type=”reset”</p>\n<p>23) &lt;label for=””&gt;&lt;/label&gt; （和对应input的id值相同）</p>\n"},{"title":"[CSS] - 基础 - 1","id":"40","date":"2017-02-12T07:26:55.000Z","_content":"\n1 css - cascading style sheets\n\n2 基本结构：选择器+声明\n\n3 内联式css，嵌入式css，外部式css（相同权值，就近）\n\n4 选择器\n\n1）标签选择器\n\n2）类选择器（多对多）\n\n3）ID选择器（一对一）\n\n4）子选择器&gt;\n\n5）后代选择器\n\n6）通用选择器*\n\n7）伪类选择符 （选择html中标签的某种状态，如a:hover - 兼容性问题）\n\n5 特性\n\n继承，特殊性（权值：标签1，类10，ID100），重要性\n\n6 字体\n\n1）font-family:\"Microsoft Yahei\";\n\n2）font-style, font-weight\n\n3）text-decoration:underline; line-through\n\n4）text-indent\n\n5）line-height\n\n6）letter-spacing, word-spacing\n\n7）text-align\n\n7 块元素    display:block;\n\n1）&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;...&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;\n\n2）特性：独占一行；宽度、高度、行高、顶底边距可设；宽度为设置为父元素100%\n\n8 内联元素    display:inline\n\n1）&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;\n\n2）特性：和其他内联元素在同行；宽度、高度、顶底边距不可设置；宽度为其包含文字或图片的宽度\n\n9 内联块元素    display:inline-block\n\n1）&lt;img&gt;、&lt;input&gt;\n\n2）特性：和内联/内联块元素同行，宽度、高度、顶底边距可设置\n\n10 盒模型\n\n1）块模型具有盒模型的特点。内外填充（padding，margin，border）\n\n2）border: {border-width border-style border-color} (dashed, dotted, solid)\n\n3）宽度：包括margin，border，padding，和content（内容）宽度\n\n11 布局模型\n\n1）流动模型（默认）：块元素自上而下，每个占一行，未分配情况下宽度100%；内联元素从左到右排布\n\n2）浮动模型：实现块元素同行显示，任何元素都可以加float。\n\n3）层模型：position:{relative,absolute,fixed} （absolute和fixed的相对位置是父元素中具有相对属性即position:relative的元素，找不到则是body）\n\n11 代码简写\n\n1）盒模型：margin，padding，上，右，下，左；上下，左右；上下左右\n\n2）颜色值缩写：#333，#369\n\n3）字体缩写：font-weight, font-style, font-family, font-size, line-height, font-variant 等可合为font（font-size/line-height, font-family 必填）\n\n12 字体大小\n\n1）像素：px css规定90px为1英寸\n\n2）em：以font-size为标准，如font-size:12px; text-indent:2em; 其中1em=12px，如果font-size是em则以父元素font-size为标准（responsive）\n\n3）百分比：仍然以font-size为标准计算\n\n13 水平居中\n\n1）内联：父元素text-align:center;实现\n\n2）定宽块元素：左右margin设为auto（定宽和块两个条件同时满足）\n\n3）不定宽块元素：1\\. 外部嵌套table，table设置左右margin为auto（table自适应内容宽度，相当于自动变成一个和内容长度相同的定宽块元素）；2\\. 改为内联元素（display:inline;）后设置父元素text-align:center（不增加无语义标签，但牺牲块元素一些特性）；3\\. 父元素float:left;position:relative;left:50%;子元素（需要居中的元素）position:relative;left:-50%;\n\n14 垂直居中\n\n1）父元素高度确定的单行文本：设置父元素height和line-height相同\n\n2）父元素高度确定的多行文本/包括图片：1\\. 加入table（包括td），即引入vertical-align:middle;到父元素，table默认已经带有这一属性，td需要设置高度，否则会自适应；2\\. 父级块元素添加display:table-cell;vertical-aligh:middle;（兼容性差ie6、ie7不支持）\n\n15 吊诡的float和position:absolute\n\n会导致该元素display变成inline-block，然后可以设置宽度、高度、行高、顶底边距等。\n","source":"_posts/HTML5CSS/[CSS] - 基础 - 1.md","raw":"---\ntitle: '[CSS] - 基础 - 1'\nid: 40\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-12 15:26:55\ntags:\n---\n\n1 css - cascading style sheets\n\n2 基本结构：选择器+声明\n\n3 内联式css，嵌入式css，外部式css（相同权值，就近）\n\n4 选择器\n\n1）标签选择器\n\n2）类选择器（多对多）\n\n3）ID选择器（一对一）\n\n4）子选择器&gt;\n\n5）后代选择器\n\n6）通用选择器*\n\n7）伪类选择符 （选择html中标签的某种状态，如a:hover - 兼容性问题）\n\n5 特性\n\n继承，特殊性（权值：标签1，类10，ID100），重要性\n\n6 字体\n\n1）font-family:\"Microsoft Yahei\";\n\n2）font-style, font-weight\n\n3）text-decoration:underline; line-through\n\n4）text-indent\n\n5）line-height\n\n6）letter-spacing, word-spacing\n\n7）text-align\n\n7 块元素    display:block;\n\n1）&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;...&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;\n\n2）特性：独占一行；宽度、高度、行高、顶底边距可设；宽度为设置为父元素100%\n\n8 内联元素    display:inline\n\n1）&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;\n\n2）特性：和其他内联元素在同行；宽度、高度、顶底边距不可设置；宽度为其包含文字或图片的宽度\n\n9 内联块元素    display:inline-block\n\n1）&lt;img&gt;、&lt;input&gt;\n\n2）特性：和内联/内联块元素同行，宽度、高度、顶底边距可设置\n\n10 盒模型\n\n1）块模型具有盒模型的特点。内外填充（padding，margin，border）\n\n2）border: {border-width border-style border-color} (dashed, dotted, solid)\n\n3）宽度：包括margin，border，padding，和content（内容）宽度\n\n11 布局模型\n\n1）流动模型（默认）：块元素自上而下，每个占一行，未分配情况下宽度100%；内联元素从左到右排布\n\n2）浮动模型：实现块元素同行显示，任何元素都可以加float。\n\n3）层模型：position:{relative,absolute,fixed} （absolute和fixed的相对位置是父元素中具有相对属性即position:relative的元素，找不到则是body）\n\n11 代码简写\n\n1）盒模型：margin，padding，上，右，下，左；上下，左右；上下左右\n\n2）颜色值缩写：#333，#369\n\n3）字体缩写：font-weight, font-style, font-family, font-size, line-height, font-variant 等可合为font（font-size/line-height, font-family 必填）\n\n12 字体大小\n\n1）像素：px css规定90px为1英寸\n\n2）em：以font-size为标准，如font-size:12px; text-indent:2em; 其中1em=12px，如果font-size是em则以父元素font-size为标准（responsive）\n\n3）百分比：仍然以font-size为标准计算\n\n13 水平居中\n\n1）内联：父元素text-align:center;实现\n\n2）定宽块元素：左右margin设为auto（定宽和块两个条件同时满足）\n\n3）不定宽块元素：1\\. 外部嵌套table，table设置左右margin为auto（table自适应内容宽度，相当于自动变成一个和内容长度相同的定宽块元素）；2\\. 改为内联元素（display:inline;）后设置父元素text-align:center（不增加无语义标签，但牺牲块元素一些特性）；3\\. 父元素float:left;position:relative;left:50%;子元素（需要居中的元素）position:relative;left:-50%;\n\n14 垂直居中\n\n1）父元素高度确定的单行文本：设置父元素height和line-height相同\n\n2）父元素高度确定的多行文本/包括图片：1\\. 加入table（包括td），即引入vertical-align:middle;到父元素，table默认已经带有这一属性，td需要设置高度，否则会自适应；2\\. 父级块元素添加display:table-cell;vertical-aligh:middle;（兼容性差ie6、ie7不支持）\n\n15 吊诡的float和position:absolute\n\n会导致该元素display变成inline-block，然后可以设置宽度、高度、行高、顶底边距等。\n","slug":"HTML5CSS/[CSS] - 基础 - 1","published":1,"updated":"2018-11-27T02:45:08.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrc8000rn9v23npcx2g3","content":"<p>1 css - cascading style sheets</p>\n<p>2 基本结构：选择器+声明</p>\n<p>3 内联式css，嵌入式css，外部式css（相同权值，就近）</p>\n<p>4 选择器</p>\n<p>1）标签选择器</p>\n<p>2）类选择器（多对多）</p>\n<p>3）ID选择器（一对一）</p>\n<p>4）子选择器&gt;</p>\n<p>5）后代选择器</p>\n<p>6）通用选择器*</p>\n<p>7）伪类选择符 （选择html中标签的某种状态，如a:hover - 兼容性问题）</p>\n<p>5 特性</p>\n<p>继承，特殊性（权值：标签1，类10，ID100），重要性</p>\n<p>6 字体</p>\n<p>1）font-family:”Microsoft Yahei”;</p>\n<p>2）font-style, font-weight</p>\n<p>3）text-decoration:underline; line-through</p>\n<p>4）text-indent</p>\n<p>5）line-height</p>\n<p>6）letter-spacing, word-spacing</p>\n<p>7）text-align</p>\n<p>7 块元素    display:block;</p>\n<p>1）&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;…&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;</p>\n<p>2）特性：独占一行；宽度、高度、行高、顶底边距可设；宽度为设置为父元素100%</p>\n<p>8 内联元素    display:inline</p>\n<p>1）&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</p>\n<p>2）特性：和其他内联元素在同行；宽度、高度、顶底边距不可设置；宽度为其包含文字或图片的宽度</p>\n<p>9 内联块元素    display:inline-block</p>\n<p>1）&lt;img&gt;、&lt;input&gt;</p>\n<p>2）特性：和内联/内联块元素同行，宽度、高度、顶底边距可设置</p>\n<p>10 盒模型</p>\n<p>1）块模型具有盒模型的特点。内外填充（padding，margin，border）</p>\n<p>2）border: {border-width border-style border-color} (dashed, dotted, solid)</p>\n<p>3）宽度：包括margin，border，padding，和content（内容）宽度</p>\n<p>11 布局模型</p>\n<p>1）流动模型（默认）：块元素自上而下，每个占一行，未分配情况下宽度100%；内联元素从左到右排布</p>\n<p>2）浮动模型：实现块元素同行显示，任何元素都可以加float。</p>\n<p>3）层模型：position:{relative,absolute,fixed} （absolute和fixed的相对位置是父元素中具有相对属性即position:relative的元素，找不到则是body）</p>\n<p>11 代码简写</p>\n<p>1）盒模型：margin，padding，上，右，下，左；上下，左右；上下左右</p>\n<p>2）颜色值缩写：#333，#369</p>\n<p>3）字体缩写：font-weight, font-style, font-family, font-size, line-height, font-variant 等可合为font（font-size/line-height, font-family 必填）</p>\n<p>12 字体大小</p>\n<p>1）像素：px css规定90px为1英寸</p>\n<p>2）em：以font-size为标准，如font-size:12px; text-indent:2em; 其中1em=12px，如果font-size是em则以父元素font-size为标准（responsive）</p>\n<p>3）百分比：仍然以font-size为标准计算</p>\n<p>13 水平居中</p>\n<p>1）内联：父元素text-align:center;实现</p>\n<p>2）定宽块元素：左右margin设为auto（定宽和块两个条件同时满足）</p>\n<p>3）不定宽块元素：1. 外部嵌套table，table设置左右margin为auto（table自适应内容宽度，相当于自动变成一个和内容长度相同的定宽块元素）；2. 改为内联元素（display:inline;）后设置父元素text-align:center（不增加无语义标签，但牺牲块元素一些特性）；3. 父元素float:left;position:relative;left:50%;子元素（需要居中的元素）position:relative;left:-50%;</p>\n<p>14 垂直居中</p>\n<p>1）父元素高度确定的单行文本：设置父元素height和line-height相同</p>\n<p>2）父元素高度确定的多行文本/包括图片：1. 加入table（包括td），即引入vertical-align:middle;到父元素，table默认已经带有这一属性，td需要设置高度，否则会自适应；2. 父级块元素添加display:table-cell;vertical-aligh:middle;（兼容性差ie6、ie7不支持）</p>\n<p>15 吊诡的float和position:absolute</p>\n<p>会导致该元素display变成inline-block，然后可以设置宽度、高度、行高、顶底边距等。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1 css - cascading style sheets</p>\n<p>2 基本结构：选择器+声明</p>\n<p>3 内联式css，嵌入式css，外部式css（相同权值，就近）</p>\n<p>4 选择器</p>\n<p>1）标签选择器</p>\n<p>2）类选择器（多对多）</p>\n<p>3）ID选择器（一对一）</p>\n<p>4）子选择器&gt;</p>\n<p>5）后代选择器</p>\n<p>6）通用选择器*</p>\n<p>7）伪类选择符 （选择html中标签的某种状态，如a:hover - 兼容性问题）</p>\n<p>5 特性</p>\n<p>继承，特殊性（权值：标签1，类10，ID100），重要性</p>\n<p>6 字体</p>\n<p>1）font-family:”Microsoft Yahei”;</p>\n<p>2）font-style, font-weight</p>\n<p>3）text-decoration:underline; line-through</p>\n<p>4）text-indent</p>\n<p>5）line-height</p>\n<p>6）letter-spacing, word-spacing</p>\n<p>7）text-align</p>\n<p>7 块元素    display:block;</p>\n<p>1）&lt;div&gt;、&lt;p&gt;、&lt;h1&gt;…&lt;h6&gt;、&lt;ol&gt;、&lt;ul&gt;、&lt;dl&gt;、&lt;table&gt;、&lt;address&gt;、&lt;blockquote&gt; 、&lt;form&gt;</p>\n<p>2）特性：独占一行；宽度、高度、行高、顶底边距可设；宽度为设置为父元素100%</p>\n<p>8 内联元素    display:inline</p>\n<p>1）&lt;a&gt;、&lt;span&gt;、&lt;br&gt;、&lt;i&gt;、&lt;em&gt;、&lt;strong&gt;、&lt;label&gt;、&lt;q&gt;、&lt;var&gt;、&lt;cite&gt;、&lt;code&gt;</p>\n<p>2）特性：和其他内联元素在同行；宽度、高度、顶底边距不可设置；宽度为其包含文字或图片的宽度</p>\n<p>9 内联块元素    display:inline-block</p>\n<p>1）&lt;img&gt;、&lt;input&gt;</p>\n<p>2）特性：和内联/内联块元素同行，宽度、高度、顶底边距可设置</p>\n<p>10 盒模型</p>\n<p>1）块模型具有盒模型的特点。内外填充（padding，margin，border）</p>\n<p>2）border: {border-width border-style border-color} (dashed, dotted, solid)</p>\n<p>3）宽度：包括margin，border，padding，和content（内容）宽度</p>\n<p>11 布局模型</p>\n<p>1）流动模型（默认）：块元素自上而下，每个占一行，未分配情况下宽度100%；内联元素从左到右排布</p>\n<p>2）浮动模型：实现块元素同行显示，任何元素都可以加float。</p>\n<p>3）层模型：position:{relative,absolute,fixed} （absolute和fixed的相对位置是父元素中具有相对属性即position:relative的元素，找不到则是body）</p>\n<p>11 代码简写</p>\n<p>1）盒模型：margin，padding，上，右，下，左；上下，左右；上下左右</p>\n<p>2）颜色值缩写：#333，#369</p>\n<p>3）字体缩写：font-weight, font-style, font-family, font-size, line-height, font-variant 等可合为font（font-size/line-height, font-family 必填）</p>\n<p>12 字体大小</p>\n<p>1）像素：px css规定90px为1英寸</p>\n<p>2）em：以font-size为标准，如font-size:12px; text-indent:2em; 其中1em=12px，如果font-size是em则以父元素font-size为标准（responsive）</p>\n<p>3）百分比：仍然以font-size为标准计算</p>\n<p>13 水平居中</p>\n<p>1）内联：父元素text-align:center;实现</p>\n<p>2）定宽块元素：左右margin设为auto（定宽和块两个条件同时满足）</p>\n<p>3）不定宽块元素：1. 外部嵌套table，table设置左右margin为auto（table自适应内容宽度，相当于自动变成一个和内容长度相同的定宽块元素）；2. 改为内联元素（display:inline;）后设置父元素text-align:center（不增加无语义标签，但牺牲块元素一些特性）；3. 父元素float:left;position:relative;left:50%;子元素（需要居中的元素）position:relative;left:-50%;</p>\n<p>14 垂直居中</p>\n<p>1）父元素高度确定的单行文本：设置父元素height和line-height相同</p>\n<p>2）父元素高度确定的多行文本/包括图片：1. 加入table（包括td），即引入vertical-align:middle;到父元素，table默认已经带有这一属性，td需要设置高度，否则会自适应；2. 父级块元素添加display:table-cell;vertical-aligh:middle;（兼容性差ie6、ie7不支持）</p>\n<p>15 吊诡的float和position:absolute</p>\n<p>会导致该元素display变成inline-block，然后可以设置宽度、高度、行高、顶底边距等。</p>\n"},{"title":"[JS] - 基础 - 1","id":"96","date":"2017-02-14T10:57:38.000Z","_content":"\n1\\. 基本格式\n\n&lt;script type=\"text/javascript\"&gt; //code &lt;/script&gt;\n\n&lt;script src=\"\"&gt;&lt;/script&gt;\n\n2\\. 变量命名：字母、下划线、美元符号开头，由任意数字、字母、下划线、美元符号组成。区分大小写。\n\n3\\. io\n\ndocument.write()用于向html流输出，可输出变量\n\nalert()确认框打印，类似document.write，**点击确定前不进行任何操作**\n\nconfirm()获取用户输入，true/false\n\nprompt()获取用户输入，null/string\n\n4\\. window\n\nwindow.open(string url, string name, string params)&nbsp; name('_blank', '_self', '_top'); params包括window距离屏幕的位置，window大小，menubar、scrollbar是否包括等。\n\nwindow.close(); - 关闭当前窗口 or [窗口对象].close();\n\n5\\. DOM\n\n1) Document Object Model将html呈现为节点树结构（包括元素，属性，文本三种节点）eg.&lt;a href=\"http\"//www.arronlai.com\"&gt;click me&lt;/a&gt;\n\n2) document.getElementById() 返回HTML Object\n\n3) .innerHTML\n\n4) .style.property (display)\n\n5) className\n","source":"_posts/JS/JS - 基础 - 1.md","raw":"---\ntitle: '[JS] - 基础 - 1'\nid: 96\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-14 18:57:38\ntags:\n---\n\n1\\. 基本格式\n\n&lt;script type=\"text/javascript\"&gt; //code &lt;/script&gt;\n\n&lt;script src=\"\"&gt;&lt;/script&gt;\n\n2\\. 变量命名：字母、下划线、美元符号开头，由任意数字、字母、下划线、美元符号组成。区分大小写。\n\n3\\. io\n\ndocument.write()用于向html流输出，可输出变量\n\nalert()确认框打印，类似document.write，**点击确定前不进行任何操作**\n\nconfirm()获取用户输入，true/false\n\nprompt()获取用户输入，null/string\n\n4\\. window\n\nwindow.open(string url, string name, string params)&nbsp; name('_blank', '_self', '_top'); params包括window距离屏幕的位置，window大小，menubar、scrollbar是否包括等。\n\nwindow.close(); - 关闭当前窗口 or [窗口对象].close();\n\n5\\. DOM\n\n1) Document Object Model将html呈现为节点树结构（包括元素，属性，文本三种节点）eg.&lt;a href=\"http\"//www.arronlai.com\"&gt;click me&lt;/a&gt;\n\n2) document.getElementById() 返回HTML Object\n\n3) .innerHTML\n\n4) .style.property (display)\n\n5) className\n","slug":"JS/JS - 基础 - 1","published":1,"updated":"2018-11-27T02:45:08.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrc9000tn9v2il9nqnve","content":"<p>1. 基本格式</p>\n<p>&lt;script type=”text/javascript”&gt; //code &lt;/script&gt;</p>\n<p>&lt;script src=””&gt;&lt;/script&gt;</p>\n<p>2. 变量命名：字母、下划线、美元符号开头，由任意数字、字母、下划线、美元符号组成。区分大小写。</p>\n<p>3. io</p>\n<p>document.write()用于向html流输出，可输出变量</p>\n<p>alert()确认框打印，类似document.write，<strong>点击确定前不进行任何操作</strong></p>\n<p>confirm()获取用户输入，true/false</p>\n<p>prompt()获取用户输入，null/string</p>\n<p>4. window</p>\n<p>window.open(string url, string name, string params)&nbsp; name(‘_blank’, ‘_self’, ‘_top’); params包括window距离屏幕的位置，window大小，menubar、scrollbar是否包括等。</p>\n<p>window.close(); - 关闭当前窗口 or [窗口对象].close();</p>\n<p>5. DOM</p>\n<p>1) Document Object Model将html呈现为节点树结构（包括元素，属性，文本三种节点）eg.&lt;a href=”http”//<a href=\"http://www.arronlai.com&quot;&gt;click\" target=\"_blank\" rel=\"noopener\">www.arronlai.com&quot;&gt;click</a> me&lt;/a&gt;</p>\n<p>2) document.getElementById() 返回HTML Object</p>\n<p>3) .innerHTML</p>\n<p>4) .style.property (display)</p>\n<p>5) className</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. 基本格式</p>\n<p>&lt;script type=”text/javascript”&gt; //code &lt;/script&gt;</p>\n<p>&lt;script src=””&gt;&lt;/script&gt;</p>\n<p>2. 变量命名：字母、下划线、美元符号开头，由任意数字、字母、下划线、美元符号组成。区分大小写。</p>\n<p>3. io</p>\n<p>document.write()用于向html流输出，可输出变量</p>\n<p>alert()确认框打印，类似document.write，<strong>点击确定前不进行任何操作</strong></p>\n<p>confirm()获取用户输入，true/false</p>\n<p>prompt()获取用户输入，null/string</p>\n<p>4. window</p>\n<p>window.open(string url, string name, string params)&nbsp; name(‘_blank’, ‘_self’, ‘_top’); params包括window距离屏幕的位置，window大小，menubar、scrollbar是否包括等。</p>\n<p>window.close(); - 关闭当前窗口 or [窗口对象].close();</p>\n<p>5. DOM</p>\n<p>1) Document Object Model将html呈现为节点树结构（包括元素，属性，文本三种节点）eg.&lt;a href=”http”//<a href=\"http://www.arronlai.com&quot;&gt;click\" target=\"_blank\" rel=\"noopener\">www.arronlai.com&quot;&gt;click</a> me&lt;/a&gt;</p>\n<p>2) document.getElementById() 返回HTML Object</p>\n<p>3) .innerHTML</p>\n<p>4) .style.property (display)</p>\n<p>5) className</p>\n"},{"title":"可怜夜半虚前席","id":"237","date":"2017-03-01T23:53:29.000Z","_content":"\n“你来看我了。”\n\n“你一直都在这里啊？”\n\n问完这句我便醒了，屋里还没有光线透进来，应该不到六点。心里想着再睡会，脑子里翻腾的都是刚才的梦。\n\n昨天室友谈起了她最近看的一个灵异类的综艺节目，大家就聊了一下各地的一些习俗和自己觉得奇怪的事情。有些地方亲人死了不能哭，你舍不得他/她就不能往生了。如果你梦到亲人和你说最近过得不好，那你要烧一点东西过去。还有七月半是鬼节，家里会接亡人回来，鬼门关再送他们回去。\n\n我不是彻底的有神或者无神论者，但是抱着惯有的怀疑态度，我不太相信室友说的那个节目里面看到的事情。我总觉得里面每一个桥段只要节目组和参与者串通好，完全可以拍出来，甚至这可能根本就是节目组请来一堆演员拍的节目。室友又告诉我，里面的那些灵媒是很有名的灵媒，都是在当地有真人真事佐证的。\n\n关于灵媒，我记得我看过一篇文章，讲的是一个年轻的灵媒师，如何帮那些想念亡者的生者。大概是他自己是一个媒介，可以让亡者借由他回来，于是生和死就暂时相互妥协。后来这个灵媒被打了，因为他为一个黑帮招回来的人不是那个人。最后，他说，其实自己并没有作媒介的能力，只不过每次从亡者的资料和社交网站查到一些这个人生前的事情，然后用这一星半点的了解和现场那些亲人、朋友的反应来糊弄。偶尔碰到不好糊弄的就容易穿帮。所以，其实又是一场攻心。文末我记得是一句诗，“可怜夜半虚前席，不问苍生问鬼神。”\n\n可能你们真的不存在吧，只是我思念成疾。是我的意识编织了我的梦，我的怀念造成了你的存在，其实是我而不是你。是我的那一点不甘心，不甘心这样的结局，不甘心那些没有弥补的过错，不甘心我再也想不起来最后和你说的话是什么。所以我夜不能寐，我梦到你，我感受到你。我说了这日日夜夜堵在我心里的话，我做了来不及做的事，我看见我想看见的。然后，我心满意足。于是，我深信不疑——你，回来看我了。\n\n可能你们真的存在，就在我身后，我手边。注视着我，还深爱着我。我解释不清逻辑，说不出为什么你们还在而没有离去。但可能现在你正握着我的手，也不怕我。虽然在你眼中也不知道我是怎样的存在。\n\n“如果我死了之后，你在街上看到我，你会吓得跑开还是紧紧抱住我？”\n\n“嗯，主要看脸。” : )\n","source":"_posts/只言片语/可怜夜半虚前席.md","raw":"---\ntitle: 可怜夜半虚前席\nid: 237\ncategories:\n  - 长叨叨\ndate: 2017-03-02 07:53:29\ntags:\n---\n\n“你来看我了。”\n\n“你一直都在这里啊？”\n\n问完这句我便醒了，屋里还没有光线透进来，应该不到六点。心里想着再睡会，脑子里翻腾的都是刚才的梦。\n\n昨天室友谈起了她最近看的一个灵异类的综艺节目，大家就聊了一下各地的一些习俗和自己觉得奇怪的事情。有些地方亲人死了不能哭，你舍不得他/她就不能往生了。如果你梦到亲人和你说最近过得不好，那你要烧一点东西过去。还有七月半是鬼节，家里会接亡人回来，鬼门关再送他们回去。\n\n我不是彻底的有神或者无神论者，但是抱着惯有的怀疑态度，我不太相信室友说的那个节目里面看到的事情。我总觉得里面每一个桥段只要节目组和参与者串通好，完全可以拍出来，甚至这可能根本就是节目组请来一堆演员拍的节目。室友又告诉我，里面的那些灵媒是很有名的灵媒，都是在当地有真人真事佐证的。\n\n关于灵媒，我记得我看过一篇文章，讲的是一个年轻的灵媒师，如何帮那些想念亡者的生者。大概是他自己是一个媒介，可以让亡者借由他回来，于是生和死就暂时相互妥协。后来这个灵媒被打了，因为他为一个黑帮招回来的人不是那个人。最后，他说，其实自己并没有作媒介的能力，只不过每次从亡者的资料和社交网站查到一些这个人生前的事情，然后用这一星半点的了解和现场那些亲人、朋友的反应来糊弄。偶尔碰到不好糊弄的就容易穿帮。所以，其实又是一场攻心。文末我记得是一句诗，“可怜夜半虚前席，不问苍生问鬼神。”\n\n可能你们真的不存在吧，只是我思念成疾。是我的意识编织了我的梦，我的怀念造成了你的存在，其实是我而不是你。是我的那一点不甘心，不甘心这样的结局，不甘心那些没有弥补的过错，不甘心我再也想不起来最后和你说的话是什么。所以我夜不能寐，我梦到你，我感受到你。我说了这日日夜夜堵在我心里的话，我做了来不及做的事，我看见我想看见的。然后，我心满意足。于是，我深信不疑——你，回来看我了。\n\n可能你们真的存在，就在我身后，我手边。注视着我，还深爱着我。我解释不清逻辑，说不出为什么你们还在而没有离去。但可能现在你正握着我的手，也不怕我。虽然在你眼中也不知道我是怎样的存在。\n\n“如果我死了之后，你在街上看到我，你会吓得跑开还是紧紧抱住我？”\n\n“嗯，主要看脸。” : )\n","slug":"只言片语/可怜夜半虚前席","published":1,"updated":"2018-11-27T02:45:08.993Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrca000un9v20r73hkkh","content":"<p>“你来看我了。”</p>\n<p>“你一直都在这里啊？”</p>\n<p>问完这句我便醒了，屋里还没有光线透进来，应该不到六点。心里想着再睡会，脑子里翻腾的都是刚才的梦。</p>\n<p>昨天室友谈起了她最近看的一个灵异类的综艺节目，大家就聊了一下各地的一些习俗和自己觉得奇怪的事情。有些地方亲人死了不能哭，你舍不得他/她就不能往生了。如果你梦到亲人和你说最近过得不好，那你要烧一点东西过去。还有七月半是鬼节，家里会接亡人回来，鬼门关再送他们回去。</p>\n<p>我不是彻底的有神或者无神论者，但是抱着惯有的怀疑态度，我不太相信室友说的那个节目里面看到的事情。我总觉得里面每一个桥段只要节目组和参与者串通好，完全可以拍出来，甚至这可能根本就是节目组请来一堆演员拍的节目。室友又告诉我，里面的那些灵媒是很有名的灵媒，都是在当地有真人真事佐证的。</p>\n<p>关于灵媒，我记得我看过一篇文章，讲的是一个年轻的灵媒师，如何帮那些想念亡者的生者。大概是他自己是一个媒介，可以让亡者借由他回来，于是生和死就暂时相互妥协。后来这个灵媒被打了，因为他为一个黑帮招回来的人不是那个人。最后，他说，其实自己并没有作媒介的能力，只不过每次从亡者的资料和社交网站查到一些这个人生前的事情，然后用这一星半点的了解和现场那些亲人、朋友的反应来糊弄。偶尔碰到不好糊弄的就容易穿帮。所以，其实又是一场攻心。文末我记得是一句诗，“可怜夜半虚前席，不问苍生问鬼神。”</p>\n<p>可能你们真的不存在吧，只是我思念成疾。是我的意识编织了我的梦，我的怀念造成了你的存在，其实是我而不是你。是我的那一点不甘心，不甘心这样的结局，不甘心那些没有弥补的过错，不甘心我再也想不起来最后和你说的话是什么。所以我夜不能寐，我梦到你，我感受到你。我说了这日日夜夜堵在我心里的话，我做了来不及做的事，我看见我想看见的。然后，我心满意足。于是，我深信不疑——你，回来看我了。</p>\n<p>可能你们真的存在，就在我身后，我手边。注视着我，还深爱着我。我解释不清逻辑，说不出为什么你们还在而没有离去。但可能现在你正握着我的手，也不怕我。虽然在你眼中也不知道我是怎样的存在。</p>\n<p>“如果我死了之后，你在街上看到我，你会吓得跑开还是紧紧抱住我？”</p>\n<p>“嗯，主要看脸。” : )</p>\n","site":{"data":{}},"excerpt":"","more":"<p>“你来看我了。”</p>\n<p>“你一直都在这里啊？”</p>\n<p>问完这句我便醒了，屋里还没有光线透进来，应该不到六点。心里想着再睡会，脑子里翻腾的都是刚才的梦。</p>\n<p>昨天室友谈起了她最近看的一个灵异类的综艺节目，大家就聊了一下各地的一些习俗和自己觉得奇怪的事情。有些地方亲人死了不能哭，你舍不得他/她就不能往生了。如果你梦到亲人和你说最近过得不好，那你要烧一点东西过去。还有七月半是鬼节，家里会接亡人回来，鬼门关再送他们回去。</p>\n<p>我不是彻底的有神或者无神论者，但是抱着惯有的怀疑态度，我不太相信室友说的那个节目里面看到的事情。我总觉得里面每一个桥段只要节目组和参与者串通好，完全可以拍出来，甚至这可能根本就是节目组请来一堆演员拍的节目。室友又告诉我，里面的那些灵媒是很有名的灵媒，都是在当地有真人真事佐证的。</p>\n<p>关于灵媒，我记得我看过一篇文章，讲的是一个年轻的灵媒师，如何帮那些想念亡者的生者。大概是他自己是一个媒介，可以让亡者借由他回来，于是生和死就暂时相互妥协。后来这个灵媒被打了，因为他为一个黑帮招回来的人不是那个人。最后，他说，其实自己并没有作媒介的能力，只不过每次从亡者的资料和社交网站查到一些这个人生前的事情，然后用这一星半点的了解和现场那些亲人、朋友的反应来糊弄。偶尔碰到不好糊弄的就容易穿帮。所以，其实又是一场攻心。文末我记得是一句诗，“可怜夜半虚前席，不问苍生问鬼神。”</p>\n<p>可能你们真的不存在吧，只是我思念成疾。是我的意识编织了我的梦，我的怀念造成了你的存在，其实是我而不是你。是我的那一点不甘心，不甘心这样的结局，不甘心那些没有弥补的过错，不甘心我再也想不起来最后和你说的话是什么。所以我夜不能寐，我梦到你，我感受到你。我说了这日日夜夜堵在我心里的话，我做了来不及做的事，我看见我想看见的。然后，我心满意足。于是，我深信不疑——你，回来看我了。</p>\n<p>可能你们真的存在，就在我身后，我手边。注视着我，还深爱着我。我解释不清逻辑，说不出为什么你们还在而没有离去。但可能现在你正握着我的手，也不怕我。虽然在你眼中也不知道我是怎样的存在。</p>\n<p>“如果我死了之后，你在街上看到我，你会吓得跑开还是紧紧抱住我？”</p>\n<p>“嗯，主要看脸。” : )</p>\n"},{"title":"[JS] - 基础 - 2","id":"183","date":"2017-02-15T07:23:06.000Z","_content":"\n1\\. 运算顺序：算术&gt;比较&gt;逻辑&gt;赋值\n\n2\\. a++ ++a\n\n3\\. 数组可以指定长度，如new Array(12);但实际还是变长的，可以储存长度之外个数组。\n\n&nbsp;&nbsp;&nbsp; .length\n\n&nbsp;&nbsp;&nbsp; 二维数组：相当于一维数组的元素是数组\n\n4\\. switch\n\nswitch() {\n\n&nbsp;&nbsp;&nbsp; case 1:\n\n&nbsp;&nbsp;&nbsp; break;\n\n&nbsp;&nbsp;&nbsp; default:\n\n}\n\n注意 break;\n\n5\\. for, while, do while -&nbsp; break;&nbsp; continue;\n\n6\\. 事件 onclick, onmouseover, onmouseout, onfocus, onselect, onchange, onload, onunload(window close)\n\n*7\\. 对象*\n\n1) Date\n\nA. new Date(); new Date(2017,2,15); new Date(\"Oct 1 2017\");\n\nB. 方法：getFullYear(); getDay(); getTime(); setTime(); - 注：milliseconds\n\n2) String\n\nA. 方法：toUpperCase(); toLowerCase; charAt(); indexOf(substr, pos); split(char, limit); substring(start, end);&nbsp; substr(start, length);\n\n3) Math\n\nA. 方法：ceil(); floor(); round(); random(); （注：无参数）\n\n4) Array\n\nA. new Array(); new Array(10); new Array(1,2,3);\n\nB. 方法：concat();（注：不修改数组本身） join();（注：可空，逗号）reverse(); slice(start, end);（注：end可省可负，不改变原数组）sort(function()); （注：－1，1）\n\n*8\\. window对象*\n\n1) setInterval(function, interval); 注：interval以milliseconds计算。clearInterval(i);\n\n2) setTimeout(function, time); clearTimeout(i);\n\n9\\. History 对象\n\n1) 属性：length\n\n2) 方法：go();（注：代表向前或向后多少页） back(); forward();\n\n10\\. Location\n\n获取与当前地址相关信息\n\nhref, window.location.reload(); window.location.assign();\n\n11\\. Navagator\n\n当前browser相关信息\n\n1) userAgent; -&gt; 用户代理字符串\n\n12\\. screen (window.screen/screen)\n\n1)属性：width, height, availWidth, availHeight\n\n----------------\n\n12\\. DOM\n\n1) getElementById(); getElementsByName(); getElementsByTagName();\n\n2) getAttribute(); setAttribute(name, value);\n\n3) nodeName, nodeValue, nodeType\n\n4) childNodes, parentNode, firstChild, lastChild, nextSibling, previousSibling\n\n5) appendChild(); insertBefore(,); removeChild(node); replaceChild(new, old);\n\n6) document.createElement(); （注：创建元素节点，参数为tag name）document.createTextNode(); （注：创建的即为普通文本节点）\n\n* * *\n\n13\\. 网页尺寸\n\n1) 窗口宽高：cross browser：document.documentElement.clientWidth || document.body.clientWidth; document.documentElement.clientHeight || document.body.clientHeight;\n\n2) 内容宽高: cross browser: document.documentElement.scrollWidth || document.body.scrollWidth; document.documentElement.scrollHeight || document.body.scrollHeight; 注：IE，Opera返回值可比clientHeight/clientWidth小，FF返回最小值等于窗口宽高。\n\n3) 网页宽高：offsetHeight/offsetWidth = clientHeight/clientWidth + 滚动条 ＋ 边框\n\n4) 滚动距离: scrollTop; scrollLeft; offsetTop; offsetLeft; （注：offset相对于该元素的父元素）\n","source":"_posts/JS/JS - 基础 - 2.md","raw":"---\ntitle: '[JS] - 基础 - 2'\nid: 183\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-15 15:23:06\ntags:\n---\n\n1\\. 运算顺序：算术&gt;比较&gt;逻辑&gt;赋值\n\n2\\. a++ ++a\n\n3\\. 数组可以指定长度，如new Array(12);但实际还是变长的，可以储存长度之外个数组。\n\n&nbsp;&nbsp;&nbsp; .length\n\n&nbsp;&nbsp;&nbsp; 二维数组：相当于一维数组的元素是数组\n\n4\\. switch\n\nswitch() {\n\n&nbsp;&nbsp;&nbsp; case 1:\n\n&nbsp;&nbsp;&nbsp; break;\n\n&nbsp;&nbsp;&nbsp; default:\n\n}\n\n注意 break;\n\n5\\. for, while, do while -&nbsp; break;&nbsp; continue;\n\n6\\. 事件 onclick, onmouseover, onmouseout, onfocus, onselect, onchange, onload, onunload(window close)\n\n*7\\. 对象*\n\n1) Date\n\nA. new Date(); new Date(2017,2,15); new Date(\"Oct 1 2017\");\n\nB. 方法：getFullYear(); getDay(); getTime(); setTime(); - 注：milliseconds\n\n2) String\n\nA. 方法：toUpperCase(); toLowerCase; charAt(); indexOf(substr, pos); split(char, limit); substring(start, end);&nbsp; substr(start, length);\n\n3) Math\n\nA. 方法：ceil(); floor(); round(); random(); （注：无参数）\n\n4) Array\n\nA. new Array(); new Array(10); new Array(1,2,3);\n\nB. 方法：concat();（注：不修改数组本身） join();（注：可空，逗号）reverse(); slice(start, end);（注：end可省可负，不改变原数组）sort(function()); （注：－1，1）\n\n*8\\. window对象*\n\n1) setInterval(function, interval); 注：interval以milliseconds计算。clearInterval(i);\n\n2) setTimeout(function, time); clearTimeout(i);\n\n9\\. History 对象\n\n1) 属性：length\n\n2) 方法：go();（注：代表向前或向后多少页） back(); forward();\n\n10\\. Location\n\n获取与当前地址相关信息\n\nhref, window.location.reload(); window.location.assign();\n\n11\\. Navagator\n\n当前browser相关信息\n\n1) userAgent; -&gt; 用户代理字符串\n\n12\\. screen (window.screen/screen)\n\n1)属性：width, height, availWidth, availHeight\n\n----------------\n\n12\\. DOM\n\n1) getElementById(); getElementsByName(); getElementsByTagName();\n\n2) getAttribute(); setAttribute(name, value);\n\n3) nodeName, nodeValue, nodeType\n\n4) childNodes, parentNode, firstChild, lastChild, nextSibling, previousSibling\n\n5) appendChild(); insertBefore(,); removeChild(node); replaceChild(new, old);\n\n6) document.createElement(); （注：创建元素节点，参数为tag name）document.createTextNode(); （注：创建的即为普通文本节点）\n\n* * *\n\n13\\. 网页尺寸\n\n1) 窗口宽高：cross browser：document.documentElement.clientWidth || document.body.clientWidth; document.documentElement.clientHeight || document.body.clientHeight;\n\n2) 内容宽高: cross browser: document.documentElement.scrollWidth || document.body.scrollWidth; document.documentElement.scrollHeight || document.body.scrollHeight; 注：IE，Opera返回值可比clientHeight/clientWidth小，FF返回最小值等于窗口宽高。\n\n3) 网页宽高：offsetHeight/offsetWidth = clientHeight/clientWidth + 滚动条 ＋ 边框\n\n4) 滚动距离: scrollTop; scrollLeft; offsetTop; offsetLeft; （注：offset相对于该元素的父元素）\n","slug":"JS/JS - 基础 - 2","published":1,"updated":"2018-11-27T02:45:08.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrcb000xn9v20eo1486y","content":"<p>1. 运算顺序：算术&gt;比较&gt;逻辑&gt;赋值</p>\n<p>2. a++ ++a</p>\n<p>3. 数组可以指定长度，如new Array(12);但实际还是变长的，可以储存长度之外个数组。</p>\n<p>&nbsp;&nbsp;&nbsp; .length</p>\n<p>&nbsp;&nbsp;&nbsp; 二维数组：相当于一维数组的元素是数组</p>\n<p>4. switch</p>\n<p>switch() {</p>\n<p>&nbsp;&nbsp;&nbsp; case 1:</p>\n<p>&nbsp;&nbsp;&nbsp; break;</p>\n<p>&nbsp;&nbsp;&nbsp; default:</p>\n<p>}</p>\n<p>注意 break;</p>\n<p>5. for, while, do while -&nbsp; break;&nbsp; continue;</p>\n<p>6. 事件 onclick, onmouseover, onmouseout, onfocus, onselect, onchange, onload, onunload(window close)</p>\n<p><em>7. 对象</em></p>\n<p>1) Date</p>\n<p>A. new Date(); new Date(2017,2,15); new Date(“Oct 1 2017”);</p>\n<p>B. 方法：getFullYear(); getDay(); getTime(); setTime(); - 注：milliseconds</p>\n<p>2) String</p>\n<p>A. 方法：toUpperCase(); toLowerCase; charAt(); indexOf(substr, pos); split(char, limit); substring(start, end);&nbsp; substr(start, length);</p>\n<p>3) Math</p>\n<p>A. 方法：ceil(); floor(); round(); random(); （注：无参数）</p>\n<p>4) Array</p>\n<p>A. new Array(); new Array(10); new Array(1,2,3);</p>\n<p>B. 方法：concat();（注：不修改数组本身） join();（注：可空，逗号）reverse(); slice(start, end);（注：end可省可负，不改变原数组）sort(function()); （注：－1，1）</p>\n<p><em>8. window对象</em></p>\n<p>1) setInterval(function, interval); 注：interval以milliseconds计算。clearInterval(i);</p>\n<p>2) setTimeout(function, time); clearTimeout(i);</p>\n<p>9. History 对象</p>\n<p>1) 属性：length</p>\n<p>2) 方法：go();（注：代表向前或向后多少页） back(); forward();</p>\n<p>10. Location</p>\n<p>获取与当前地址相关信息</p>\n<p>href, window.location.reload(); window.location.assign();</p>\n<p>11. Navagator</p>\n<p>当前browser相关信息</p>\n<p>1) userAgent; -&gt; 用户代理字符串</p>\n<p>12. screen (window.screen/screen)</p>\n<p>1)属性：width, height, availWidth, availHeight</p>\n<hr>\n<p>12. DOM</p>\n<p>1) getElementById(); getElementsByName(); getElementsByTagName();</p>\n<p>2) getAttribute(); setAttribute(name, value);</p>\n<p>3) nodeName, nodeValue, nodeType</p>\n<p>4) childNodes, parentNode, firstChild, lastChild, nextSibling, previousSibling</p>\n<p>5) appendChild(); insertBefore(,); removeChild(node); replaceChild(new, old);</p>\n<p>6) document.createElement(); （注：创建元素节点，参数为tag name）document.createTextNode(); （注：创建的即为普通文本节点）</p>\n<hr>\n<p>13. 网页尺寸</p>\n<p>1) 窗口宽高：cross browser：document.documentElement.clientWidth || document.body.clientWidth; document.documentElement.clientHeight || document.body.clientHeight;</p>\n<p>2) 内容宽高: cross browser: document.documentElement.scrollWidth || document.body.scrollWidth; document.documentElement.scrollHeight || document.body.scrollHeight; 注：IE，Opera返回值可比clientHeight/clientWidth小，FF返回最小值等于窗口宽高。</p>\n<p>3) 网页宽高：offsetHeight/offsetWidth = clientHeight/clientWidth + 滚动条 ＋ 边框</p>\n<p>4) 滚动距离: scrollTop; scrollLeft; offsetTop; offsetLeft; （注：offset相对于该元素的父元素）</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. 运算顺序：算术&gt;比较&gt;逻辑&gt;赋值</p>\n<p>2. a++ ++a</p>\n<p>3. 数组可以指定长度，如new Array(12);但实际还是变长的，可以储存长度之外个数组。</p>\n<p>&nbsp;&nbsp;&nbsp; .length</p>\n<p>&nbsp;&nbsp;&nbsp; 二维数组：相当于一维数组的元素是数组</p>\n<p>4. switch</p>\n<p>switch() {</p>\n<p>&nbsp;&nbsp;&nbsp; case 1:</p>\n<p>&nbsp;&nbsp;&nbsp; break;</p>\n<p>&nbsp;&nbsp;&nbsp; default:</p>\n<p>}</p>\n<p>注意 break;</p>\n<p>5. for, while, do while -&nbsp; break;&nbsp; continue;</p>\n<p>6. 事件 onclick, onmouseover, onmouseout, onfocus, onselect, onchange, onload, onunload(window close)</p>\n<p><em>7. 对象</em></p>\n<p>1) Date</p>\n<p>A. new Date(); new Date(2017,2,15); new Date(“Oct 1 2017”);</p>\n<p>B. 方法：getFullYear(); getDay(); getTime(); setTime(); - 注：milliseconds</p>\n<p>2) String</p>\n<p>A. 方法：toUpperCase(); toLowerCase; charAt(); indexOf(substr, pos); split(char, limit); substring(start, end);&nbsp; substr(start, length);</p>\n<p>3) Math</p>\n<p>A. 方法：ceil(); floor(); round(); random(); （注：无参数）</p>\n<p>4) Array</p>\n<p>A. new Array(); new Array(10); new Array(1,2,3);</p>\n<p>B. 方法：concat();（注：不修改数组本身） join();（注：可空，逗号）reverse(); slice(start, end);（注：end可省可负，不改变原数组）sort(function()); （注：－1，1）</p>\n<p><em>8. window对象</em></p>\n<p>1) setInterval(function, interval); 注：interval以milliseconds计算。clearInterval(i);</p>\n<p>2) setTimeout(function, time); clearTimeout(i);</p>\n<p>9. History 对象</p>\n<p>1) 属性：length</p>\n<p>2) 方法：go();（注：代表向前或向后多少页） back(); forward();</p>\n<p>10. Location</p>\n<p>获取与当前地址相关信息</p>\n<p>href, window.location.reload(); window.location.assign();</p>\n<p>11. Navagator</p>\n<p>当前browser相关信息</p>\n<p>1) userAgent; -&gt; 用户代理字符串</p>\n<p>12. screen (window.screen/screen)</p>\n<p>1)属性：width, height, availWidth, availHeight</p>\n<hr>\n<p>12. DOM</p>\n<p>1) getElementById(); getElementsByName(); getElementsByTagName();</p>\n<p>2) getAttribute(); setAttribute(name, value);</p>\n<p>3) nodeName, nodeValue, nodeType</p>\n<p>4) childNodes, parentNode, firstChild, lastChild, nextSibling, previousSibling</p>\n<p>5) appendChild(); insertBefore(,); removeChild(node); replaceChild(new, old);</p>\n<p>6) document.createElement(); （注：创建元素节点，参数为tag name）document.createTextNode(); （注：创建的即为普通文本节点）</p>\n<hr>\n<p>13. 网页尺寸</p>\n<p>1) 窗口宽高：cross browser：document.documentElement.clientWidth || document.body.clientWidth; document.documentElement.clientHeight || document.body.clientHeight;</p>\n<p>2) 内容宽高: cross browser: document.documentElement.scrollWidth || document.body.scrollWidth; document.documentElement.scrollHeight || document.body.scrollHeight; 注：IE，Opera返回值可比clientHeight/clientWidth小，FF返回最小值等于窗口宽高。</p>\n<p>3) 网页宽高：offsetHeight/offsetWidth = clientHeight/clientWidth + 滚动条 ＋ 边框</p>\n<p>4) 滚动距离: scrollTop; scrollLeft; offsetTop; offsetLeft; （注：offset相对于该元素的父元素）</p>\n"},{"title":"js - 基础编程练习","_content":"\n题目描述\n\n实现函数 makeClosures，调用之后满足如下条件：\n\n1、返回一个函数数组 result，长度与 arr 相同\n\n2、运行 result 中第 i 个函数，即 result[i]()，结果与 fn(arr[i]) 相同\n\n输入例子:\n<pre>\n  var arr = [1, 2, 3];\n  var square = function (x) {\n  \treturn x * x;\n  };\n  var funcs = makeClosures(arr, square);\n  funcs[1]();\n</pre>\n\n输出例子:\n4\n\nanswer:\n<pre>\nfunction makeClosures(arr, fn) {\n \tvar funs = [];\n \tfor(var i = 0; i < arr.length; ++i) {\n        (function(num){\n            var temp = function() {\n                return fn(num);\n\n            }\n            funs.push(temp);\n        })(arr[i]);\n    }\n    return funs;\n}\n</pre>\n\nwhy use anonymous function here?\n\ncurry,\ntoString\nparseInt\nfor in loop\n","source":"_posts/JS/JS - 基础 - 3.md","raw":"---\ntitle: js - 基础编程练习\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ntags:\n---\n\n题目描述\n\n实现函数 makeClosures，调用之后满足如下条件：\n\n1、返回一个函数数组 result，长度与 arr 相同\n\n2、运行 result 中第 i 个函数，即 result[i]()，结果与 fn(arr[i]) 相同\n\n输入例子:\n<pre>\n  var arr = [1, 2, 3];\n  var square = function (x) {\n  \treturn x * x;\n  };\n  var funcs = makeClosures(arr, square);\n  funcs[1]();\n</pre>\n\n输出例子:\n4\n\nanswer:\n<pre>\nfunction makeClosures(arr, fn) {\n \tvar funs = [];\n \tfor(var i = 0; i < arr.length; ++i) {\n        (function(num){\n            var temp = function() {\n                return fn(num);\n\n            }\n            funs.push(temp);\n        })(arr[i]);\n    }\n    return funs;\n}\n</pre>\n\nwhy use anonymous function here?\n\ncurry,\ntoString\nparseInt\nfor in loop\n","slug":"JS/JS - 基础 - 3","published":1,"date":"2018-11-27T02:45:08.992Z","updated":"2018-11-27T02:45:08.992Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrcc000zn9v26fpcttzw","content":"<p>题目描述</p>\n<p>实现函数 makeClosures，调用之后满足如下条件：</p>\n<p>1、返回一个函数数组 result，长度与 arr 相同</p>\n<p>2、运行 result 中第 i 个函数，即 result<a href=\"\">i</a>，结果与 fn(arr[i]) 相同</p>\n<p>输入例子:</p>\n<pre>\n  var arr = [1, 2, 3];\n  var square = function (x) {\n      return x * x;\n  };\n  var funcs = makeClosures(arr, square);\n  funcs[1]();\n</pre>\n\n<p>输出例子:<br>4</p>\n<p>answer:</p>\n<pre>\nfunction makeClosures(arr, fn) {\n     var funs = [];\n     for(var i = 0; i < arr.length; ++i) {\n        (function(num){\n            var temp = function() {\n                return fn(num);\n\n            }\n            funs.push(temp);\n        })(arr[i]);\n    }\n    return funs;\n}\n</pre>\n\n<p>why use anonymous function here?</p>\n<p>curry,<br>toString<br>parseInt<br>for in loop</p>\n","site":{"data":{}},"excerpt":"","more":"<p>题目描述</p>\n<p>实现函数 makeClosures，调用之后满足如下条件：</p>\n<p>1、返回一个函数数组 result，长度与 arr 相同</p>\n<p>2、运行 result 中第 i 个函数，即 result<a href=\"\">i</a>，结果与 fn(arr[i]) 相同</p>\n<p>输入例子:</p>\n<pre>\n  var arr = [1, 2, 3];\n  var square = function (x) {\n      return x * x;\n  };\n  var funcs = makeClosures(arr, square);\n  funcs[1]();\n</pre>\n\n<p>输出例子:<br>4</p>\n<p>answer:</p>\n<pre>\nfunction makeClosures(arr, fn) {\n     var funs = [];\n     for(var i = 0; i < arr.length; ++i) {\n        (function(num){\n            var temp = function() {\n                return fn(num);\n\n            }\n            funs.push(temp);\n        })(arr[i]);\n    }\n    return funs;\n}\n</pre>\n\n<p>why use anonymous function here?</p>\n<p>curry,<br>toString<br>parseInt<br>for in loop</p>\n"},{"title":"刷题后感——HTML/css - 1","id":"66","date":"2017-02-13T14:54:12.000Z","_content":"\n1.  background-attachment:{scroll, fixed, inherit} 规定背景图片在页面滚动时的行为。\n2.  符合W3C标准阻止事件冒泡（从子传递至父）：event.stopPropagation &lt;-&gt; event.stopImmediatePropagation（阻止冒泡且停止当前节点上处理程序被调用） &lt;-&gt; cancelBubble（适用于IE，不符合W3C）\n3.  flex-box布局：css3布局，chrome 21+, ff 22+, opera 12.1+, safari 6.1+, ie 10+。容器属性：flex-direction, flex-wrap, flex-flow, justify-content, align-items, align-content；项目属性：order, flex-grow, flex-shrink, flex-basis, flex, align-self\n4.  属于css3新增属性：box-shadow, text-shadow, border-radius, rgba\n5.  产生粗体字的标签：&lt;b&gt;、&lt;strong&gt; （补充：产生斜体的标签 &lt;em&gt;、&lt;i&gt;；产生下划线的标签&lt;u&gt;）\n6.  HTML body部分的JS会在页面加载时候被执行，HTML head部分的JS会在被调用的时候执行。\n7.  div标签表示分隔标签——W3C：div标签可以把文档分割为独立的、不同的部分，它可以作为严格的组织工具，并且不使用任何格式与其关联。\n小结：html5，css3知识积累不够，错题较多，需要看HTML5/css3基础知识\n","source":"_posts/面试题笔记/css - 1.md","raw":"---\ntitle: 刷题后感——HTML/css - 1\nid: 66\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-13 22:54:12\ntags:\n---\n\n1.  background-attachment:{scroll, fixed, inherit} 规定背景图片在页面滚动时的行为。\n2.  符合W3C标准阻止事件冒泡（从子传递至父）：event.stopPropagation &lt;-&gt; event.stopImmediatePropagation（阻止冒泡且停止当前节点上处理程序被调用） &lt;-&gt; cancelBubble（适用于IE，不符合W3C）\n3.  flex-box布局：css3布局，chrome 21+, ff 22+, opera 12.1+, safari 6.1+, ie 10+。容器属性：flex-direction, flex-wrap, flex-flow, justify-content, align-items, align-content；项目属性：order, flex-grow, flex-shrink, flex-basis, flex, align-self\n4.  属于css3新增属性：box-shadow, text-shadow, border-radius, rgba\n5.  产生粗体字的标签：&lt;b&gt;、&lt;strong&gt; （补充：产生斜体的标签 &lt;em&gt;、&lt;i&gt;；产生下划线的标签&lt;u&gt;）\n6.  HTML body部分的JS会在页面加载时候被执行，HTML head部分的JS会在被调用的时候执行。\n7.  div标签表示分隔标签——W3C：div标签可以把文档分割为独立的、不同的部分，它可以作为严格的组织工具，并且不使用任何格式与其关联。\n小结：html5，css3知识积累不够，错题较多，需要看HTML5/css3基础知识\n","slug":"面试题笔记/css - 1","published":1,"updated":"2018-11-27T02:45:08.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrce0014n9v2suttl19l","content":"<ol>\n<li>background-attachment:{scroll, fixed, inherit} 规定背景图片在页面滚动时的行为。</li>\n<li>符合W3C标准阻止事件冒泡（从子传递至父）：event.stopPropagation &lt;-&gt; event.stopImmediatePropagation（阻止冒泡且停止当前节点上处理程序被调用） &lt;-&gt; cancelBubble（适用于IE，不符合W3C）</li>\n<li>flex-box布局：css3布局，chrome 21+, ff 22+, opera 12.1+, safari 6.1+, ie 10+。容器属性：flex-direction, flex-wrap, flex-flow, justify-content, align-items, align-content；项目属性：order, flex-grow, flex-shrink, flex-basis, flex, align-self</li>\n<li>属于css3新增属性：box-shadow, text-shadow, border-radius, rgba</li>\n<li>产生粗体字的标签：&lt;b&gt;、&lt;strong&gt; （补充：产生斜体的标签 &lt;em&gt;、&lt;i&gt;；产生下划线的标签&lt;u&gt;）</li>\n<li>HTML body部分的JS会在页面加载时候被执行，HTML head部分的JS会在被调用的时候执行。</li>\n<li>div标签表示分隔标签——W3C：div标签可以把文档分割为独立的、不同的部分，它可以作为严格的组织工具，并且不使用任何格式与其关联。<br>小结：html5，css3知识积累不够，错题较多，需要看HTML5/css3基础知识</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>background-attachment:{scroll, fixed, inherit} 规定背景图片在页面滚动时的行为。</li>\n<li>符合W3C标准阻止事件冒泡（从子传递至父）：event.stopPropagation &lt;-&gt; event.stopImmediatePropagation（阻止冒泡且停止当前节点上处理程序被调用） &lt;-&gt; cancelBubble（适用于IE，不符合W3C）</li>\n<li>flex-box布局：css3布局，chrome 21+, ff 22+, opera 12.1+, safari 6.1+, ie 10+。容器属性：flex-direction, flex-wrap, flex-flow, justify-content, align-items, align-content；项目属性：order, flex-grow, flex-shrink, flex-basis, flex, align-self</li>\n<li>属于css3新增属性：box-shadow, text-shadow, border-radius, rgba</li>\n<li>产生粗体字的标签：&lt;b&gt;、&lt;strong&gt; （补充：产生斜体的标签 &lt;em&gt;、&lt;i&gt;；产生下划线的标签&lt;u&gt;）</li>\n<li>HTML body部分的JS会在页面加载时候被执行，HTML head部分的JS会在被调用的时候执行。</li>\n<li>div标签表示分隔标签——W3C：div标签可以把文档分割为独立的、不同的部分，它可以作为严格的组织工具，并且不使用任何格式与其关联。<br>小结：html5，css3知识积累不够，错题较多，需要看HTML5/css3基础知识</li>\n</ol>\n"},{"title":"[算法]- kmp","id":"227","date":"2017-02-25T09:55:14.000Z","_content":"\n刷题遇到个kmp算法，以及求next数组的题目，没记得是什么，重新看了一遍这个算法，然后实现了一下。\n\n解决的问题大概是查找一个字符串A是否包含字符串B。暴力o(mn)，即每次不匹配字符串A，B相对位置移动1位。KMP相当于在这个基础上优化，每次不止移动一位，next数组解决的就是每次移动多少相对位置的问题。\n\n最简单的一种情况是，字符串B中没有重复，如abc，则每次不匹配之后可以直接把字符串B的首字符移动至字符串不匹配位置处继续比较，如图（-v- 灵魂画手）\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/WechatIMG6-e1488015850577-300x225.jpeg)\n\n这个比较好理解因为没有重复字符，比较到一个不同就直接从字符串B的首字符重新比较。\n\n吊诡的是，如果字符串B里面有重复就不能直接移动到首位比较，然后问题就是应该移动到哪里。KMP的解决方案是维护一个next数组。以后解释，先直接贴代码\n\n\n<pre>function getNext(str) {\n    var len = str.length;\n    var k = -1;\n    var j = 0;\n    var next = [-1];\n    while(j &lt; len) {\n      if(k==-1 || str[j] == str[k]) {\n        k++;\n        j++;\n        next[j] = k;\n      }else {\n        k = next[k];    //from k to next[k] no need to compare\n      }\n    }\n    console.log(next);\n    return next;\n  }</pre>\n\n<pre>function KMP(m, n) {\n    console.time(\"KMP:\");\n    var i = 0;\n    var j = 0;\n    var next = getNext(n);\n    while(i &lt; m.length &amp;&amp; j &lt; n.length) {\n      if(j==-1 || m[i] == n[j]) {\n        i++;\n        j++;\n      } else {\n        j = next[j];\n      }\n    }\n    if(j == n.length) {\n      console.timeEnd(\"KMP:\");\n      return (i-j);\n    }\n    console.timeEnd(\"KMP:\");\n    return \"not found\";\n  }</pre>\n\n\n&nbsp;\n\n数组里存的是每次字符串A，B不匹配时候应该把字符串B移到什么位置，利用这个数组KMP的实现如下：\n\ndemo：https://arron-lai.github.io/algorithm/kmp","source":"_posts/算法/kmp.md","raw":"---\ntitle: '[算法]- kmp'\nid: 227\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ndate: 2017-02-25 17:55:14\ntags:\n---\n\n刷题遇到个kmp算法，以及求next数组的题目，没记得是什么，重新看了一遍这个算法，然后实现了一下。\n\n解决的问题大概是查找一个字符串A是否包含字符串B。暴力o(mn)，即每次不匹配字符串A，B相对位置移动1位。KMP相当于在这个基础上优化，每次不止移动一位，next数组解决的就是每次移动多少相对位置的问题。\n\n最简单的一种情况是，字符串B中没有重复，如abc，则每次不匹配之后可以直接把字符串B的首字符移动至字符串不匹配位置处继续比较，如图（-v- 灵魂画手）\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/WechatIMG6-e1488015850577-300x225.jpeg)\n\n这个比较好理解因为没有重复字符，比较到一个不同就直接从字符串B的首字符重新比较。\n\n吊诡的是，如果字符串B里面有重复就不能直接移动到首位比较，然后问题就是应该移动到哪里。KMP的解决方案是维护一个next数组。以后解释，先直接贴代码\n\n\n<pre>function getNext(str) {\n    var len = str.length;\n    var k = -1;\n    var j = 0;\n    var next = [-1];\n    while(j &lt; len) {\n      if(k==-1 || str[j] == str[k]) {\n        k++;\n        j++;\n        next[j] = k;\n      }else {\n        k = next[k];    //from k to next[k] no need to compare\n      }\n    }\n    console.log(next);\n    return next;\n  }</pre>\n\n<pre>function KMP(m, n) {\n    console.time(\"KMP:\");\n    var i = 0;\n    var j = 0;\n    var next = getNext(n);\n    while(i &lt; m.length &amp;&amp; j &lt; n.length) {\n      if(j==-1 || m[i] == n[j]) {\n        i++;\n        j++;\n      } else {\n        j = next[j];\n      }\n    }\n    if(j == n.length) {\n      console.timeEnd(\"KMP:\");\n      return (i-j);\n    }\n    console.timeEnd(\"KMP:\");\n    return \"not found\";\n  }</pre>\n\n\n&nbsp;\n\n数组里存的是每次字符串A，B不匹配时候应该把字符串B移到什么位置，利用这个数组KMP的实现如下：\n\ndemo：https://arron-lai.github.io/algorithm/kmp","slug":"算法/kmp","published":1,"updated":"2018-11-27T02:45:08.994Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrce0017n9v231cs3xjr","content":"<p>刷题遇到个kmp算法，以及求next数组的题目，没记得是什么，重新看了一遍这个算法，然后实现了一下。</p>\n<p>解决的问题大概是查找一个字符串A是否包含字符串B。暴力o(mn)，即每次不匹配字符串A，B相对位置移动1位。KMP相当于在这个基础上优化，每次不止移动一位，next数组解决的就是每次移动多少相对位置的问题。</p>\n<p>最简单的一种情况是，字符串B中没有重复，如abc，则每次不匹配之后可以直接把字符串B的首字符移动至字符串不匹配位置处继续比较，如图（-v- 灵魂画手）</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/WechatIMG6-e1488015850577-300x225.jpeg\" alt=\"\"></p>\n<p>这个比较好理解因为没有重复字符，比较到一个不同就直接从字符串B的首字符重新比较。</p>\n<p>吊诡的是，如果字符串B里面有重复就不能直接移动到首位比较，然后问题就是应该移动到哪里。KMP的解决方案是维护一个next数组。以后解释，先直接贴代码</p>\n<pre>function getNext(str) {\n    var len = str.length;\n    var k = -1;\n    var j = 0;\n    var next = [-1];\n    while(j &lt; len) {\n      if(k==-1 || str[j] == str[k]) {\n        k++;\n        j++;\n        next[j] = k;\n      }else {\n        k = next[k];    //from k to next[k] no need to compare\n      }\n    }\n    console.log(next);\n    return next;\n  }</pre>\n\n<pre>function KMP(m, n) {\n    console.time(\"KMP:\");\n    var i = 0;\n    var j = 0;\n    var next = getNext(n);\n    while(i &lt; m.length &amp;&amp; j &lt; n.length) {\n      if(j==-1 || m[i] == n[j]) {\n        i++;\n        j++;\n      } else {\n        j = next[j];\n      }\n    }\n    if(j == n.length) {\n      console.timeEnd(\"KMP:\");\n      return (i-j);\n    }\n    console.timeEnd(\"KMP:\");\n    return \"not found\";\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>数组里存的是每次字符串A，B不匹配时候应该把字符串B移到什么位置，利用这个数组KMP的实现如下：</p>\n<p>demo：<a href=\"https://arron-lai.github.io/algorithm/kmp\" target=\"_blank\" rel=\"noopener\">https://arron-lai.github.io/algorithm/kmp</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>刷题遇到个kmp算法，以及求next数组的题目，没记得是什么，重新看了一遍这个算法，然后实现了一下。</p>\n<p>解决的问题大概是查找一个字符串A是否包含字符串B。暴力o(mn)，即每次不匹配字符串A，B相对位置移动1位。KMP相当于在这个基础上优化，每次不止移动一位，next数组解决的就是每次移动多少相对位置的问题。</p>\n<p>最简单的一种情况是，字符串B中没有重复，如abc，则每次不匹配之后可以直接把字符串B的首字符移动至字符串不匹配位置处继续比较，如图（-v- 灵魂画手）</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/WechatIMG6-e1488015850577-300x225.jpeg\" alt=\"\"></p>\n<p>这个比较好理解因为没有重复字符，比较到一个不同就直接从字符串B的首字符重新比较。</p>\n<p>吊诡的是，如果字符串B里面有重复就不能直接移动到首位比较，然后问题就是应该移动到哪里。KMP的解决方案是维护一个next数组。以后解释，先直接贴代码</p>\n<pre>function getNext(str) {\n    var len = str.length;\n    var k = -1;\n    var j = 0;\n    var next = [-1];\n    while(j &lt; len) {\n      if(k==-1 || str[j] == str[k]) {\n        k++;\n        j++;\n        next[j] = k;\n      }else {\n        k = next[k];    //from k to next[k] no need to compare\n      }\n    }\n    console.log(next);\n    return next;\n  }</pre>\n\n<pre>function KMP(m, n) {\n    console.time(\"KMP:\");\n    var i = 0;\n    var j = 0;\n    var next = getNext(n);\n    while(i &lt; m.length &amp;&amp; j &lt; n.length) {\n      if(j==-1 || m[i] == n[j]) {\n        i++;\n        j++;\n      } else {\n        j = next[j];\n      }\n    }\n    if(j == n.length) {\n      console.timeEnd(\"KMP:\");\n      return (i-j);\n    }\n    console.timeEnd(\"KMP:\");\n    return \"not found\";\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>数组里存的是每次字符串A，B不匹配时候应该把字符串B移到什么位置，利用这个数组KMP的实现如下：</p>\n<p>demo：<a href=\"https://arron-lai.github.io/algorithm/kmp\" target=\"_blank\" rel=\"noopener\">https://arron-lai.github.io/algorithm/kmp</a></p>\n"},{"title":"最长回文子串","_content":"1.0 快乐的n<sup>3</sup>算法\n<pre>\nvar longestPalindrome = function(s) {\n    var max = 0;\n    var start = 0;\n    for(var i = 0; i < s.length; ++i) {\n        for(var j = i; j < s.length; ++j) {\n            if(isPalindrome(s, i, j))  {\n                if((j-i+1) >= max){\n                    max = (j-i+1);\n                    start = i;\n                }\n            }\n        }\n    }\n    return s.substr(start, max);\n};\n\nvar isPalindrome = function(s, start, end) {\n    for(var i = start; i < end; ++i) {\n        if(s[i] != s[end-i+start]){\n            return false;\n        }\n    }\n    return true;\n};\n</pre>\n\n枚举所有子字符串n<sup>2</sup>，因为不是子序列问题，所以不是n!。\n\n2.0 n<sup>2</sup>\n<pre>\nvar longestPalindrome = function(s) {\n    var maxl = 0;\n    var start = -1;\n    for(var i = 0; i < s.length; ++i) {\n        var j = 0;\n        for(; (i-j>=0) && (i+j < s.length); ++j) {\n            if(s[i-j] != s[i+j]){\n                break;\n            }\n        }\n        j -= 1;\n        if(maxl < 2*j+1) {\n            maxl = 2*j+1;\n            start = i-j;\n        }\n        var k = 0;\n        for(; i-k >= 0 && i+k+1 < s.length; ++k) {\n            if(s[i-k] != s[i+k+1]){\n                break;\n            }\n        }\n        k -= 1;\n        if(maxl < 2*k+2) {\n            maxl = 2*k+2;\n            start = i-k;\n        }\n    }\n    return s.substr(start, maxl);\n};\n</pre>\n\n遍历一次所有元素，以它为中心向左右扫描找到当前数字为中心的最长字符串。需要考虑字符串为奇数或偶数的情况。\n","source":"_posts/算法/最长回文子串.md","raw":"---\ntitle: 最长回文子串\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ntags:\n---\n1.0 快乐的n<sup>3</sup>算法\n<pre>\nvar longestPalindrome = function(s) {\n    var max = 0;\n    var start = 0;\n    for(var i = 0; i < s.length; ++i) {\n        for(var j = i; j < s.length; ++j) {\n            if(isPalindrome(s, i, j))  {\n                if((j-i+1) >= max){\n                    max = (j-i+1);\n                    start = i;\n                }\n            }\n        }\n    }\n    return s.substr(start, max);\n};\n\nvar isPalindrome = function(s, start, end) {\n    for(var i = start; i < end; ++i) {\n        if(s[i] != s[end-i+start]){\n            return false;\n        }\n    }\n    return true;\n};\n</pre>\n\n枚举所有子字符串n<sup>2</sup>，因为不是子序列问题，所以不是n!。\n\n2.0 n<sup>2</sup>\n<pre>\nvar longestPalindrome = function(s) {\n    var maxl = 0;\n    var start = -1;\n    for(var i = 0; i < s.length; ++i) {\n        var j = 0;\n        for(; (i-j>=0) && (i+j < s.length); ++j) {\n            if(s[i-j] != s[i+j]){\n                break;\n            }\n        }\n        j -= 1;\n        if(maxl < 2*j+1) {\n            maxl = 2*j+1;\n            start = i-j;\n        }\n        var k = 0;\n        for(; i-k >= 0 && i+k+1 < s.length; ++k) {\n            if(s[i-k] != s[i+k+1]){\n                break;\n            }\n        }\n        k -= 1;\n        if(maxl < 2*k+2) {\n            maxl = 2*k+2;\n            start = i-k;\n        }\n    }\n    return s.substr(start, maxl);\n};\n</pre>\n\n遍历一次所有元素，以它为中心向左右扫描找到当前数字为中心的最长字符串。需要考虑字符串为奇数或偶数的情况。\n","slug":"算法/最长回文子串","published":1,"date":"2018-11-27T02:45:08.994Z","updated":"2018-11-27T02:45:08.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrcf0019n9v2svo5twxx","content":"<p>1.0 快乐的n<sup>3</sup>算法</p>\n<pre>\nvar longestPalindrome = function(s) {\n    var max = 0;\n    var start = 0;\n    for(var i = 0; i < s.length; ++i) {\n        for(var j = i; j < s.length; ++j) {\n            if(isPalindrome(s, i, j))  {\n                if((j-i+1) >= max){\n                    max = (j-i+1);\n                    start = i;\n                }\n            }\n        }\n    }\n    return s.substr(start, max);\n};\n\nvar isPalindrome = function(s, start, end) {\n    for(var i = start; i < end; ++i) {\n        if(s[i] != s[end-i+start]){\n            return false;\n        }\n    }\n    return true;\n};\n</pre>\n\n<p>枚举所有子字符串n<sup>2</sup>，因为不是子序列问题，所以不是n!。</p>\n<p>2.0 n<sup>2</sup></p>\n<pre>\nvar longestPalindrome = function(s) {\n    var maxl = 0;\n    var start = -1;\n    for(var i = 0; i < s.length; ++i) {\n        var j = 0;\n        for(; (i-j>=0) && (i+j < s.length); ++j) {\n            if(s[i-j] != s[i+j]){\n                break;\n            }\n        }\n        j -= 1;\n        if(maxl < 2*j+1) {\n            maxl = 2*j+1;\n            start = i-j;\n        }\n        var k = 0;\n        for(; i-k >= 0 && i+k+1 < s.length; ++k) {\n            if(s[i-k] != s[i+k+1]){\n                break;\n            }\n        }\n        k -= 1;\n        if(maxl < 2*k+2) {\n            maxl = 2*k+2;\n            start = i-k;\n        }\n    }\n    return s.substr(start, maxl);\n};\n</pre>\n\n<p>遍历一次所有元素，以它为中心向左右扫描找到当前数字为中心的最长字符串。需要考虑字符串为奇数或偶数的情况。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1.0 快乐的n<sup>3</sup>算法</p>\n<pre>\nvar longestPalindrome = function(s) {\n    var max = 0;\n    var start = 0;\n    for(var i = 0; i < s.length; ++i) {\n        for(var j = i; j < s.length; ++j) {\n            if(isPalindrome(s, i, j))  {\n                if((j-i+1) >= max){\n                    max = (j-i+1);\n                    start = i;\n                }\n            }\n        }\n    }\n    return s.substr(start, max);\n};\n\nvar isPalindrome = function(s, start, end) {\n    for(var i = start; i < end; ++i) {\n        if(s[i] != s[end-i+start]){\n            return false;\n        }\n    }\n    return true;\n};\n</pre>\n\n<p>枚举所有子字符串n<sup>2</sup>，因为不是子序列问题，所以不是n!。</p>\n<p>2.0 n<sup>2</sup></p>\n<pre>\nvar longestPalindrome = function(s) {\n    var maxl = 0;\n    var start = -1;\n    for(var i = 0; i < s.length; ++i) {\n        var j = 0;\n        for(; (i-j>=0) && (i+j < s.length); ++j) {\n            if(s[i-j] != s[i+j]){\n                break;\n            }\n        }\n        j -= 1;\n        if(maxl < 2*j+1) {\n            maxl = 2*j+1;\n            start = i-j;\n        }\n        var k = 0;\n        for(; i-k >= 0 && i+k+1 < s.length; ++k) {\n            if(s[i-k] != s[i+k+1]){\n                break;\n            }\n        }\n        k -= 1;\n        if(maxl < 2*k+2) {\n            maxl = 2*k+2;\n            start = i-k;\n        }\n    }\n    return s.substr(start, maxl);\n};\n</pre>\n\n<p>遍历一次所有元素，以它为中心向左右扫描找到当前数字为中心的最长字符串。需要考虑字符串为奇数或偶数的情况。</p>\n"},{"title":"刷题后感 － JS － 3","id":"193","date":"2017-02-16T02:21:52.000Z","_content":"\n1.\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/3-1-300x52.png)\n\nJS object以key－value方式保存，操作按地址操作，所以赋值后newObj和obj其实指向相同地址。\n\n2\\. ajax事件：ajaxStart、ajaxStop、ajaxSuccess、ajaxError、ajaxComplete、ajaxSend\n\n3.\n> Promise构造器的prototype上还有两个方法，分别是then和catch。这两个方法的参数也是回调函数，这些函数会在Promise实例进入不同状态后被调用。Then对应到resolve，catch对应到reject\n错误，promise构造器的方法是resolve和reject。\n","source":"_posts/面试题笔记/刷题后感 － JS － 3.md","raw":"---\ntitle: 刷题后感 － JS － 3\nid: 193\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-16 10:21:52\ntags:\n---\n\n1.\n\n![](http://www.arronlai.com/wp-content/uploads/2017/02/3-1-300x52.png)\n\nJS object以key－value方式保存，操作按地址操作，所以赋值后newObj和obj其实指向相同地址。\n\n2\\. ajax事件：ajaxStart、ajaxStop、ajaxSuccess、ajaxError、ajaxComplete、ajaxSend\n\n3.\n> Promise构造器的prototype上还有两个方法，分别是then和catch。这两个方法的参数也是回调函数，这些函数会在Promise实例进入不同状态后被调用。Then对应到resolve，catch对应到reject\n错误，promise构造器的方法是resolve和reject。\n","slug":"面试题笔记/刷题后感 － JS － 3","published":1,"updated":"2018-11-27T02:45:08.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrcg001cn9v2nsiglne1","content":"<p>1.</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/3-1-300x52.png\" alt=\"\"></p>\n<p>JS object以key－value方式保存，操作按地址操作，所以赋值后newObj和obj其实指向相同地址。</p>\n<p>2. ajax事件：ajaxStart、ajaxStop、ajaxSuccess、ajaxError、ajaxComplete、ajaxSend</p>\n<p>3.</p>\n<blockquote>\n<p>Promise构造器的prototype上还有两个方法，分别是then和catch。这两个方法的参数也是回调函数，这些函数会在Promise实例进入不同状态后被调用。Then对应到resolve，catch对应到reject<br>错误，promise构造器的方法是resolve和reject。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>1.</p>\n<p><img src=\"http://www.arronlai.com/wp-content/uploads/2017/02/3-1-300x52.png\" alt=\"\"></p>\n<p>JS object以key－value方式保存，操作按地址操作，所以赋值后newObj和obj其实指向相同地址。</p>\n<p>2. ajax事件：ajaxStart、ajaxStop、ajaxSuccess、ajaxError、ajaxComplete、ajaxSend</p>\n<p>3.</p>\n<blockquote>\n<p>Promise构造器的prototype上还有两个方法，分别是then和catch。这两个方法的参数也是回调函数，这些函数会在Promise实例进入不同状态后被调用。Then对应到resolve，catch对应到reject<br>错误，promise构造器的方法是resolve和reject。</p>\n</blockquote>\n"},{"title":"刷题后感 - JS - 2","id":"72","date":"2017-02-13T16:16:15.000Z","_content":"\n1.  JS创建Array：1）var arr = [1, 2, 3]; 2）var arr = Array(12); （取0清空数组）3）var arr = Array(1,2,3);\n2.  $.ajax()发送get/post请求加载远程数据；$(selector).load()加载远程数据并放入selector；$get发送http get请求加载远程数据；getScript()加载远程js文件并执行。\n3.  ES6 generator function： function * gen(){}\n4.  call v.s. apply -&gt; 第一个参数都是this，不同的是剩余参数直接传入还是通过数组传入。\n","source":"_posts/面试题笔记/刷题后感 - JS - 2.md","raw":"---\ntitle: 刷题后感 - JS - 2\nid: 72\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-14 00:16:15\ntags:\n---\n\n1.  JS创建Array：1）var arr = [1, 2, 3]; 2）var arr = Array(12); （取0清空数组）3）var arr = Array(1,2,3);\n2.  $.ajax()发送get/post请求加载远程数据；$(selector).load()加载远程数据并放入selector；$get发送http get请求加载远程数据；getScript()加载远程js文件并执行。\n3.  ES6 generator function： function * gen(){}\n4.  call v.s. apply -&gt; 第一个参数都是this，不同的是剩余参数直接传入还是通过数组传入。\n","slug":"面试题笔记/刷题后感 - JS - 2","published":1,"updated":"2018-11-27T02:45:08.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrch001en9v2bf6by92o","content":"<ol>\n<li>JS创建Array：1）var arr = [1, 2, 3]; 2）var arr = Array(12); （取0清空数组）3）var arr = Array(1,2,3);</li>\n<li>$.ajax()发送get/post请求加载远程数据；$(selector).load()加载远程数据并放入selector；$get发送http get请求加载远程数据；getScript()加载远程js文件并执行。</li>\n<li>ES6 generator function： function * gen(){}</li>\n<li>call v.s. apply -&gt; 第一个参数都是this，不同的是剩余参数直接传入还是通过数组传入。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li>JS创建Array：1）var arr = [1, 2, 3]; 2）var arr = Array(12); （取0清空数组）3）var arr = Array(1,2,3);</li>\n<li>$.ajax()发送get/post请求加载远程数据；$(selector).load()加载远程数据并放入selector；$get发送http get请求加载远程数据；getScript()加载远程js文件并执行。</li>\n<li>ES6 generator function： function * gen(){}</li>\n<li>call v.s. apply -&gt; 第一个参数都是this，不同的是剩余参数直接传入还是通过数组传入。</li>\n</ol>\n"},{"title":"刷题后感——js - 1","id":"68","date":"2017-02-13T15:28:56.000Z","_content":"\n1.  \n{% qnimg js/1-1.png title:js_1-1 alt:js_1-1 %}\ngreen; blue - this指针对于普通函数调用指向window对象。\n2.\n{% qnimg js/1-2.png title:js_1-2 alt:js_1-2 %}\n回调机制：回调函数会被放到event-loop等待线程中的函数执行结束后执行。\n3.  字符串转bollean：空-&gt;false\n4.  闭包：读取函数内部变量，可以使这些值一直保存在内存中。\n5.  css属性写法去掉‘-’改为驼峰写法即为js中属性名称。\n6.  1+ +\"2\" + \"2\" = 32; 1+\"2\"+\"2\" = 122; \"A\"-\"B\"+2 = NaN; \"A\"-\"B\"+\"2\" = NaN2; 单独+是一元操作符，调用Number()函数获得取值。加法会变成字符串，减法变成数字。\n7.  <div class=\"result-question-box\">\n<div class=\"subject-question\">\n<div>输出对象中值大于2的key的数组</div>\n<div>var data = {a: 1, b: 2, c: 3, d: 4};</div>\n<div>Object.keys(data).filter(function(x) { return <span class=\"blank-num\">__</span> ;})</div>\n<div>期待输出：[“c”,”d”]</div>\n<div>return data[x]&gt;2</div>\n<div>Object.keys(object)返回object可枚举的属性和方法名称，Array。</div>\n<div>Array.filter(function)按条件对Array筛选并返回。</div>\n</div>\n</div>\n","source":"_posts/面试题笔记/刷题后感——js - 1.md","raw":"---\ntitle: 刷题后感——js - 1\nid: 68\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-13 23:28:56\ntags:\n---\n\n1.  \n{% qnimg js/1-1.png title:js_1-1 alt:js_1-1 %}\ngreen; blue - this指针对于普通函数调用指向window对象。\n2.\n{% qnimg js/1-2.png title:js_1-2 alt:js_1-2 %}\n回调机制：回调函数会被放到event-loop等待线程中的函数执行结束后执行。\n3.  字符串转bollean：空-&gt;false\n4.  闭包：读取函数内部变量，可以使这些值一直保存在内存中。\n5.  css属性写法去掉‘-’改为驼峰写法即为js中属性名称。\n6.  1+ +\"2\" + \"2\" = 32; 1+\"2\"+\"2\" = 122; \"A\"-\"B\"+2 = NaN; \"A\"-\"B\"+\"2\" = NaN2; 单独+是一元操作符，调用Number()函数获得取值。加法会变成字符串，减法变成数字。\n7.  <div class=\"result-question-box\">\n<div class=\"subject-question\">\n<div>输出对象中值大于2的key的数组</div>\n<div>var data = {a: 1, b: 2, c: 3, d: 4};</div>\n<div>Object.keys(data).filter(function(x) { return <span class=\"blank-num\">__</span> ;})</div>\n<div>期待输出：[“c”,”d”]</div>\n<div>return data[x]&gt;2</div>\n<div>Object.keys(object)返回object可枚举的属性和方法名称，Array。</div>\n<div>Array.filter(function)按条件对Array筛选并返回。</div>\n</div>\n</div>\n","slug":"面试题笔记/刷题后感——js - 1","published":1,"updated":"2018-11-27T02:45:08.995Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrci001hn9v2tar86kf9","content":"<ol>\n<li><img title=\"js_1-1\" alt=\"js_1-1\" src=\"http://on3eu0vfd.bkt.clouddn.com/static/images/js/1-1.png\">\ngreen; blue - this指针对于普通函数调用指向window对象。<br>2.<img title=\"js_1-2\" alt=\"js_1-2\" src=\"http://on3eu0vfd.bkt.clouddn.com/static/images/js/1-2.png\">\n回调机制：回调函数会被放到event-loop等待线程中的函数执行结束后执行。</li>\n<li>字符串转bollean：空-&gt;false</li>\n<li>闭包：读取函数内部变量，可以使这些值一直保存在内存中。</li>\n<li>css属性写法去掉‘-’改为驼峰写法即为js中属性名称。</li>\n<li>1+ +”2” + “2” = 32; 1+”2”+”2” = 122; “A”-“B”+2 = NaN; “A”-“B”+”2” = NaN2; 单独+是一元操作符，调用Number()函数获得取值。加法会变成字符串，减法变成数字。</li>\n<li><div class=\"result-question-box\"><br><div class=\"subject-question\"><br><div>输出对象中值大于2的key的数组</div><br><div>var data = {a: 1, b: 2, c: 3, d: 4};</div><br><div>Object.keys(data).filter(function(x) { return <span class=\"blank-num\">__</span> ;})</div><br><div>期待输出：[“c”,”d”]</div><br><div>return data[x]&gt;2</div><br><div>Object.keys(object)返回object可枚举的属性和方法名称，Array。</div><br><div>Array.filter(function)按条件对Array筛选并返回。</div><br></div><br></div>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><img title=\"js_1-1\" alt=\"js_1-1\" src=\"http://on3eu0vfd.bkt.clouddn.com/static/images/js/1-1.png\">\ngreen; blue - this指针对于普通函数调用指向window对象。<br>2.<img title=\"js_1-2\" alt=\"js_1-2\" src=\"http://on3eu0vfd.bkt.clouddn.com/static/images/js/1-2.png\">\n回调机制：回调函数会被放到event-loop等待线程中的函数执行结束后执行。</li>\n<li>字符串转bollean：空-&gt;false</li>\n<li>闭包：读取函数内部变量，可以使这些值一直保存在内存中。</li>\n<li>css属性写法去掉‘-’改为驼峰写法即为js中属性名称。</li>\n<li>1+ +”2” + “2” = 32; 1+”2”+”2” = 122; “A”-“B”+2 = NaN; “A”-“B”+”2” = NaN2; 单独+是一元操作符，调用Number()函数获得取值。加法会变成字符串，减法变成数字。</li>\n<li><div class=\"result-question-box\"><br><div class=\"subject-question\"><br><div>输出对象中值大于2的key的数组</div><br><div>var data = {a: 1, b: 2, c: 3, d: 4};</div><br><div>Object.keys(data).filter(function(x) { return <span class=\"blank-num\">__</span> ;})</div><br><div>期待输出：[“c”,”d”]</div><br><div>return data[x]&gt;2</div><br><div>Object.keys(object)返回object可枚举的属性和方法名称，Array。</div><br><div>Array.filter(function)按条件对Array筛选并返回。</div><br></div><br></div>\n</li>\n</ol>\n"},{"title":"[算法] - 排序","id":"231","date":"2017-02-25T11:35:25.000Z","_content":"\njs实现了一下几种基于比较的排序（常数时间的排序还没看！阿西吧！）\n\n插排和冒泡平均时间复杂度o(n^2)，最优o(n)，前两种稳定。选择都是n^2不稳定。\n\n提一下冒泡，一直以为它最坏最好都是n^2复杂度，不过写的时候发现每次冒泡可以检查本次是否交换过元素，如果没有直接退出，最优情况排好序的数组，一趟遍历退出。\n\n通常小数据量选择和插排比较快。基本排好序，小数据量用插排.\n\n1\\. 直接插入\n\n\n<pre>function insertSort(arr) {\n    console.time(\"insert sort: \");\n    for (var i = 0; i &lt; arr.length; i++) {\n      var j = i;\n      var value = arr[i];\n      while(j&gt;0 &amp;&amp; value &lt; arr[j-1]) {\n        arr[j] = arr[j-1];\n        j--;\n      }\n      arr[j] = value;\n    }\n    console.timeEnd(\"insert sort: \");\n    return arr;\n  }</pre>\n\n\n&nbsp;\n\n2\\. 冒泡\n\n\n<pre>function bubbleSort(arr) {\n    console.time(\"bubble sort: \");\n    for(var i = 0; i &lt; arr.length; ++i){  //n次遍历\n      var change = false;\n      for(var j = arr.length-1; j &gt; i; --j) { //从最后冒泡至i，一次冒泡i最小\n        if(arr[j] &lt; arr[j-1]) {\n          var temp = arr[j-1]\n          arr[j-1] = arr[j];\n          arr[j] = temp;\n          change = true;\n        }\n      }\n      if(!change) {\n        console.timeEnd(\"bubble sort: \"); //0.074\n        return arr;\n      }\n    }\n    console.timeEnd(\"bubble sort: \"); //0.095\n    return arr;\n  }</pre>\n\n\n&nbsp;\n\n3\\. 选择\n\n\n<pre>function selectSort(arr) {\n    console.time(\"select sort: \");\n    for(var i = 0; i &lt; arr.length-1; ++i) {\n      var min = i;\n      for(var j = i; j &lt; arr.length; ++j) {\n        if(arr[j] &lt; arr[min]) {\n          min = j;\n        }\n      }\n      var temp = arr[min];\n      arr[min] = arr[i];\n      arr[i] = temp;\n    }\n    console.timeEnd(\"select sort: \");\n    return arr;\n  }</pre>\n\n\n4\\. 快排\n\n然后是快排，平均o(nlogn)，最差o(n^2)在原数据正序或逆序时。快排复杂度能到nlogn主要是每次选取pivot可以把元素划分为两段更小元素处理从而实现divide-conquer的目的，但是如果数据正序或逆序，每次划分后子问题规模是n-1就退化成了n^2复杂度。不稳定。\n\n\n<pre>function qS(arr) {\n    var partition = function(a, l, h) {\n      var p = l;\n      l++;\n      while(l&lt;h) {\n        while(l&lt;h &amp;&amp; a[h] &gt; a[p]) {\n          h--;\n        }\n        while(l&lt;h &amp;&amp; a[l] &lt;= a[p]) {\n          l++;\n        }\n        if(l &lt; h) {\n          var temp = a[l];\n          a[l] = a[h];\n          a[h] = temp;\n          // h--;\n          // l++; //交换之后继续从当前位置扫\n        }\n      }\n      // console.log(h);\n      // console.log(l);\n      var temp = a[p];\n      a[p] = a[h];\n      a[h] = temp;\n      // console.log(a);\n      return h;\n    }\n\n    var sort = function(a, l, h) {\n      if(l&lt;h) {\n        var pivot = partition(a, l, h);\n        // console.log(pivot);\n        sort(a, l, pivot-1);\n        sort(a, pivot+1, h);\n      }\n    }\n\n    return {sa:arr, sort:sort}\n  }</pre>\n\n\n5\\. 堆排序\n\n利用大顶堆或小顶堆性质排序，复杂度最优平均都是o(nlogn)，不稳定。核心是构建大顶堆，和每次取元素之后对堆的maxheapify——递归的方法调整堆，使得其满足根大于子节点的特性，注意停止条件。\n\n[codesyntax lang=\"php\"]\n<pre>function heapSort(arr) {\n    function maxHeapify(arr, index, size) {\n      var max = index;\n      var left = 2*index+1;\n      var right = 2*index+2\n      if(left &lt; size &amp;&amp; arr[left] &gt; arr[max]) {\n        max = left;\n      }\n      if(right &lt; size &amp;&amp; arr[right] &gt; arr[max]) {\n        max = right;\n      }\n      if(index != max){\n        swap(arr, index, max);\n        maxHeapify(arr, max, size);\n      }\n    }\n\n    function buildHeap(arr) {\n      for(var i = Math.floor((arr.length-1)/2); i &gt;= 0; --i) {\n        maxHeapify(arr, i, arr.length);\n      }\n    }\n\n    function sort(arr) {\n      buildHeap(arr);\n      for(var i = 0; i &lt; arr.length; ++i) {\n        swap(arr, 0, arr.length-i-1);\n        //console.log(arr);\n        maxHeapify(arr, 0, arr.length-i-1);\n      }\n      return arr;\n    }\n\n    function swap(arr, a, b) {\n      var temp = arr[a];\n      arr[a] = arr[b];\n      arr[b] = temp;\n    }\n\n    return{arr:arr, sort:sort};\n\n  }</pre>\n\n\n6\\. 希尔排序\n\n基于插排的改进，通过调整步长减少元素移动的次数（插排中相当于每次只能移动1位，如果调整2341中1的位置就需要比较3次移动3次）o(nlogn)\n\n\n<pre>function shellSort(arr) {\n    var gap = 1;\n    while(gap &lt; arr.length) {\n      gap = gap*3 + 1;\n    }\n\n    for(; gap &gt; 0; gap=Math.floor(gap/3)) {\n      for(var j = gap; j &lt; arr.length; ++j) {\n        var value = arr[j]\n        while(j&gt;=0 &amp;&amp; arr[j-gap] &gt; value) {\n          arr[j] = arr[j-gap];\n          j = j-gap;\n        }\n        arr[j] = value;\n        var value = arr[j];\n\n      }\n    }\n\n    return arr;\n  }</pre>\n\n\n7\\. 归并排序\n\n典型分治思想，复杂度o(nlogn)，递归，空间需求大。（外排）\n\n\n<pre>function mergeSort(arr) {\n    if(arr.length == 1) {\n      return arr;\n    }else {\n      var m = Math.floor(arr.length/2);\n      return merge(mergeSort(arr.slice(0,m)), mergeSort(arr.slice(m,arr.lenth)));\n    }\n  }\n\n  function merge(arr1, arr2) {\n    var i = 0;\n    var j = 0;\n    var result = [];\n    while(i + j &lt; arr1.length + arr2.length) {\n      if(arr1[i] &lt;= arr2[j] || j == arr2.length) {\n        result[i+j] = arr1[i];\n        i++;\n      }else if(i &lt; arr1.length || i == arr1.length){\n        result[i+j] = arr2[j];\n        j++;\n      }\n    }\n    return result;\n  }</pre>\n\n","source":"_posts/算法/排序.md","raw":"---\ntitle: '[算法] - 排序'\nid: 231\ncategories:\n  - 学海无涯我游啊游\n  - 数据结构算法\ndate: 2017-02-25 19:35:25\ntags:\n---\n\njs实现了一下几种基于比较的排序（常数时间的排序还没看！阿西吧！）\n\n插排和冒泡平均时间复杂度o(n^2)，最优o(n)，前两种稳定。选择都是n^2不稳定。\n\n提一下冒泡，一直以为它最坏最好都是n^2复杂度，不过写的时候发现每次冒泡可以检查本次是否交换过元素，如果没有直接退出，最优情况排好序的数组，一趟遍历退出。\n\n通常小数据量选择和插排比较快。基本排好序，小数据量用插排.\n\n1\\. 直接插入\n\n\n<pre>function insertSort(arr) {\n    console.time(\"insert sort: \");\n    for (var i = 0; i &lt; arr.length; i++) {\n      var j = i;\n      var value = arr[i];\n      while(j&gt;0 &amp;&amp; value &lt; arr[j-1]) {\n        arr[j] = arr[j-1];\n        j--;\n      }\n      arr[j] = value;\n    }\n    console.timeEnd(\"insert sort: \");\n    return arr;\n  }</pre>\n\n\n&nbsp;\n\n2\\. 冒泡\n\n\n<pre>function bubbleSort(arr) {\n    console.time(\"bubble sort: \");\n    for(var i = 0; i &lt; arr.length; ++i){  //n次遍历\n      var change = false;\n      for(var j = arr.length-1; j &gt; i; --j) { //从最后冒泡至i，一次冒泡i最小\n        if(arr[j] &lt; arr[j-1]) {\n          var temp = arr[j-1]\n          arr[j-1] = arr[j];\n          arr[j] = temp;\n          change = true;\n        }\n      }\n      if(!change) {\n        console.timeEnd(\"bubble sort: \"); //0.074\n        return arr;\n      }\n    }\n    console.timeEnd(\"bubble sort: \"); //0.095\n    return arr;\n  }</pre>\n\n\n&nbsp;\n\n3\\. 选择\n\n\n<pre>function selectSort(arr) {\n    console.time(\"select sort: \");\n    for(var i = 0; i &lt; arr.length-1; ++i) {\n      var min = i;\n      for(var j = i; j &lt; arr.length; ++j) {\n        if(arr[j] &lt; arr[min]) {\n          min = j;\n        }\n      }\n      var temp = arr[min];\n      arr[min] = arr[i];\n      arr[i] = temp;\n    }\n    console.timeEnd(\"select sort: \");\n    return arr;\n  }</pre>\n\n\n4\\. 快排\n\n然后是快排，平均o(nlogn)，最差o(n^2)在原数据正序或逆序时。快排复杂度能到nlogn主要是每次选取pivot可以把元素划分为两段更小元素处理从而实现divide-conquer的目的，但是如果数据正序或逆序，每次划分后子问题规模是n-1就退化成了n^2复杂度。不稳定。\n\n\n<pre>function qS(arr) {\n    var partition = function(a, l, h) {\n      var p = l;\n      l++;\n      while(l&lt;h) {\n        while(l&lt;h &amp;&amp; a[h] &gt; a[p]) {\n          h--;\n        }\n        while(l&lt;h &amp;&amp; a[l] &lt;= a[p]) {\n          l++;\n        }\n        if(l &lt; h) {\n          var temp = a[l];\n          a[l] = a[h];\n          a[h] = temp;\n          // h--;\n          // l++; //交换之后继续从当前位置扫\n        }\n      }\n      // console.log(h);\n      // console.log(l);\n      var temp = a[p];\n      a[p] = a[h];\n      a[h] = temp;\n      // console.log(a);\n      return h;\n    }\n\n    var sort = function(a, l, h) {\n      if(l&lt;h) {\n        var pivot = partition(a, l, h);\n        // console.log(pivot);\n        sort(a, l, pivot-1);\n        sort(a, pivot+1, h);\n      }\n    }\n\n    return {sa:arr, sort:sort}\n  }</pre>\n\n\n5\\. 堆排序\n\n利用大顶堆或小顶堆性质排序，复杂度最优平均都是o(nlogn)，不稳定。核心是构建大顶堆，和每次取元素之后对堆的maxheapify——递归的方法调整堆，使得其满足根大于子节点的特性，注意停止条件。\n\n[codesyntax lang=\"php\"]\n<pre>function heapSort(arr) {\n    function maxHeapify(arr, index, size) {\n      var max = index;\n      var left = 2*index+1;\n      var right = 2*index+2\n      if(left &lt; size &amp;&amp; arr[left] &gt; arr[max]) {\n        max = left;\n      }\n      if(right &lt; size &amp;&amp; arr[right] &gt; arr[max]) {\n        max = right;\n      }\n      if(index != max){\n        swap(arr, index, max);\n        maxHeapify(arr, max, size);\n      }\n    }\n\n    function buildHeap(arr) {\n      for(var i = Math.floor((arr.length-1)/2); i &gt;= 0; --i) {\n        maxHeapify(arr, i, arr.length);\n      }\n    }\n\n    function sort(arr) {\n      buildHeap(arr);\n      for(var i = 0; i &lt; arr.length; ++i) {\n        swap(arr, 0, arr.length-i-1);\n        //console.log(arr);\n        maxHeapify(arr, 0, arr.length-i-1);\n      }\n      return arr;\n    }\n\n    function swap(arr, a, b) {\n      var temp = arr[a];\n      arr[a] = arr[b];\n      arr[b] = temp;\n    }\n\n    return{arr:arr, sort:sort};\n\n  }</pre>\n\n\n6\\. 希尔排序\n\n基于插排的改进，通过调整步长减少元素移动的次数（插排中相当于每次只能移动1位，如果调整2341中1的位置就需要比较3次移动3次）o(nlogn)\n\n\n<pre>function shellSort(arr) {\n    var gap = 1;\n    while(gap &lt; arr.length) {\n      gap = gap*3 + 1;\n    }\n\n    for(; gap &gt; 0; gap=Math.floor(gap/3)) {\n      for(var j = gap; j &lt; arr.length; ++j) {\n        var value = arr[j]\n        while(j&gt;=0 &amp;&amp; arr[j-gap] &gt; value) {\n          arr[j] = arr[j-gap];\n          j = j-gap;\n        }\n        arr[j] = value;\n        var value = arr[j];\n\n      }\n    }\n\n    return arr;\n  }</pre>\n\n\n7\\. 归并排序\n\n典型分治思想，复杂度o(nlogn)，递归，空间需求大。（外排）\n\n\n<pre>function mergeSort(arr) {\n    if(arr.length == 1) {\n      return arr;\n    }else {\n      var m = Math.floor(arr.length/2);\n      return merge(mergeSort(arr.slice(0,m)), mergeSort(arr.slice(m,arr.lenth)));\n    }\n  }\n\n  function merge(arr1, arr2) {\n    var i = 0;\n    var j = 0;\n    var result = [];\n    while(i + j &lt; arr1.length + arr2.length) {\n      if(arr1[i] &lt;= arr2[j] || j == arr2.length) {\n        result[i+j] = arr1[i];\n        i++;\n      }else if(i &lt; arr1.length || i == arr1.length){\n        result[i+j] = arr2[j];\n        j++;\n      }\n    }\n    return result;\n  }</pre>\n\n","slug":"算法/排序","published":1,"updated":"2018-11-27T02:45:08.994Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjxfpgrcj001jn9v2tm5i859k","content":"<p>js实现了一下几种基于比较的排序（常数时间的排序还没看！阿西吧！）</p>\n<p>插排和冒泡平均时间复杂度o(n^2)，最优o(n)，前两种稳定。选择都是n^2不稳定。</p>\n<p>提一下冒泡，一直以为它最坏最好都是n^2复杂度，不过写的时候发现每次冒泡可以检查本次是否交换过元素，如果没有直接退出，最优情况排好序的数组，一趟遍历退出。</p>\n<p>通常小数据量选择和插排比较快。基本排好序，小数据量用插排.</p>\n<p>1. 直接插入</p>\n<pre>function insertSort(arr) {\n    console.time(\"insert sort: \");\n    for (var i = 0; i &lt; arr.length; i++) {\n      var j = i;\n      var value = arr[i];\n      while(j&gt;0 &amp;&amp; value &lt; arr[j-1]) {\n        arr[j] = arr[j-1];\n        j--;\n      }\n      arr[j] = value;\n    }\n    console.timeEnd(\"insert sort: \");\n    return arr;\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>2. 冒泡</p>\n<pre>function bubbleSort(arr) {\n    console.time(\"bubble sort: \");\n    for(var i = 0; i &lt; arr.length; ++i){  //n次遍历\n      var change = false;\n      for(var j = arr.length-1; j &gt; i; --j) { //从最后冒泡至i，一次冒泡i最小\n        if(arr[j] &lt; arr[j-1]) {\n          var temp = arr[j-1]\n          arr[j-1] = arr[j];\n          arr[j] = temp;\n          change = true;\n        }\n      }\n      if(!change) {\n        console.timeEnd(\"bubble sort: \"); //0.074\n        return arr;\n      }\n    }\n    console.timeEnd(\"bubble sort: \"); //0.095\n    return arr;\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>3. 选择</p>\n<pre>function selectSort(arr) {\n    console.time(\"select sort: \");\n    for(var i = 0; i &lt; arr.length-1; ++i) {\n      var min = i;\n      for(var j = i; j &lt; arr.length; ++j) {\n        if(arr[j] &lt; arr[min]) {\n          min = j;\n        }\n      }\n      var temp = arr[min];\n      arr[min] = arr[i];\n      arr[i] = temp;\n    }\n    console.timeEnd(\"select sort: \");\n    return arr;\n  }</pre>\n\n\n<p>4. 快排</p>\n<p>然后是快排，平均o(nlogn)，最差o(n^2)在原数据正序或逆序时。快排复杂度能到nlogn主要是每次选取pivot可以把元素划分为两段更小元素处理从而实现divide-conquer的目的，但是如果数据正序或逆序，每次划分后子问题规模是n-1就退化成了n^2复杂度。不稳定。</p>\n<pre>function qS(arr) {\n    var partition = function(a, l, h) {\n      var p = l;\n      l++;\n      while(l&lt;h) {\n        while(l&lt;h &amp;&amp; a[h] &gt; a[p]) {\n          h--;\n        }\n        while(l&lt;h &amp;&amp; a[l] &lt;= a[p]) {\n          l++;\n        }\n        if(l &lt; h) {\n          var temp = a[l];\n          a[l] = a[h];\n          a[h] = temp;\n          // h--;\n          // l++; //交换之后继续从当前位置扫\n        }\n      }\n      // console.log(h);\n      // console.log(l);\n      var temp = a[p];\n      a[p] = a[h];\n      a[h] = temp;\n      // console.log(a);\n      return h;\n    }\n\n    var sort = function(a, l, h) {\n      if(l&lt;h) {\n        var pivot = partition(a, l, h);\n        // console.log(pivot);\n        sort(a, l, pivot-1);\n        sort(a, pivot+1, h);\n      }\n    }\n\n    return {sa:arr, sort:sort}\n  }</pre>\n\n\n<p>5. 堆排序</p>\n<p>利用大顶堆或小顶堆性质排序，复杂度最优平均都是o(nlogn)，不稳定。核心是构建大顶堆，和每次取元素之后对堆的maxheapify——递归的方法调整堆，使得其满足根大于子节点的特性，注意停止条件。</p>\n<p>[codesyntax lang=”php”]</p>\n<pre>function heapSort(arr) {\n    function maxHeapify(arr, index, size) {\n      var max = index;\n      var left = 2*index+1;\n      var right = 2*index+2\n      if(left &lt; size &amp;&amp; arr[left] &gt; arr[max]) {\n        max = left;\n      }\n      if(right &lt; size &amp;&amp; arr[right] &gt; arr[max]) {\n        max = right;\n      }\n      if(index != max){\n        swap(arr, index, max);\n        maxHeapify(arr, max, size);\n      }\n    }\n\n    function buildHeap(arr) {\n      for(var i = Math.floor((arr.length-1)/2); i &gt;= 0; --i) {\n        maxHeapify(arr, i, arr.length);\n      }\n    }\n\n    function sort(arr) {\n      buildHeap(arr);\n      for(var i = 0; i &lt; arr.length; ++i) {\n        swap(arr, 0, arr.length-i-1);\n        //console.log(arr);\n        maxHeapify(arr, 0, arr.length-i-1);\n      }\n      return arr;\n    }\n\n    function swap(arr, a, b) {\n      var temp = arr[a];\n      arr[a] = arr[b];\n      arr[b] = temp;\n    }\n\n    return{arr:arr, sort:sort};\n\n  }</pre>\n\n\n<p>6. 希尔排序</p>\n<p>基于插排的改进，通过调整步长减少元素移动的次数（插排中相当于每次只能移动1位，如果调整2341中1的位置就需要比较3次移动3次）o(nlogn)</p>\n<pre>function shellSort(arr) {\n    var gap = 1;\n    while(gap &lt; arr.length) {\n      gap = gap*3 + 1;\n    }\n\n    for(; gap &gt; 0; gap=Math.floor(gap/3)) {\n      for(var j = gap; j &lt; arr.length; ++j) {\n        var value = arr[j]\n        while(j&gt;=0 &amp;&amp; arr[j-gap] &gt; value) {\n          arr[j] = arr[j-gap];\n          j = j-gap;\n        }\n        arr[j] = value;\n        var value = arr[j];\n\n      }\n    }\n\n    return arr;\n  }</pre>\n\n\n<p>7. 归并排序</p>\n<p>典型分治思想，复杂度o(nlogn)，递归，空间需求大。（外排）</p>\n<pre>function mergeSort(arr) {\n    if(arr.length == 1) {\n      return arr;\n    }else {\n      var m = Math.floor(arr.length/2);\n      return merge(mergeSort(arr.slice(0,m)), mergeSort(arr.slice(m,arr.lenth)));\n    }\n  }\n\n  function merge(arr1, arr2) {\n    var i = 0;\n    var j = 0;\n    var result = [];\n    while(i + j &lt; arr1.length + arr2.length) {\n      if(arr1[i] &lt;= arr2[j] || j == arr2.length) {\n        result[i+j] = arr1[i];\n        i++;\n      }else if(i &lt; arr1.length || i == arr1.length){\n        result[i+j] = arr2[j];\n        j++;\n      }\n    }\n    return result;\n  }</pre>\n\n","site":{"data":{}},"excerpt":"","more":"<p>js实现了一下几种基于比较的排序（常数时间的排序还没看！阿西吧！）</p>\n<p>插排和冒泡平均时间复杂度o(n^2)，最优o(n)，前两种稳定。选择都是n^2不稳定。</p>\n<p>提一下冒泡，一直以为它最坏最好都是n^2复杂度，不过写的时候发现每次冒泡可以检查本次是否交换过元素，如果没有直接退出，最优情况排好序的数组，一趟遍历退出。</p>\n<p>通常小数据量选择和插排比较快。基本排好序，小数据量用插排.</p>\n<p>1. 直接插入</p>\n<pre>function insertSort(arr) {\n    console.time(\"insert sort: \");\n    for (var i = 0; i &lt; arr.length; i++) {\n      var j = i;\n      var value = arr[i];\n      while(j&gt;0 &amp;&amp; value &lt; arr[j-1]) {\n        arr[j] = arr[j-1];\n        j--;\n      }\n      arr[j] = value;\n    }\n    console.timeEnd(\"insert sort: \");\n    return arr;\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>2. 冒泡</p>\n<pre>function bubbleSort(arr) {\n    console.time(\"bubble sort: \");\n    for(var i = 0; i &lt; arr.length; ++i){  //n次遍历\n      var change = false;\n      for(var j = arr.length-1; j &gt; i; --j) { //从最后冒泡至i，一次冒泡i最小\n        if(arr[j] &lt; arr[j-1]) {\n          var temp = arr[j-1]\n          arr[j-1] = arr[j];\n          arr[j] = temp;\n          change = true;\n        }\n      }\n      if(!change) {\n        console.timeEnd(\"bubble sort: \"); //0.074\n        return arr;\n      }\n    }\n    console.timeEnd(\"bubble sort: \"); //0.095\n    return arr;\n  }</pre>\n\n\n<p>&nbsp;</p>\n<p>3. 选择</p>\n<pre>function selectSort(arr) {\n    console.time(\"select sort: \");\n    for(var i = 0; i &lt; arr.length-1; ++i) {\n      var min = i;\n      for(var j = i; j &lt; arr.length; ++j) {\n        if(arr[j] &lt; arr[min]) {\n          min = j;\n        }\n      }\n      var temp = arr[min];\n      arr[min] = arr[i];\n      arr[i] = temp;\n    }\n    console.timeEnd(\"select sort: \");\n    return arr;\n  }</pre>\n\n\n<p>4. 快排</p>\n<p>然后是快排，平均o(nlogn)，最差o(n^2)在原数据正序或逆序时。快排复杂度能到nlogn主要是每次选取pivot可以把元素划分为两段更小元素处理从而实现divide-conquer的目的，但是如果数据正序或逆序，每次划分后子问题规模是n-1就退化成了n^2复杂度。不稳定。</p>\n<pre>function qS(arr) {\n    var partition = function(a, l, h) {\n      var p = l;\n      l++;\n      while(l&lt;h) {\n        while(l&lt;h &amp;&amp; a[h] &gt; a[p]) {\n          h--;\n        }\n        while(l&lt;h &amp;&amp; a[l] &lt;= a[p]) {\n          l++;\n        }\n        if(l &lt; h) {\n          var temp = a[l];\n          a[l] = a[h];\n          a[h] = temp;\n          // h--;\n          // l++; //交换之后继续从当前位置扫\n        }\n      }\n      // console.log(h);\n      // console.log(l);\n      var temp = a[p];\n      a[p] = a[h];\n      a[h] = temp;\n      // console.log(a);\n      return h;\n    }\n\n    var sort = function(a, l, h) {\n      if(l&lt;h) {\n        var pivot = partition(a, l, h);\n        // console.log(pivot);\n        sort(a, l, pivot-1);\n        sort(a, pivot+1, h);\n      }\n    }\n\n    return {sa:arr, sort:sort}\n  }</pre>\n\n\n<p>5. 堆排序</p>\n<p>利用大顶堆或小顶堆性质排序，复杂度最优平均都是o(nlogn)，不稳定。核心是构建大顶堆，和每次取元素之后对堆的maxheapify——递归的方法调整堆，使得其满足根大于子节点的特性，注意停止条件。</p>\n<p>[codesyntax lang=”php”]</p>\n<pre>function heapSort(arr) {\n    function maxHeapify(arr, index, size) {\n      var max = index;\n      var left = 2*index+1;\n      var right = 2*index+2\n      if(left &lt; size &amp;&amp; arr[left] &gt; arr[max]) {\n        max = left;\n      }\n      if(right &lt; size &amp;&amp; arr[right] &gt; arr[max]) {\n        max = right;\n      }\n      if(index != max){\n        swap(arr, index, max);\n        maxHeapify(arr, max, size);\n      }\n    }\n\n    function buildHeap(arr) {\n      for(var i = Math.floor((arr.length-1)/2); i &gt;= 0; --i) {\n        maxHeapify(arr, i, arr.length);\n      }\n    }\n\n    function sort(arr) {\n      buildHeap(arr);\n      for(var i = 0; i &lt; arr.length; ++i) {\n        swap(arr, 0, arr.length-i-1);\n        //console.log(arr);\n        maxHeapify(arr, 0, arr.length-i-1);\n      }\n      return arr;\n    }\n\n    function swap(arr, a, b) {\n      var temp = arr[a];\n      arr[a] = arr[b];\n      arr[b] = temp;\n    }\n\n    return{arr:arr, sort:sort};\n\n  }</pre>\n\n\n<p>6. 希尔排序</p>\n<p>基于插排的改进，通过调整步长减少元素移动的次数（插排中相当于每次只能移动1位，如果调整2341中1的位置就需要比较3次移动3次）o(nlogn)</p>\n<pre>function shellSort(arr) {\n    var gap = 1;\n    while(gap &lt; arr.length) {\n      gap = gap*3 + 1;\n    }\n\n    for(; gap &gt; 0; gap=Math.floor(gap/3)) {\n      for(var j = gap; j &lt; arr.length; ++j) {\n        var value = arr[j]\n        while(j&gt;=0 &amp;&amp; arr[j-gap] &gt; value) {\n          arr[j] = arr[j-gap];\n          j = j-gap;\n        }\n        arr[j] = value;\n        var value = arr[j];\n\n      }\n    }\n\n    return arr;\n  }</pre>\n\n\n<p>7. 归并排序</p>\n<p>典型分治思想，复杂度o(nlogn)，递归，空间需求大。（外排）</p>\n<pre>function mergeSort(arr) {\n    if(arr.length == 1) {\n      return arr;\n    }else {\n      var m = Math.floor(arr.length/2);\n      return merge(mergeSort(arr.slice(0,m)), mergeSort(arr.slice(m,arr.lenth)));\n    }\n  }\n\n  function merge(arr1, arr2) {\n    var i = 0;\n    var j = 0;\n    var result = [];\n    while(i + j &lt; arr1.length + arr2.length) {\n      if(arr1[i] &lt;= arr2[j] || j == arr2.length) {\n        result[i+j] = arr1[i];\n        i++;\n      }else if(i &lt; arr1.length || i == arr1.length){\n        result[i+j] = arr2[j];\n        j++;\n      }\n    }\n    return result;\n  }</pre>\n\n"},{"title":"刷题后感——递归","id":"38","date":"2017-02-11T16:20:41.000Z","_content":"\n1 递归的次数和递归的深度问题。\n\n递归次数与每次划分后得到的分区处理顺序无关。\n\n对n个记录的线性表进行快速排序为减少算法递归深度，每次分区后先处理较短部分。\n\n以上是题目中总结的知识点，第一条比较好理解，假设1，2，3，4四个数字，第一次划分得到（1），（2，3，4），先处理1 ，返回，处理（2，3，4）-&gt;（2）返回，（3，4）-&gt;（3）返回，（4）返回，和先处理大分区是相同的划分过程，（1，2，3，4）-&gt;（1），（2，3，4）-&gt;（1），（2），（3，4）-&gt;（1），（2），（3），（4）再逐一返回。由这个划分大致可以看出大小分区的处理先后顺序并不影响递归的次数。\n\n递归深度可以理解为系统栈保存的深度（题目解析这么说的，摊手）。那同样是上面这个例子，两种处理方式就可以看出栈的深度不同，小分区，处理1时，栈中存一个元素（2，3，4），返回后再处理（2，3，4），同样（3，4）仅占用一个位置，这样栈的深度仅为1。第二种方式，处理（2，3，4）时，1入栈，-&gt;2入栈，处理（3，4）-&gt;3入栈-&gt;处理4，再依次返回，所以在处理4的时候栈的深度可以达到4。\n\n","source":"_posts/面试题笔记/刷题后感——递归.md","raw":"---\ntitle: 刷题后感——递归\nid: 38\ncategories:\n  - 学海无涯我游啊游\n  - Javascript\ndate: 2017-02-12 00:20:41\ntags:\n---\n\n1 递归的次数和递归的深度问题。\n\n递归次数与每次划分后得到的分区处理顺序无关。\n\n对n个记录的线性表进行快速排序为减少算法递归深度，每次分区后先处理较短部分。\n\n以上是题目中总结的知识点，第一条比较好理解，假设1，2，3，4四个数字，第一次划分得到（1），（2，3，4），先处理1 ，返回，处理（2，3，4）-&gt;（2）返回，（3，4）-&gt;（3）返回，（4）返回，和先处理大分区是相同的划分过程，（1，2，3，4）-&gt;（1），（2，3，4）-&gt;（1），（2），（3，4）-&gt;（1），（2），（3），（4）再逐一返回。由这个划分大致可以看出大小分区的处理先后顺序并不影响递归的次数。\n\n递归深度可以理解为系统栈保存的深度（题目解析这么说的，摊手）。那同样是上面这个例子，两种处理方式就可以看出栈的深度不同，小分区，处理1时，栈中存一个元素（2，3，4），返回后再处理（2，3，4），同样（3，4）仅占用一个位置，这样栈的深度仅为1。第二种方式，处理（2，3，4）时，1入栈，-&gt;2入栈，处理（3，4）-&gt;3入栈-&gt;处理4，再依次返回，所以在处理4的时候栈的深度可以达到4。\n\n","slug":"面试题笔记/刷题后感——递归","published":1,"updated":"2019-07-15T08:52:57.036Z","_id":"cjxfpgrck001mn9v2rjjhspix","comments":1,"layout":"post","photos":[],"link":"","content":"<p>1 递归的次数和递归的深度问题。</p>\n<p>递归次数与每次划分后得到的分区处理顺序无关。</p>\n<p>对n个记录的线性表进行快速排序为减少算法递归深度，每次分区后先处理较短部分。</p>\n<p>以上是题目中总结的知识点，第一条比较好理解，假设1，2，3，4四个数字，第一次划分得到（1），（2，3，4），先处理1 ，返回，处理（2，3，4）-&gt;（2）返回，（3，4）-&gt;（3）返回，（4）返回，和先处理大分区是相同的划分过程，（1，2，3，4）-&gt;（1），（2，3，4）-&gt;（1），（2），（3，4）-&gt;（1），（2），（3），（4）再逐一返回。由这个划分大致可以看出大小分区的处理先后顺序并不影响递归的次数。</p>\n<p>递归深度可以理解为系统栈保存的深度（题目解析这么说的，摊手）。那同样是上面这个例子，两种处理方式就可以看出栈的深度不同，小分区，处理1时，栈中存一个元素（2，3，4），返回后再处理（2，3，4），同样（3，4）仅占用一个位置，这样栈的深度仅为1。第二种方式，处理（2，3，4）时，1入栈，-&gt;2入栈，处理（3，4）-&gt;3入栈-&gt;处理4，再依次返回，所以在处理4的时候栈的深度可以达到4。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1 递归的次数和递归的深度问题。</p>\n<p>递归次数与每次划分后得到的分区处理顺序无关。</p>\n<p>对n个记录的线性表进行快速排序为减少算法递归深度，每次分区后先处理较短部分。</p>\n<p>以上是题目中总结的知识点，第一条比较好理解，假设1，2，3，4四个数字，第一次划分得到（1），（2，3，4），先处理1 ，返回，处理（2，3，4）-&gt;（2）返回，（3，4）-&gt;（3）返回，（4）返回，和先处理大分区是相同的划分过程，（1，2，3，4）-&gt;（1），（2，3，4）-&gt;（1），（2），（3，4）-&gt;（1），（2），（3），（4）再逐一返回。由这个划分大致可以看出大小分区的处理先后顺序并不影响递归的次数。</p>\n<p>递归深度可以理解为系统栈保存的深度（题目解析这么说的，摊手）。那同样是上面这个例子，两种处理方式就可以看出栈的深度不同，小分区，处理1时，栈中存一个元素（2，3，4），返回后再处理（2，3，4），同样（3，4）仅占用一个位置，这样栈的深度仅为1。第二种方式，处理（2，3，4）时，1入栈，-&gt;2入栈，处理（3，4）-&gt;3入栈-&gt;处理4，再依次返回，所以在处理4的时候栈的深度可以达到4。</p>\n"},{"title":"关于他们所说的必然","id":"29","date":"2017-02-11T01:51:22.000Z","_content":"\n所有预言不过是一次对被预测者的攻心。\n\n不管你信与不信，愿不愿意，你的意识、潜意识都藏起了这个预言的影子，\n\n像是一粒极不起眼的种子，捕风捉影，茁壮成长。\n\n未来某一天，它就长出一棵树，它就变成一片海，\n\n让你看着这山川河流，浩瀚宇宙而敬畏，而臣服。\n\n然后，你会听见人们铿锵的低语\n\n看啊，果不其然。","source":"_drafts/关于他们所说的必然.md","raw":"---\ntitle: 关于他们所说的必然\nid: 29\ncategories:\n  - 短逼逼\ndate: 2017-02-11 09:51:22\ntags:\n---\n\n所有预言不过是一次对被预测者的攻心。\n\n不管你信与不信，愿不愿意，你的意识、潜意识都藏起了这个预言的影子，\n\n像是一粒极不起眼的种子，捕风捉影，茁壮成长。\n\n未来某一天，它就长出一棵树，它就变成一片海，\n\n让你看着这山川河流，浩瀚宇宙而敬畏，而臣服。\n\n然后，你会听见人们铿锵的低语\n\n看啊，果不其然。","slug":"关于他们所说的必然","published":0,"updated":"2019-07-15T08:40:33.922Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy456orq0000gxv291mlfvja","content":"<p>所有预言不过是一次对被预测者的攻心。</p>\n<p>不管你信与不信，愿不愿意，你的意识、潜意识都藏起了这个预言的影子，</p>\n<p>像是一粒极不起眼的种子，捕风捉影，茁壮成长。</p>\n<p>未来某一天，它就长出一棵树，它就变成一片海，</p>\n<p>让你看着这山川河流，浩瀚宇宙而敬畏，而臣服。</p>\n<p>然后，你会听见人们铿锵的低语</p>\n<p>看啊，果不其然。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>所有预言不过是一次对被预测者的攻心。</p>\n<p>不管你信与不信，愿不愿意，你的意识、潜意识都藏起了这个预言的影子，</p>\n<p>像是一粒极不起眼的种子，捕风捉影，茁壮成长。</p>\n<p>未来某一天，它就长出一棵树，它就变成一片海，</p>\n<p>让你看着这山川河流，浩瀚宇宙而敬畏，而臣服。</p>\n<p>然后，你会听见人们铿锵的低语</p>\n<p>看啊，果不其然。</p>\n"},{"title":"[Bootstrap] - 基础 - 1","id":"204","date":"2017-02-17T10:36:42.000Z","_content":"\n1\\. &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; (mobile first bootstrap3)\n\n2\\. container (fixed),&nbsp; container-fluid (full width of viewport)\n\n3\\. grid - 12 col-xs/col-sm/col-md/col-lg\n\n4.Typography\n\n1) Default Settings: font-size: 14px; line-height: 1.428;\n\n2) &lt;small&gt; create a smaller subtitle in header\n\n3) &lt;mark&gt; highlight\n\n4) &lt;abbr&gt;\n\n5) **Contextual color and background color:** .text-primary, .text-muted, .text-success, .text-warning, .text-danger, .text-info, .bg-primary, .bg-success, .bg-warning, .bg-danger, bg-info\n\n6) .text-left, .text-center, .text-right, .text-nowrap, .text-lowercase, .text-uppercase, .text-capitalize, .list-unstyled\n\n5\\. Table\n\n1) .table-stripped, .table-bordered, .table-hover, .table-condensed, .table-responsive\n\n2) .active, .info, .success, .warning, .danger\n\n6\\. Image\n\n1) .img-rounded, img-circle, .img-thumbnail, .img-responsive\n\n7\\. .jumbotron\n\n8\\. .well, .well-sm, .well-lg\n\n9\\. .alert .alert-success/info/danger/warning\n\n10\\. Button (.btn)\n\n1) .btn-primary, .btn-success, .btn-warning, .btn-danger, .btn-info\n\n2) .btn-lg, .btn-md, .btn-sm, .btn-xs\n\n3) .btn-block\n\n4) .disabled, .active\n\n11\\. .btn-group .btn-group-vertical .btn-group-justified\n\n12\\. .badge .label\n\n13\\. .pagination\n\n14\\. .pager .previous .next\n\n15\\. List Group\n\n1) .list-group\n\n2) .list-group-item\n\n16\\. Dropdown\n\n1) .dropdown\n\n2) .dropdown-toggle data-toggle=\"dropdown\"\n\n3) .dropdown-menu\n\n4) .dropdown-header\n\n5) .divider\n\n17\\. Collapse\n\n1) data-toggle=\"collapse\" data-target=\"...\"\n\n2) data-toggle=\"collapse\" data-parent=\"...\"&nbsp; (simple accordion)\n\n&nbsp;\n","source":"_drafts/Bootstrap/Bootstrap - 基础 - 1.md","raw":"---\ntitle: '[Bootstrap] - 基础 - 1'\nid: 204\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-17 18:36:42\ntags:\n---\n\n1\\. &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1\"&gt; (mobile first bootstrap3)\n\n2\\. container (fixed),&nbsp; container-fluid (full width of viewport)\n\n3\\. grid - 12 col-xs/col-sm/col-md/col-lg\n\n4.Typography\n\n1) Default Settings: font-size: 14px; line-height: 1.428;\n\n2) &lt;small&gt; create a smaller subtitle in header\n\n3) &lt;mark&gt; highlight\n\n4) &lt;abbr&gt;\n\n5) **Contextual color and background color:** .text-primary, .text-muted, .text-success, .text-warning, .text-danger, .text-info, .bg-primary, .bg-success, .bg-warning, .bg-danger, bg-info\n\n6) .text-left, .text-center, .text-right, .text-nowrap, .text-lowercase, .text-uppercase, .text-capitalize, .list-unstyled\n\n5\\. Table\n\n1) .table-stripped, .table-bordered, .table-hover, .table-condensed, .table-responsive\n\n2) .active, .info, .success, .warning, .danger\n\n6\\. Image\n\n1) .img-rounded, img-circle, .img-thumbnail, .img-responsive\n\n7\\. .jumbotron\n\n8\\. .well, .well-sm, .well-lg\n\n9\\. .alert .alert-success/info/danger/warning\n\n10\\. Button (.btn)\n\n1) .btn-primary, .btn-success, .btn-warning, .btn-danger, .btn-info\n\n2) .btn-lg, .btn-md, .btn-sm, .btn-xs\n\n3) .btn-block\n\n4) .disabled, .active\n\n11\\. .btn-group .btn-group-vertical .btn-group-justified\n\n12\\. .badge .label\n\n13\\. .pagination\n\n14\\. .pager .previous .next\n\n15\\. List Group\n\n1) .list-group\n\n2) .list-group-item\n\n16\\. Dropdown\n\n1) .dropdown\n\n2) .dropdown-toggle data-toggle=\"dropdown\"\n\n3) .dropdown-menu\n\n4) .dropdown-header\n\n5) .divider\n\n17\\. Collapse\n\n1) data-toggle=\"collapse\" data-target=\"...\"\n\n2) data-toggle=\"collapse\" data-parent=\"...\"&nbsp; (simple accordion)\n\n&nbsp;\n","slug":"Bootstrap/Bootstrap - 基础 - 1","published":0,"updated":"2018-11-27T02:45:08.990Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy456owh0002gxv2bnjehiij","content":"<p>1. &lt;meta name=”viewport” content=”width=device-width, initial-scale=1”&gt; (mobile first bootstrap3)</p>\n<p>2. container (fixed),&nbsp; container-fluid (full width of viewport)</p>\n<p>3. grid - 12 col-xs/col-sm/col-md/col-lg</p>\n<p>4.Typography</p>\n<p>1) Default Settings: font-size: 14px; line-height: 1.428;</p>\n<p>2) &lt;small&gt; create a smaller subtitle in header</p>\n<p>3) &lt;mark&gt; highlight</p>\n<p>4) &lt;abbr&gt;</p>\n<p>5) <strong>Contextual color and background color:</strong> .text-primary, .text-muted, .text-success, .text-warning, .text-danger, .text-info, .bg-primary, .bg-success, .bg-warning, .bg-danger, bg-info</p>\n<p>6) .text-left, .text-center, .text-right, .text-nowrap, .text-lowercase, .text-uppercase, .text-capitalize, .list-unstyled</p>\n<p>5. Table</p>\n<p>1) .table-stripped, .table-bordered, .table-hover, .table-condensed, .table-responsive</p>\n<p>2) .active, .info, .success, .warning, .danger</p>\n<p>6. Image</p>\n<p>1) .img-rounded, img-circle, .img-thumbnail, .img-responsive</p>\n<p>7. .jumbotron</p>\n<p>8. .well, .well-sm, .well-lg</p>\n<p>9. .alert .alert-success/info/danger/warning</p>\n<p>10. Button (.btn)</p>\n<p>1) .btn-primary, .btn-success, .btn-warning, .btn-danger, .btn-info</p>\n<p>2) .btn-lg, .btn-md, .btn-sm, .btn-xs</p>\n<p>3) .btn-block</p>\n<p>4) .disabled, .active</p>\n<p>11. .btn-group .btn-group-vertical .btn-group-justified</p>\n<p>12. .badge .label</p>\n<p>13. .pagination</p>\n<p>14. .pager .previous .next</p>\n<p>15. List Group</p>\n<p>1) .list-group</p>\n<p>2) .list-group-item</p>\n<p>16. Dropdown</p>\n<p>1) .dropdown</p>\n<p>2) .dropdown-toggle data-toggle=”dropdown”</p>\n<p>3) .dropdown-menu</p>\n<p>4) .dropdown-header</p>\n<p>5) .divider</p>\n<p>17. Collapse</p>\n<p>1) data-toggle=”collapse” data-target=”…”</p>\n<p>2) data-toggle=”collapse” data-parent=”…”&nbsp; (simple accordion)</p>\n<p>&nbsp;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. &lt;meta name=”viewport” content=”width=device-width, initial-scale=1”&gt; (mobile first bootstrap3)</p>\n<p>2. container (fixed),&nbsp; container-fluid (full width of viewport)</p>\n<p>3. grid - 12 col-xs/col-sm/col-md/col-lg</p>\n<p>4.Typography</p>\n<p>1) Default Settings: font-size: 14px; line-height: 1.428;</p>\n<p>2) &lt;small&gt; create a smaller subtitle in header</p>\n<p>3) &lt;mark&gt; highlight</p>\n<p>4) &lt;abbr&gt;</p>\n<p>5) <strong>Contextual color and background color:</strong> .text-primary, .text-muted, .text-success, .text-warning, .text-danger, .text-info, .bg-primary, .bg-success, .bg-warning, .bg-danger, bg-info</p>\n<p>6) .text-left, .text-center, .text-right, .text-nowrap, .text-lowercase, .text-uppercase, .text-capitalize, .list-unstyled</p>\n<p>5. Table</p>\n<p>1) .table-stripped, .table-bordered, .table-hover, .table-condensed, .table-responsive</p>\n<p>2) .active, .info, .success, .warning, .danger</p>\n<p>6. Image</p>\n<p>1) .img-rounded, img-circle, .img-thumbnail, .img-responsive</p>\n<p>7. .jumbotron</p>\n<p>8. .well, .well-sm, .well-lg</p>\n<p>9. .alert .alert-success/info/danger/warning</p>\n<p>10. Button (.btn)</p>\n<p>1) .btn-primary, .btn-success, .btn-warning, .btn-danger, .btn-info</p>\n<p>2) .btn-lg, .btn-md, .btn-sm, .btn-xs</p>\n<p>3) .btn-block</p>\n<p>4) .disabled, .active</p>\n<p>11. .btn-group .btn-group-vertical .btn-group-justified</p>\n<p>12. .badge .label</p>\n<p>13. .pagination</p>\n<p>14. .pager .previous .next</p>\n<p>15. List Group</p>\n<p>1) .list-group</p>\n<p>2) .list-group-item</p>\n<p>16. Dropdown</p>\n<p>1) .dropdown</p>\n<p>2) .dropdown-toggle data-toggle=”dropdown”</p>\n<p>3) .dropdown-menu</p>\n<p>4) .dropdown-header</p>\n<p>5) .divider</p>\n<p>17. Collapse</p>\n<p>1) data-toggle=”collapse” data-target=”…”</p>\n<p>2) data-toggle=”collapse” data-parent=”…”&nbsp; (simple accordion)</p>\n<p>&nbsp;</p>\n"},{"title":"[Bootstrap] - 基础 - 2","id":"212","date":"2017-02-20T08:40:03.000Z","_content":"\n1\\. tabs, pills\n\n1) &lt;ul class=\"nav nav-tabs\"&gt;, &lt;ul class=\"nav, nav-pills\"&gt;\n\n2) &lt;li&gt;&lt;a data-toggle=\"tab\" href=\"#p\"&gt;&lt;/a&gt;&lt;/li&gt;\n\n3) &lt;div class=\"tab-content\"&gt;&lt;p id=\"p\" class=\"tab-pane\"&gt;&lt;/p&gt;&lt;/div&gt;\n\n2\\. navbar&nbsp;\n\n1) &lt;ul class=\"nav navbar-default\"&gt; navbar-nav/navbar-right\n\n3\\. form\n\n1) .form-inline\n\n2) .radio-inline .checkbox-inline\n\n3) .input-group .input-group-addon\n\n4) .inputlg .inputdefault .inputsm\n\n4.&nbsp;Carousel\n\n1) &lt;div id=\"c\" class=\"carousel slide\" data-ride=\"carousel\"&gt; &nbsp;//data-ride -start animation now\n\n2) &lt;ol class=\"carousel-indicator\"&gt;&lt;li data-target=\"#c\" data-slide-to=\"0\"&gt;&lt;/li&gt;&lt;/ol&gt;\n\n3) &lt;div class=\"carousel-inner\"&gt;&lt;div class=\"item\"&gt;&lt;/div&gt;&lt;/div&gt;\n\n4) &lt;a class=\"left carousel-control\" data-target=\"#c\" role=\"button\" data-slide=\"prev\"&gt;&lt;/a&gt;\n","source":"_drafts/Bootstrap/Bootstrap - 基础 - 2.md","raw":"---\ntitle: '[Bootstrap] - 基础 - 2'\nid: 212\ncategories:\n  - 学海无涯我游啊游\n  - HTML/css（HTML5/css3)\ndate: 2017-02-20 16:40:03\ntags:\n---\n\n1\\. tabs, pills\n\n1) &lt;ul class=\"nav nav-tabs\"&gt;, &lt;ul class=\"nav, nav-pills\"&gt;\n\n2) &lt;li&gt;&lt;a data-toggle=\"tab\" href=\"#p\"&gt;&lt;/a&gt;&lt;/li&gt;\n\n3) &lt;div class=\"tab-content\"&gt;&lt;p id=\"p\" class=\"tab-pane\"&gt;&lt;/p&gt;&lt;/div&gt;\n\n2\\. navbar&nbsp;\n\n1) &lt;ul class=\"nav navbar-default\"&gt; navbar-nav/navbar-right\n\n3\\. form\n\n1) .form-inline\n\n2) .radio-inline .checkbox-inline\n\n3) .input-group .input-group-addon\n\n4) .inputlg .inputdefault .inputsm\n\n4.&nbsp;Carousel\n\n1) &lt;div id=\"c\" class=\"carousel slide\" data-ride=\"carousel\"&gt; &nbsp;//data-ride -start animation now\n\n2) &lt;ol class=\"carousel-indicator\"&gt;&lt;li data-target=\"#c\" data-slide-to=\"0\"&gt;&lt;/li&gt;&lt;/ol&gt;\n\n3) &lt;div class=\"carousel-inner\"&gt;&lt;div class=\"item\"&gt;&lt;/div&gt;&lt;/div&gt;\n\n4) &lt;a class=\"left carousel-control\" data-target=\"#c\" role=\"button\" data-slide=\"prev\"&gt;&lt;/a&gt;\n","slug":"Bootstrap/Bootstrap - 基础 - 2","published":0,"updated":"2018-11-27T02:45:08.991Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy456owj0003gxv2tqf5reho","content":"<p>1. tabs, pills</p>\n<p>1) &lt;ul class=”nav nav-tabs”&gt;, &lt;ul class=”nav, nav-pills”&gt;</p>\n<p>2) &lt;li&gt;&lt;a data-toggle=”tab” href=”#p”&gt;&lt;/a&gt;&lt;/li&gt;</p>\n<p>3) &lt;div class=”tab-content”&gt;&lt;p id=”p” class=”tab-pane”&gt;&lt;/p&gt;&lt;/div&gt;</p>\n<p>2. navbar&nbsp;</p>\n<p>1) &lt;ul class=”nav navbar-default”&gt; navbar-nav/navbar-right</p>\n<p>3. form</p>\n<p>1) .form-inline</p>\n<p>2) .radio-inline .checkbox-inline</p>\n<p>3) .input-group .input-group-addon</p>\n<p>4) .inputlg .inputdefault .inputsm</p>\n<p>4.&nbsp;Carousel</p>\n<p>1) &lt;div id=”c” class=”carousel slide” data-ride=”carousel”&gt; &nbsp;//data-ride -start animation now</p>\n<p>2) &lt;ol class=”carousel-indicator”&gt;&lt;li data-target=”#c” data-slide-to=”0”&gt;&lt;/li&gt;&lt;/ol&gt;</p>\n<p>3) &lt;div class=”carousel-inner”&gt;&lt;div class=”item”&gt;&lt;/div&gt;&lt;/div&gt;</p>\n<p>4) &lt;a class=”left carousel-control” data-target=”#c” role=”button” data-slide=”prev”&gt;&lt;/a&gt;</p>\n","site":{"data":{}},"excerpt":"","more":"<p>1. tabs, pills</p>\n<p>1) &lt;ul class=”nav nav-tabs”&gt;, &lt;ul class=”nav, nav-pills”&gt;</p>\n<p>2) &lt;li&gt;&lt;a data-toggle=”tab” href=”#p”&gt;&lt;/a&gt;&lt;/li&gt;</p>\n<p>3) &lt;div class=”tab-content”&gt;&lt;p id=”p” class=”tab-pane”&gt;&lt;/p&gt;&lt;/div&gt;</p>\n<p>2. navbar&nbsp;</p>\n<p>1) &lt;ul class=”nav navbar-default”&gt; navbar-nav/navbar-right</p>\n<p>3. form</p>\n<p>1) .form-inline</p>\n<p>2) .radio-inline .checkbox-inline</p>\n<p>3) .input-group .input-group-addon</p>\n<p>4) .inputlg .inputdefault .inputsm</p>\n<p>4.&nbsp;Carousel</p>\n<p>1) &lt;div id=”c” class=”carousel slide” data-ride=”carousel”&gt; &nbsp;//data-ride -start animation now</p>\n<p>2) &lt;ol class=”carousel-indicator”&gt;&lt;li data-target=”#c” data-slide-to=”0”&gt;&lt;/li&gt;&lt;/ol&gt;</p>\n<p>3) &lt;div class=”carousel-inner”&gt;&lt;div class=”item”&gt;&lt;/div&gt;&lt;/div&gt;</p>\n<p>4) &lt;a class=”left carousel-control” data-target=”#c” role=”button” data-slide=”prev”&gt;&lt;/a&gt;</p>\n"},{"date":"2019-03-15T08:51:34.000Z","title":"COCO 寻梦环游记","_content":"\n\n## COCO 寻梦环游记\n\n终于二刷。\n\n墨西哥，亡灵节，梦想，家人。故事远不止寻梦，但是中文的名字加上海报里的吉他很容易让人误解这是一个动画版的好声音故事。\n\n米格，男主，蠢萌属性，歌神后代，鞋匠世家。故事基本都是围绕他展开，家庭内主要的矛盾也是在他身上爆发出来——米格喜欢唱歌，且唱的很好听（毕竟如果唱得难听故事也推不动，不过他家基因确实强，祖上好几代都禁止唱歌，到他这儿歌神基因还屹立不倒 :) <- 来自音痴礼貌的围笑），但家里不让唱：大致的原因是，他的曾曾曾（几个曾来着）爷爷为了音乐出去唱巡回了，一直没有回来，于是曾曾曾祖母一个人把家庭撑了起来，而且发扬了鞋匠的技艺，逐渐米格家变成了世代制鞋的家族，而且由于这件事情曾曾曾祖母禁止家里有音乐出现，并把那个负心汉的照片丢掉，从家里除名了。于是米格的音乐梦想一直在地下进行，偷偷用吉他跟着他崇拜的歌神学。一直到亡灵节这一天他发现歌神是自己的那个曾曾曾祖父，于是他拿着吉他和家人说出了自己的梦想。\n\n然并卵，吉他被砸了，小哭宝离家出走了。\n\n之后米格偷取歌神的吉他要去参加比赛，却阴差阳错地来到了亡灵之地。他看到了无数亡灵，其中包括自己的家人。米格需要得到家人的祝福才能回到自己的世界，但是家人可以在祝福里加上任何条件。在他的曾曾曾祖母加上了不许米格碰音乐的条件之后，米格决定去找自己的曾曾曾爷爷——歌神（他以为的曾曾曾爷爷）。最后他发现歌神不是自己的曾曾曾爷爷，而是谋杀了曾曾曾爷爷并盗用他的词曲而成名的小人，而米格的曾曾曾爷爷是一直想通过万寿菊桥去看望女儿coco的诶里克，但因为家里没有供奉他的照片他无法通过，<-这段讲出来有点乱，反正就是小米格认贼作父然后幡然悔悟了。\n\n---\n\n***为了梦想，我可以放弃一切。***\n\n***因为你不曾失去。***\n\n第一次看的时候觉得米格为了自己的梦想一往无前很感人，但是这次居然开始觉得他有点熊，发生这个想法的点是在他怒吼自己曾曾曾祖母的时候：“我有自己的梦想，你这是在害我，你们从来不懂！”然后再一次逃离了自己的家人。仔细想想，能够以梦想的名义放弃一切的人往往没有失去过什么，他们没有经历食不果腹，没有操心什么柴米油盐，所以才能振振有词，大言不惭。后来听到了米格曾曾曾祖母唱歌更觉得心酸。是啊，梦想，热爱，我怎么会不懂。我也曾为歌唱忘食废寝，我知道月亮曾经代表谁的心，我也唱过四季和愁绪。可是终于有一天，睡意来袭，而我饥肠辘辘，我终于看见现实把跨不过的山海放在我面前，我终于妥协，和解，平静。其实，说得出“我可以为梦想放弃一切”的人到底是幸福的，至少你有一些什么可以放弃。\n\n---\n\n***你可以不原谅他，但你不能忘了他。***\n\n这句话是米格对曾曾曾祖母说的，劝说她帮助诶里克去抢回照片。一直以为爱的反面是恨，其实不是，爱的反面是遗忘。死去的人只能凭借我们的记忆再存在于这个世界这个设定真的很感人，听到只要coco忘记诶里克他就会从冥界消失也让人很难过，他在这一天假扮了无数人，讨好了无数人，为了去见自己的女儿一面，最后他们又注定见不上彼此一面。一个人真正从这个世界消失，是世界上没有一个人再记得他的故事，没有一个角落能听到他的传说。他死了，就像没有存在过。所以我们才有这么多关于死亡、鬼魂、重生的故事，所以我们才有这么多祭奠、祈求的习俗。曾经有人说，清明节的习俗其实是告诉活着的人在以后也要这么去凭吊自己的亲人。这话是有道理的，我们都不希望自己不留痕迹地离去，所以用力地活着，用力地去留下自己存在过的证据。\n\n---\n\n***我们把祝福送给你。***\n\n***没有任何条件。***\n\n这段是米格的曾曾曾祖父和曾曾曾祖母一起对他说的。他们在看到将要日出的时候，唯一的想法就是把米格安全送回去。曾曾曾祖母不再纠结于对米格音乐梦想的限制，诶里克甚至也放弃了找回照片去看望coco的愿望。看吧，他们到底还是爱你的。最终他们也能接受你的面貌，忘记你的罪恶，忘记社会的公序良俗，忘记自己一生的愿望。他们希望你幸福，希望你快乐。只是有时候，他们会告诉你一些方法，会给你指一条路。如果这和你心里所盼望的不一样，你不要抱怨和责怪。他们只是希望你走得顺利一些，平稳一些。\n\n\n","source":"_posts/只言片语/coco.md","raw":"---\ndate: 2019-03-15 16:51:34\ncategories:\n  - 长叨叨\ntitle: COCO 寻梦环游记\ntags:\n---\n\n\n## COCO 寻梦环游记\n\n终于二刷。\n\n墨西哥，亡灵节，梦想，家人。故事远不止寻梦，但是中文的名字加上海报里的吉他很容易让人误解这是一个动画版的好声音故事。\n\n米格，男主，蠢萌属性，歌神后代，鞋匠世家。故事基本都是围绕他展开，家庭内主要的矛盾也是在他身上爆发出来——米格喜欢唱歌，且唱的很好听（毕竟如果唱得难听故事也推不动，不过他家基因确实强，祖上好几代都禁止唱歌，到他这儿歌神基因还屹立不倒 :) <- 来自音痴礼貌的围笑），但家里不让唱：大致的原因是，他的曾曾曾（几个曾来着）爷爷为了音乐出去唱巡回了，一直没有回来，于是曾曾曾祖母一个人把家庭撑了起来，而且发扬了鞋匠的技艺，逐渐米格家变成了世代制鞋的家族，而且由于这件事情曾曾曾祖母禁止家里有音乐出现，并把那个负心汉的照片丢掉，从家里除名了。于是米格的音乐梦想一直在地下进行，偷偷用吉他跟着他崇拜的歌神学。一直到亡灵节这一天他发现歌神是自己的那个曾曾曾祖父，于是他拿着吉他和家人说出了自己的梦想。\n\n然并卵，吉他被砸了，小哭宝离家出走了。\n\n之后米格偷取歌神的吉他要去参加比赛，却阴差阳错地来到了亡灵之地。他看到了无数亡灵，其中包括自己的家人。米格需要得到家人的祝福才能回到自己的世界，但是家人可以在祝福里加上任何条件。在他的曾曾曾祖母加上了不许米格碰音乐的条件之后，米格决定去找自己的曾曾曾爷爷——歌神（他以为的曾曾曾爷爷）。最后他发现歌神不是自己的曾曾曾爷爷，而是谋杀了曾曾曾爷爷并盗用他的词曲而成名的小人，而米格的曾曾曾爷爷是一直想通过万寿菊桥去看望女儿coco的诶里克，但因为家里没有供奉他的照片他无法通过，<-这段讲出来有点乱，反正就是小米格认贼作父然后幡然悔悟了。\n\n---\n\n***为了梦想，我可以放弃一切。***\n\n***因为你不曾失去。***\n\n第一次看的时候觉得米格为了自己的梦想一往无前很感人，但是这次居然开始觉得他有点熊，发生这个想法的点是在他怒吼自己曾曾曾祖母的时候：“我有自己的梦想，你这是在害我，你们从来不懂！”然后再一次逃离了自己的家人。仔细想想，能够以梦想的名义放弃一切的人往往没有失去过什么，他们没有经历食不果腹，没有操心什么柴米油盐，所以才能振振有词，大言不惭。后来听到了米格曾曾曾祖母唱歌更觉得心酸。是啊，梦想，热爱，我怎么会不懂。我也曾为歌唱忘食废寝，我知道月亮曾经代表谁的心，我也唱过四季和愁绪。可是终于有一天，睡意来袭，而我饥肠辘辘，我终于看见现实把跨不过的山海放在我面前，我终于妥协，和解，平静。其实，说得出“我可以为梦想放弃一切”的人到底是幸福的，至少你有一些什么可以放弃。\n\n---\n\n***你可以不原谅他，但你不能忘了他。***\n\n这句话是米格对曾曾曾祖母说的，劝说她帮助诶里克去抢回照片。一直以为爱的反面是恨，其实不是，爱的反面是遗忘。死去的人只能凭借我们的记忆再存在于这个世界这个设定真的很感人，听到只要coco忘记诶里克他就会从冥界消失也让人很难过，他在这一天假扮了无数人，讨好了无数人，为了去见自己的女儿一面，最后他们又注定见不上彼此一面。一个人真正从这个世界消失，是世界上没有一个人再记得他的故事，没有一个角落能听到他的传说。他死了，就像没有存在过。所以我们才有这么多关于死亡、鬼魂、重生的故事，所以我们才有这么多祭奠、祈求的习俗。曾经有人说，清明节的习俗其实是告诉活着的人在以后也要这么去凭吊自己的亲人。这话是有道理的，我们都不希望自己不留痕迹地离去，所以用力地活着，用力地去留下自己存在过的证据。\n\n---\n\n***我们把祝福送给你。***\n\n***没有任何条件。***\n\n这段是米格的曾曾曾祖父和曾曾曾祖母一起对他说的。他们在看到将要日出的时候，唯一的想法就是把米格安全送回去。曾曾曾祖母不再纠结于对米格音乐梦想的限制，诶里克甚至也放弃了找回照片去看望coco的愿望。看吧，他们到底还是爱你的。最终他们也能接受你的面貌，忘记你的罪恶，忘记社会的公序良俗，忘记自己一生的愿望。他们希望你幸福，希望你快乐。只是有时候，他们会告诉你一些方法，会给你指一条路。如果这和你心里所盼望的不一样，你不要抱怨和责怪。他们只是希望你走得顺利一些，平稳一些。\n\n\n","slug":"只言片语/coco","published":1,"updated":"2019-07-15T09:32:38.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjy46w484000igxv24otm5rpn","content":"<h2 id=\"COCO-寻梦环游记\"><a href=\"#COCO-寻梦环游记\" class=\"headerlink\" title=\"COCO 寻梦环游记\"></a>COCO 寻梦环游记</h2><p>终于二刷。</p>\n<p>墨西哥，亡灵节，梦想，家人。故事远不止寻梦，但是中文的名字加上海报里的吉他很容易让人误解这是一个动画版的好声音故事。</p>\n<p>米格，男主，蠢萌属性，歌神后代，鞋匠世家。故事基本都是围绕他展开，家庭内主要的矛盾也是在他身上爆发出来——米格喜欢唱歌，且唱的很好听（毕竟如果唱得难听故事也推不动，不过他家基因确实强，祖上好几代都禁止唱歌，到他这儿歌神基因还屹立不倒 :) &lt;- 来自音痴礼貌的围笑），但家里不让唱：大致的原因是，他的曾曾曾（几个曾来着）爷爷为了音乐出去唱巡回了，一直没有回来，于是曾曾曾祖母一个人把家庭撑了起来，而且发扬了鞋匠的技艺，逐渐米格家变成了世代制鞋的家族，而且由于这件事情曾曾曾祖母禁止家里有音乐出现，并把那个负心汉的照片丢掉，从家里除名了。于是米格的音乐梦想一直在地下进行，偷偷用吉他跟着他崇拜的歌神学。一直到亡灵节这一天他发现歌神是自己的那个曾曾曾祖父，于是他拿着吉他和家人说出了自己的梦想。</p>\n<p>然并卵，吉他被砸了，小哭宝离家出走了。</p>\n<p>之后米格偷取歌神的吉他要去参加比赛，却阴差阳错地来到了亡灵之地。他看到了无数亡灵，其中包括自己的家人。米格需要得到家人的祝福才能回到自己的世界，但是家人可以在祝福里加上任何条件。在他的曾曾曾祖母加上了不许米格碰音乐的条件之后，米格决定去找自己的曾曾曾爷爷——歌神（他以为的曾曾曾爷爷）。最后他发现歌神不是自己的曾曾曾爷爷，而是谋杀了曾曾曾爷爷并盗用他的词曲而成名的小人，而米格的曾曾曾爷爷是一直想通过万寿菊桥去看望女儿coco的诶里克，但因为家里没有供奉他的照片他无法通过，&lt;-这段讲出来有点乱，反正就是小米格认贼作父然后幡然悔悟了。</p>\n<hr>\n<p><strong><em>为了梦想，我可以放弃一切。</em></strong></p>\n<p><strong><em>因为你不曾失去。</em></strong></p>\n<p>第一次看的时候觉得米格为了自己的梦想一往无前很感人，但是这次居然开始觉得他有点熊，发生这个想法的点是在他怒吼自己曾曾曾祖母的时候：“我有自己的梦想，你这是在害我，你们从来不懂！”然后再一次逃离了自己的家人。仔细想想，能够以梦想的名义放弃一切的人往往没有失去过什么，他们没有经历食不果腹，没有操心什么柴米油盐，所以才能振振有词，大言不惭。后来听到了米格曾曾曾祖母唱歌更觉得心酸。是啊，梦想，热爱，我怎么会不懂。我也曾为歌唱忘食废寝，我知道月亮曾经代表谁的心，我也唱过四季和愁绪。可是终于有一天，睡意来袭，而我饥肠辘辘，我终于看见现实把跨不过的山海放在我面前，我终于妥协，和解，平静。其实，说得出“我可以为梦想放弃一切”的人到底是幸福的，至少你有一些什么可以放弃。</p>\n<hr>\n<p><strong><em>你可以不原谅他，但你不能忘了他。</em></strong></p>\n<p>这句话是米格对曾曾曾祖母说的，劝说她帮助诶里克去抢回照片。一直以为爱的反面是恨，其实不是，爱的反面是遗忘。死去的人只能凭借我们的记忆再存在于这个世界这个设定真的很感人，听到只要coco忘记诶里克他就会从冥界消失也让人很难过，他在这一天假扮了无数人，讨好了无数人，为了去见自己的女儿一面，最后他们又注定见不上彼此一面。一个人真正从这个世界消失，是世界上没有一个人再记得他的故事，没有一个角落能听到他的传说。他死了，就像没有存在过。所以我们才有这么多关于死亡、鬼魂、重生的故事，所以我们才有这么多祭奠、祈求的习俗。曾经有人说，清明节的习俗其实是告诉活着的人在以后也要这么去凭吊自己的亲人。这话是有道理的，我们都不希望自己不留痕迹地离去，所以用力地活着，用力地去留下自己存在过的证据。</p>\n<hr>\n<p><strong><em>我们把祝福送给你。</em></strong></p>\n<p><strong><em>没有任何条件。</em></strong></p>\n<p>这段是米格的曾曾曾祖父和曾曾曾祖母一起对他说的。他们在看到将要日出的时候，唯一的想法就是把米格安全送回去。曾曾曾祖母不再纠结于对米格音乐梦想的限制，诶里克甚至也放弃了找回照片去看望coco的愿望。看吧，他们到底还是爱你的。最终他们也能接受你的面貌，忘记你的罪恶，忘记社会的公序良俗，忘记自己一生的愿望。他们希望你幸福，希望你快乐。只是有时候，他们会告诉你一些方法，会给你指一条路。如果这和你心里所盼望的不一样，你不要抱怨和责怪。他们只是希望你走得顺利一些，平稳一些。</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"COCO-寻梦环游记\"><a href=\"#COCO-寻梦环游记\" class=\"headerlink\" title=\"COCO 寻梦环游记\"></a>COCO 寻梦环游记</h2><p>终于二刷。</p>\n<p>墨西哥，亡灵节，梦想，家人。故事远不止寻梦，但是中文的名字加上海报里的吉他很容易让人误解这是一个动画版的好声音故事。</p>\n<p>米格，男主，蠢萌属性，歌神后代，鞋匠世家。故事基本都是围绕他展开，家庭内主要的矛盾也是在他身上爆发出来——米格喜欢唱歌，且唱的很好听（毕竟如果唱得难听故事也推不动，不过他家基因确实强，祖上好几代都禁止唱歌，到他这儿歌神基因还屹立不倒 :) &lt;- 来自音痴礼貌的围笑），但家里不让唱：大致的原因是，他的曾曾曾（几个曾来着）爷爷为了音乐出去唱巡回了，一直没有回来，于是曾曾曾祖母一个人把家庭撑了起来，而且发扬了鞋匠的技艺，逐渐米格家变成了世代制鞋的家族，而且由于这件事情曾曾曾祖母禁止家里有音乐出现，并把那个负心汉的照片丢掉，从家里除名了。于是米格的音乐梦想一直在地下进行，偷偷用吉他跟着他崇拜的歌神学。一直到亡灵节这一天他发现歌神是自己的那个曾曾曾祖父，于是他拿着吉他和家人说出了自己的梦想。</p>\n<p>然并卵，吉他被砸了，小哭宝离家出走了。</p>\n<p>之后米格偷取歌神的吉他要去参加比赛，却阴差阳错地来到了亡灵之地。他看到了无数亡灵，其中包括自己的家人。米格需要得到家人的祝福才能回到自己的世界，但是家人可以在祝福里加上任何条件。在他的曾曾曾祖母加上了不许米格碰音乐的条件之后，米格决定去找自己的曾曾曾爷爷——歌神（他以为的曾曾曾爷爷）。最后他发现歌神不是自己的曾曾曾爷爷，而是谋杀了曾曾曾爷爷并盗用他的词曲而成名的小人，而米格的曾曾曾爷爷是一直想通过万寿菊桥去看望女儿coco的诶里克，但因为家里没有供奉他的照片他无法通过，&lt;-这段讲出来有点乱，反正就是小米格认贼作父然后幡然悔悟了。</p>\n<hr>\n<p><strong><em>为了梦想，我可以放弃一切。</em></strong></p>\n<p><strong><em>因为你不曾失去。</em></strong></p>\n<p>第一次看的时候觉得米格为了自己的梦想一往无前很感人，但是这次居然开始觉得他有点熊，发生这个想法的点是在他怒吼自己曾曾曾祖母的时候：“我有自己的梦想，你这是在害我，你们从来不懂！”然后再一次逃离了自己的家人。仔细想想，能够以梦想的名义放弃一切的人往往没有失去过什么，他们没有经历食不果腹，没有操心什么柴米油盐，所以才能振振有词，大言不惭。后来听到了米格曾曾曾祖母唱歌更觉得心酸。是啊，梦想，热爱，我怎么会不懂。我也曾为歌唱忘食废寝，我知道月亮曾经代表谁的心，我也唱过四季和愁绪。可是终于有一天，睡意来袭，而我饥肠辘辘，我终于看见现实把跨不过的山海放在我面前，我终于妥协，和解，平静。其实，说得出“我可以为梦想放弃一切”的人到底是幸福的，至少你有一些什么可以放弃。</p>\n<hr>\n<p><strong><em>你可以不原谅他，但你不能忘了他。</em></strong></p>\n<p>这句话是米格对曾曾曾祖母说的，劝说她帮助诶里克去抢回照片。一直以为爱的反面是恨，其实不是，爱的反面是遗忘。死去的人只能凭借我们的记忆再存在于这个世界这个设定真的很感人，听到只要coco忘记诶里克他就会从冥界消失也让人很难过，他在这一天假扮了无数人，讨好了无数人，为了去见自己的女儿一面，最后他们又注定见不上彼此一面。一个人真正从这个世界消失，是世界上没有一个人再记得他的故事，没有一个角落能听到他的传说。他死了，就像没有存在过。所以我们才有这么多关于死亡、鬼魂、重生的故事，所以我们才有这么多祭奠、祈求的习俗。曾经有人说，清明节的习俗其实是告诉活着的人在以后也要这么去凭吊自己的亲人。这话是有道理的，我们都不希望自己不留痕迹地离去，所以用力地活着，用力地去留下自己存在过的证据。</p>\n<hr>\n<p><strong><em>我们把祝福送给你。</em></strong></p>\n<p><strong><em>没有任何条件。</em></strong></p>\n<p>这段是米格的曾曾曾祖父和曾曾曾祖母一起对他说的。他们在看到将要日出的时候，唯一的想法就是把米格安全送回去。曾曾曾祖母不再纠结于对米格音乐梦想的限制，诶里克甚至也放弃了找回照片去看望coco的愿望。看吧，他们到底还是爱你的。最终他们也能接受你的面貌，忘记你的罪恶，忘记社会的公序良俗，忘记自己一生的愿望。他们希望你幸福，希望你快乐。只是有时候，他们会告诉你一些方法，会给你指一条路。如果这和你心里所盼望的不一样，你不要抱怨和责怪。他们只是希望你走得顺利一些，平稳一些。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjxfpgr6q0006n9v2bs8mj6sd","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgr6y000fn9v2qy5kfwc4"},{"post_id":"cjxfpgr6q0006n9v2bs8mj6sd","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgr70000hn9v2mlv8ryds"},{"post_id":"cjxfpgr6u000bn9v21mvrwhyg","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgr70000in9v2j17te99x"},{"post_id":"cjxfpgr6u000bn9v21mvrwhyg","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgr70000jn9v2s0ants9i"},{"post_id":"cjxfpgr6m0002n9v205s05obf","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgr70000kn9v2x6eeg3fn"},{"post_id":"cjxfpgr6m0002n9v205s05obf","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgr71000ln9v2d79qpgoy"},{"post_id":"cjxfpgrc7000qn9v27bm5lh1g","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcb000vn9v2n6uctbev"},{"post_id":"cjxfpgrc7000qn9v27bm5lh1g","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjxfpgrcc000yn9v22nm91836"},{"post_id":"cjxfpgrc8000rn9v23npcx2g3","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrce0015n9v29apaq7lo"},{"post_id":"cjxfpgrc8000rn9v23npcx2g3","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjxfpgrcf0018n9v2m7rdyyjm"},{"post_id":"cjxfpgrc6000on9v2zu83z3b0","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrci001fn9v2seepceet"},{"post_id":"cjxfpgrc6000on9v2zu83z3b0","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjxfpgrcj001in9v2usp1wurr"},{"post_id":"cjxfpgrc9000tn9v2il9nqnve","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrck001kn9v2d19va4y8"},{"post_id":"cjxfpgrc9000tn9v2il9nqnve","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcl001nn9v21s1urdrl"},{"post_id":"cjxfpgrce0014n9v2suttl19l","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcl001on9v2b55zl463"},{"post_id":"cjxfpgrce0014n9v2suttl19l","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjxfpgrcm001qn9v28lceht1h"},{"post_id":"cjxfpgrce0017n9v231cs3xjr","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm001rn9v20mxizvfb"},{"post_id":"cjxfpgrce0017n9v231cs3xjr","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgrcm001sn9v2c5nuh9gc"},{"post_id":"cjxfpgrca000un9v20r73hkkh","category_id":"cjxfpgrce0016n9v2ny4z0o9t","_id":"cjxfpgrcm001tn9v200i10l6c"},{"post_id":"cjxfpgrcf0019n9v2svo5twxx","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm001un9v2xdcomdbs"},{"post_id":"cjxfpgrcf0019n9v2svo5twxx","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgrcm001vn9v2umkjbsgd"},{"post_id":"cjxfpgrcg001cn9v2nsiglne1","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm001wn9v2oazw528m"},{"post_id":"cjxfpgrcg001cn9v2nsiglne1","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcm001xn9v27sfw1tqp"},{"post_id":"cjxfpgrcb000xn9v20eo1486y","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm001yn9v282vrfezr"},{"post_id":"cjxfpgrcb000xn9v20eo1486y","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcm001zn9v236hpe092"},{"post_id":"cjxfpgrch001en9v2bf6by92o","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcm0020n9v2f1nhn0r5"},{"post_id":"cjxfpgrch001en9v2bf6by92o","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcm0021n9v208kpoyou"},{"post_id":"cjxfpgrci001hn9v2tar86kf9","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcn0022n9v27fa5bwcr"},{"post_id":"cjxfpgrci001hn9v2tar86kf9","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcn0023n9v2oxxr5497"},{"post_id":"cjxfpgrcc000zn9v26fpcttzw","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcn0024n9v26v07exub"},{"post_id":"cjxfpgrcc000zn9v26fpcttzw","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjxfpgrcn0025n9v2nzoagnyf"},{"post_id":"cjxfpgrcj001jn9v2tm5i859k","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcn0026n9v23kk1ggyh"},{"post_id":"cjxfpgrcj001jn9v2tm5i859k","category_id":"cjxfpgr6t0009n9v2x5yjum6a","_id":"cjxfpgrcn0027n9v2ggrirvrr"},{"post_id":"cjxfpgrck001mn9v2rjjhspix","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjxfpgrcn0029n9v296aux035"},{"post_id":"cjy456orq0000gxv291mlfvja","category_id":"cjxfpgrck001ln9v2ors24ewq","_id":"cjy456os10001gxv2w03lcq2h"},{"post_id":"cjy456owh0002gxv2bnjehiij","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjy456owm0004gxv2brn6k7iy"},{"post_id":"cjy456owh0002gxv2bnjehiij","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjy456owm0005gxv2s6kesmg9"},{"post_id":"cjy456owj0003gxv2tqf5reho","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjy456owm0006gxv2qcp1v2k3"},{"post_id":"cjy456owj0003gxv2tqf5reho","category_id":"cjxfpgrc7000pn9v2vebztxov","_id":"cjy456owm0007gxv25g9cgadm"},{"post_id":"cjxfpgrck001mn9v2rjjhspix","category_id":"cjxfpgrcd0011n9v2j4mb6zwr","_id":"cjy45dgmn0009gxv2wc1baw0g"},{"post_id":"cjxfpgr6z000gn9v2mr00se23","category_id":"cjxfpgr6p0004n9v27d0r6avc","_id":"cjy46trcl000dgxv2evrnsfl7"},{"post_id":"cjxfpgr6z000gn9v2mr00se23","category_id":"cjy46v25k000ggxv2gl3tlcms","_id":"cjy46v25l000hgxv2fbx3bm9b"},{"post_id":"cjy46w484000igxv24otm5rpn","category_id":"cjxfpgrce0016n9v2ny4z0o9t","_id":"cjy46w486000jgxv28xbatxak"}],"PostTag":[],"Tag":[]}}